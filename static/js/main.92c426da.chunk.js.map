{"version":3,"sources":["Components/Card/images/cards/lov.svg","Contexts/BreakpointProvider/index.js","Components/Buttons/index.js","Components/Select/index.js","Components/Dashboard/index.js","Components/ContentSection/index.js","Components/Card/index.js","utils/styleVariables.js","Components/PileStock/index.js","Components/PileFoundation/index.js","Components/Pile/index.js","Components/PileTableau/index.js","Components/Games/Spider/index.js","Components/PileWaste/index.js","Components/Games/Klondike/index.js","Components/Games/Yukon/index.js","reducers/yatzy/selectors/index.js","Components/YatzyDashboard/index.js","Components/Games/Yatzy/index.js","Components/App/index.js","reducers/undoable.js","utils/spades.js","utils/diamonds.js","utils/hearts.js","utils/clubs.js","utils/index.js","reducers/klondikeReducer.js","reducers/spiderReducer.js","reducers/yukonReducer.js","reducers/yatzy/dices.js","reducers/yatzy/protocol.js","reducers/yatzy/highscore.js","reducers/yatzy/index.js","reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","defaultValue","BreakpointContext","createContext","BreakpointProvider","children","queries","defaultTofirstIndexQuery","Object","keys","reduce","acc","media","index","useState","queryMatch","setQueryMatch","useEffect","mediaQueryLists","isAttached","handleQueryListener","updatedMatches","matches","window","matchMedia","forEach","addListener","removeListener","Provider","value","ButtonStylesWhenError","css","ButtonStylesWhenSuccessful","Button","styled","button","props","theme","primaryColor","primaryTextColor","padding","borderRadius","ButtonStyled","hover","primaryEnhancer","error","success","ButtonPrimaryAction","ButtonSecondaryAction","secondaryColor","Select","select","DashboardStyled","section","ActionList","breakpoints","l","Option","option","Dashboard","undo","redeal","games","selectedGame","setSelectedGame","onClick","onChange","e","target","values","map","game","key","ContentSection","Card","div","CardFan","cardIndex","CardFaceUp","id","suite","label","moreProps","idValue","match","valueOffset","suiteOffset","style","overflow","paddingBottom","height","border","backgroundColor","maxWidth","width","margin","alt","src","sprite","CardFaceDown","CardEmpty","CardDroppable","data","dropHandler","onDragOver","ev","preventDefault","onDrop","dataFromTransfer","dataTransfer","getData","JSON","parse","React","Children","child","cloneElement","CardDraggable","onDragStart","setData","stringify","setDragImage","currentTarget","stopPropagation","CardToggleFaceUp","isFaceUp","PileStock","pile","reRunDeck","length","card","PileFoundationDropppable","pileId","cardComponent","destinationPile","PileFoundation","Pile","minHeight","PileGroup","PileTableau","pileKey","result","createRecursiveList","list","rest","dragAndDropData","cardIndexInPile","sourcePile","draggable","cardList","connect","state","spider","present","foundationPilesKeys","tableauPilesKeys","dispatch","stockClickHandler","payload","type","tableauClickHandler","tableauDropHandler","context","useContext","Error","useBreakpoint","onDropTableau","dropData","dragData","onClickTableau","clickData","hasWon","smBP","find","nrOfColumns","Math","max","maxNrOfCardsInTableau","mem","gapSize","columns","gap","stock","PileWaste","clickAndDragData","klondike","wasteClickHandler","foundationDropHandler","onDropFoundation","className","waste","yukon","Fragment","getProtocol","protocol","getCurrentRoundCombination","createSelector","dices","cb","getBonus","total","isUsed","UPPER_SECTION","isValid","currentSum","getCurrentProtocol","combintationHelper","bonus","item","used","valid","sum","getTotal","currentItem","getIsGameFinished","yatzyState","yatzyReducer","userReducer","userState","yatzy","highScore","gameFinished","userName","name","onNewGameClick","gameFinishedHandler","score","DiceBoard","Dice","Wrapper","Container","Protocol","ProtocolKey","ProtocolValue","rollDices","toggleDice","setProtocolItemSum","protocolItem","availableRolls","diceClickHandler","onProtocolValueClick","obj","bind","disabled","i","shouldReRoll","color","dangerouslySetInnerHTML","__html","xs","sm","md","or","GAMES","YUKON","KLONDIKE","SPIDER","YATZY","getSelectedGameComponent","baseSize","selectedGameComponent","undoable","reducer","initialState","past","undefined","future","action","previous","newPast","slice","next","newFuture","newPresent","spades","diamonds","hearts","clubs","shuffleArray","array","temporaryValue","randomIndex","currentIndex","floor","random","setLastIsFaceUp","cards","reverse","last","allCards","setFaceIsUp","moveToPile","concat","moveFromPile","cardSourceIndex","p1","moved","grabCardsToBeMoved","remain","moveCardsBetweenPilesInState","cardIndexAtSource","sourcePileKey","destPileKey","newDestination","cardDropHandler","allowDropHandler","getLastCardInPile","createArrayWithKeys","keyName","nr","Array","fill","createEmptyPiles","piles","getCardsFromDeck","deck","nrOfCards","counter","min","push","pop","everyCardIsSameSuite","every","arrayToObject","init","flat","pileKeys","pilesWithCards","_","createTableauPilesFromDeck","checkHasWon","allowedFoundationPiles","filter","allowFoundationDrop","allowedTableauPiles","allowDropTableau","allowedPiles","allowedPile","cardsToBeMoved","destPile","cardToBeMoved","lastCardInPile","isSameSuite","isRightValue","firstCardToBeMoved","isOppositeColor","newStock","numberOfcards","cardsAtIndex","newTableau","tableauId","allIsSpades","moveToFoundationPile","potentialMove","prevCard","findIndex","foundationToMoveTo","findFirstAvailableFoundation","afterClickState","afterDropState","foundation","tableauPiles","klondikeDeal","indexCounter","dealtCard","rollDice","dice","toggleDiceRoll","initialDiceState","XOfAKindClass","nrOfKind","this","faceIndex","diceCount","getFaceValue","TwoPairs","combos","pairOfSame","pairArray","idx","SmallStraight","n","LargeStraight","FullHouse","hasFoundThree","hasFoundTwo","reduceRight","idx1","idx2","UpperSectionClass","faceValue","diceIndex","ones","twos","threes","fours","fives","sixes","onePair","twoPairs","threeOfAKind","fourOfAKind","smallStraight","largeStraight","fullHouse","chance","highscore","localState","localStorage","getItem","potHighScore","tmp","newHighscore","sort","a","b","setItem","combineReducers","solitaireApp","klondikeReducer","spiderReducer","yukonReducer","Boolean","location","hostname","store","createStore","rootReducer","composeWithDevTools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92c426da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lov.6c70873e.svg\";","import React, {\n  useState,\n  useEffect,\n  createContext,\n  useContext} from 'react';\n\nconst defaultValue = {}\n\nconst BreakpointContext = createContext(defaultValue);\n\nconst BreakpointProvider = ({children, queries}) => {\n  const defaultTofirstIndexQuery = Object.keys(queries).reduce((acc, media, index) => {\n    acc[media] = !index;\n    return acc;\n  }, {})\n  const [queryMatch, setQueryMatch] = useState(defaultTofirstIndexQuery);\n\n  useEffect(() => {\n    const mediaQueryLists = {};\n    const keys = Object.keys(queries);\n    let isAttached = false;\n\n    const handleQueryListener = () => {\n      const updatedMatches = keys.reduce((acc, media) => {\n        acc[media] = !!(mediaQueryLists[media] && mediaQueryLists[media].matches);\n        return acc;\n      }, {})\n      setQueryMatch(updatedMatches)\n    }\n\n    if (window && window.matchMedia) {\n      const matches = {};\n      keys.forEach(media => {\n        if (typeof queries[media] === 'string') {\n          mediaQueryLists[media] = window.matchMedia(queries[media]);\n          matches[media] = mediaQueryLists[media].matches\n        } else {\n          matches[media] = false\n        }\n      });\n      setQueryMatch(matches);\n      isAttached = true;\n      keys.forEach(media => {\n        if(typeof queries[media] === 'string') {\n          mediaQueryLists[media].addListener(handleQueryListener)\n        }\n      });\n    }\n\n    return () => {\n      if(isAttached) {\n        keys.forEach(media => {\n          if(typeof queries[media] === 'string') {\n            mediaQueryLists[media].removeListener(handleQueryListener)\n          }\n        });\n      }\n    }\n  }, [queries]);\n\n  return (\n    <BreakpointContext.Provider value={queryMatch}>\n      {children}\n    </BreakpointContext.Provider>\n  )\n\n}\n\nfunction useBreakpoint() {\n  const context = useContext(BreakpointContext);\n  if(context === defaultValue) {\n    throw new Error('useBreakpoint must be used within BreakpointProvider');\n  }\n  return context;\n}\nexport {useBreakpoint, BreakpointProvider};","import styled, { css } from 'styled-components';\n\nconst ButtonStylesWhenError = css`\n  background-color: red;\n  transition: all 0.5s ease-in;\n`;\n\nconst ButtonStylesWhenSuccessful = css`\n  background-color: green;\n  transition: all 0.5s ease-in;\n`;\n\nconst Button = styled.button`\n  border: none;\n  background-color: ${props => props.theme.primaryColor};\n  color: ${props => props.theme.primaryTextColor};\n  padding: ${props => props.theme.padding}rem;\n  border-radius: ${props => props.theme.borderRadius || 1}rem;\n  width: inherit;\n  transition: width 1s ease-in 0.3s;\n  cursor: pointer;\n  box-sizing: border-box;\n  font-size: inherit;\n  line-height: 1;\n  text-transform: uppercase;\n  text-align: center;\n  \n  &:focus {\n    outline: none;\n  }\n`;\n\nconst ButtonStyled = styled(Button)`\n  background-color: ${(props) => (props.hover ? props.theme.primaryEnhancer : props.theme.primaryColor)};\n\n  ${props => props.error ? ButtonStylesWhenError : ''}\n  ${props => props.success ? ButtonStylesWhenSuccessful : ''}\n`;\n\nconst ButtonStyledFullWidth = styled(ButtonStyled)`\n  width: 100%;\n`;\n\nconst ButtonPrimaryAction = styled(Button)`\n  &:hover {\n    background-color: ${props => props.theme.primaryEnhancer};\n  }\n`;\n\nconst ButtonSecondaryAction = styled(Button)`\n  background-color: transparent;\n  border: 0.06rem solid ${props => props.theme.secondaryColor};\n  color: ${props => props.theme.secondaryColor};\n\n  &:hover {\n    border-color: ${props => props.theme.primaryColor};\n    color: ${props => props.theme.primaryColor};\n  }\n`;\n\nconst ButtonTertiaryAction = styled(Button)`\n  background: none;\n  padding: 0;\n  text-align: left;\n  color: ${props => props.theme.primaryColor};\n`;\n\nexport {\n  Button,\n  ButtonStyled,\n  ButtonStyledFullWidth,\n  ButtonPrimaryAction,\n  ButtonSecondaryAction,\n  ButtonTertiaryAction,\n}","import styled from 'styled-components';\n\nconst Select = styled.select`\n  display: block;\n  margin: 0;\n \n  box-shadow: 0 1px 0 1px rgba(0,0,0,.04);\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  appearance: none;\n  background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E');\n  background-repeat: no-repeat, repeat;\n  background-position: right .7em top 50%, 0 0;\n  background-size: .65em auto, 100%;\n\n\n  background-color: transparent;\n  padding: ${props => props.theme.padding}rem;\n  border-radius: ${props => props.theme.borderRadius || 1}rem;\n  width: inherit;\n  transition: width 1s ease-in 0.3s;\n  cursor: pointer;\n  box-sizing: border-box;\n  font-size: inherit;\n  line-height: 1;\n  text-transform: uppercase;\n  text-align: center;\n\n  border: 0.06rem solid ${props => props.theme.secondaryColor};\n  color: ${props => props.theme.secondaryColor};\n\n  &:hover {\n    border-color: ${props => props.theme.primaryColor};\n    color: ${props => props.theme.primaryColor};\n  }\n\n  &:focus {\n    border-color: #aaa;\n    box-shadow: 0 0 1px 3px rgba(59, 153, 252, .7);\n    box-shadow: 0 0 0 3px -moz-mac-focusring;\n    color: #222;\n    outline: none;\n\n    border-color: ${props => props.theme.primaryColor};\n    color: ${props => props.theme.primaryColor};\n  }\n  \n  & > option {\n    font-weight:normal;\n  }\n`;\n\nexport {\n  Select,\n}","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Button, ButtonPrimaryAction, ButtonSecondaryAction } from 'Components/Buttons';\nimport { Select } from 'Components/Select';\n\nconst DashboardStyled = styled.section`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n\n  & > *:first-child {\n    flex: 2;\n  } \n\n  & > *:last-child {\n    flex: 1;\n  }\n`;\n\nconst ActionList = styled.section`\n  display: flex;\n  \n  & > ${Button} {\n    margin: 0 0.125em 0 0;\n  }\n\n  & > ${Button}:last-child {\n    margin-right: 0;\n  }\n\n  @media ${(props) => props.theme.breakpoints.l} {\n    & > ${Button} {\n      margin: 0 0.5em 0 0;\n    }\n  }\n`;\n\nconst Option = styled.option`\n  text-transform: capitalize;\n`\n\nconst Dashboard = ({undo, redeal, games, selectedGame, setSelectedGame}) => {\n  return (\n    <DashboardStyled>\n      <ActionList>\n        <ButtonSecondaryAction onClick={undo}>Undo</ButtonSecondaryAction>\n        <ButtonPrimaryAction onClick={redeal}>New Deal</ButtonPrimaryAction>\n      </ActionList>\n      <Select\n        value={selectedGame}\n        onChange={e => setSelectedGame(e.target.value)}\n      >\n        {Object.values(games).map((game) => (\n          <Option key={game} value={game}>\n            {game}\n          </Option>\n        ))}\n      </Select>\n    </DashboardStyled>\n  );\n}\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nconst ContentSection = styled.section`\n  background-color: rgba(255,255,255,0.7);\n  color: rgba(3,2,20,0.7);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex: 1 0 auto;\n  padding: 1em;\n`;\n\nexport default ContentSection;","import React from 'react';\nimport styled from 'styled-components';\nimport sprite from './images/cards/lov.svg';\n\nimport {\n  cardMinWidth,\n  cardMaxWidth,\n} from 'utils/styleVariables';\n\nconst Card = styled.div`\n  min-width: ${cardMinWidth}px;\n  max-width: ${cardMaxWidth}px;\n`;\n\nconst CardStacked = styled(Card)`\n  position: absolute;\n`;\n\nconst CardFan = styled.div`\n  position: absolute;\n  top: ${(props) => props.cardIndex === 0 ? 0 : 15}px;\n`;\n\nconst CardFaceUp = (props) => {\n  const { id, label, suite, onClick, ...moreProps } = props\n  if (!id) {\n    return <Card suite={suite}>Soemthings wrong with card</Card>;\n  }\n  const newId = id.match(/[a-z]+|[^a-z]+/gi);\n\n  let idValue = newId[1];\n  let value = moreProps.value;\n  if (idValue === '1') {\n    idValue = 'A';\n    value = 14;\n  }\n\n  if (idValue === '13') {\n    idValue = 'K';\n  }\n\n  if (idValue === '12') {\n    idValue = 'Q';\n  }\n\n  if (idValue === '11') {\n    idValue = 'J';\n  }\n\n  let valueOffset = `-${((value - 2))*100}%`;\n  let suiteOffset = 0;\n  if (suite === 'spades') {\n    suiteOffset = '1%';\n  } else if (suite === 'diamonds') {\n    suiteOffset = '-280%';\n  } else if (suite === 'clubs') {\n    suiteOffset = '-137%';\n  } else if (suite === 'hearts') {\n    suiteOffset = '-423%';\n  }\n\n  return (\n    <Card suite={suite} onClick={onClick} {...moreProps}>\n      <div style={{\n        overflow: 'hidden',\n        paddingBottom: '138%',\n        height: 0,\n        border: '1px solid papayawhip',\n        borderRadius: '3px',\n        backgroundColor: 'white',\n      }}>\n        <img\n          id={`${moreProps.value}-${suite}`}\n          style={{\n            maxWidth: '1400%',\n            width: '1400%',\n            margin: `${suiteOffset} 0 0 ${valueOffset}`,\n          }}\n          alt='card'\n          src={sprite}\n        />\n      </div>\n    </Card>\n  )\n} \n\nconst CardFaceDown = (props) => (\n  <Card {...props}>\n    <div style={{\n      overflow: 'hidden',\n      height: 0,\n      paddingBottom: '138%',\n      border: '1px solid papayawhip',\n      borderRadius: '3px',\n    }}>\n      <img\n        style={{\n          maxWidth: '1500%',\n          width: '1500%',\n          margin: '-162% 0 0 -1400%',\n        }}\n        alt='card'\n        src={sprite}\n      />\n    </div>\n  </Card>\n);\n\nconst CardEmpty = ({ onClick, ...props }) => (\n  <Card onClick={onClick} {...props}>\n    <div style={{\n      overflow: 'hidden',\n      height: 0,\n      paddingBottom: '138%',\n      border: '1px solid papayawhip',\n      borderRadius: '3px',\n    }}>\n      <img\n        style={{\n          maxWidth: '1500%',\n          width: '1500%',\n          margin: '0% 0 0 -1400%',\n        }}\n        alt='card'\n        src={sprite}\n      />\n    </div>\n  </Card>\n);\n\nconst CardDroppable = ({ children, data, dropHandler }) => {\n  const props = {\n    onDragOver: (ev) => {\n      ev.preventDefault();\n    },\n    onDrop: (ev) => {\n      ev.preventDefault();\n      const dataFromTransfer = ev.dataTransfer.getData(\"pip\");\n      dropHandler(data, JSON.parse(dataFromTransfer))\n    },\n  };\n\n  return React.Children.map(children, child => {\n    return React.cloneElement(child, props);\n  });\n};\n\nconst CardDraggable = ({ children, data, ...moreProps }) => {\n  const props = {\n    onDragStart: (ev) => {\n      ev.dataTransfer.setData(\"pip\", JSON.stringify(data));\n      ev.dataTransfer.setDragImage(ev.currentTarget, 50, 15);\n      ev.stopPropagation();\n    },\n    ...moreProps,\n  };\n\n  return React.Children.map(children, child => {\n    return React.cloneElement(child, props);\n  });\n};\n\nconst CardToggleFaceUp = ({ label, suite, isFaceUp, onClick, ...props }) => {\n  if (isFaceUp) {\n    return <CardFaceUp suite={suite} label={label} onClick={onClick} {...props} />;\n  }\n  return <CardFaceDown />;\n}\n\nexport {\n  Card,\n  CardFaceUp,\n  CardFaceDown,\n  CardEmpty,\n  CardFan,\n  CardStacked,\n  CardDroppable,\n  CardDraggable,\n  CardToggleFaceUp\n};\n","export const cardMinWidth = 30;\nexport const cardMaxWidth = 75;\n\nexport const cardFanOffset = 15;\n","import React from 'react';\n\nimport { CardFaceDown, CardEmpty } from 'Components/Card';\n\nconst PileStock = ({ pile, onClick, reRunDeck }) => {\n  if (pile.length === 0) {\n    return <CardEmpty onClick={reRunDeck} />\n  }\n  return (\n    <CardFaceDown onClick={() => onClick({ card: pile[0] })} />\n  );\n}\n\nexport default PileStock;\n","import React from 'react';\n\nimport { CardFaceUp } from 'Components/Card';\nimport { CardDroppable, CardEmpty } from 'Components/Card';\n\nexport const PileFoundationDropppable = ({ pile, pileId, onDrop }) => {\n  let cardComponent = null;\n  \n  if (pile.length === 0) {\n    cardComponent = <CardEmpty />\n  } else {\n    const card = pile[pile.length - 1];\n    cardComponent = <CardFaceUp {...card} />\n  }\n\n  return (\n    <CardDroppable\n      data={{ destinationPile: pileId }}\n      dropHandler={onDrop}\n    >\n      {cardComponent}\n    </CardDroppable>\n  )\n}\n\nconst PileFoundation = ({ pile, pileId }) => {\n  if (pile.length === 0) {\n    return <CardEmpty />;\n  }\n\n  const card = pile[pile.length - 1];\n  return (\n    <CardFaceUp {...card} />\n  )\n}\n\nexport default PileFoundation;\n","import styled from 'styled-components';\n\nimport {\n  cardMinWidth,\n  cardMaxWidth\n} from 'utils/styleVariables';\n\nconst Pile = styled.div`\n  min-width: ${cardMinWidth}px;\n  max-width: ${cardMaxWidth}px;\n  position: relative;\n  height: ${(props) => !!props.minHeight ? `${props.minHeight}px` : '100%'};\n\n  flex: 1 1 auto;\n`;\n\nexport const PileStack = styled.div`\n  min-width: ${cardMinWidth}px;\n  max-width: ${cardMaxWidth}px;\n\n  height: 100%;\n\n  flex: 1 1 auto;\n`;\n\nexport const PileEmpty = styled(Pile)`\n  border: 1px solid aliceblue;\n  box-sizing: border-box;\n`;\n\nexport const PileGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  \n  & > * {\n    margin: 0 0.5em 0 0;\n  }\n\n  & > *:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport default Pile;\n  // height: 5.17em;  should be a min height or someting from a \"pile\" ","import React from 'react';\n\nimport Pile from 'Components/Pile';\nimport {\n  CardFan,\n  CardDroppable,\n  CardDraggable,\n  CardToggleFaceUp,\n  CardEmpty,\n} from 'Components/Card';\n\nimport { cardFanOffset } from 'utils/styleVariables.js'\n\nconst PileTableau = ({ pile, pileKey, minHeight, onDrop, onClick }) => {\n  const createRecursiveList = (list, cardIndex) => {\n    const [card, ...rest] = list;\n    const dragAndDropData = { card, cardIndexInPile: cardIndex, sourcePile: pileKey };\n\n    if (rest.length === 0 && card) {\n      return (\n        <CardDroppable\n          key={card.key + pileKey}\n          data={{ destinationPile: pileKey }}\n          dropHandler={onDrop}\n        >\n          <CardDraggable\n            data={{ card, cardIndexInPile: cardIndex, sourcePile: pileKey }}\n            draggable={!!card.isFaceUp}\n          >\n            <CardFan cardIndex={cardIndex}>\n              <CardToggleFaceUp {...card} onClick={() => onClick(dragAndDropData)} />\n            </CardFan>\n          </CardDraggable>\n        </CardDroppable>\n      );\n    }\n\n    const cardList = createRecursiveList(rest, cardIndex + 1);\n    return (\n      <CardFan cardIndex={cardIndex}>\n        <CardDraggable\n          data={dragAndDropData}\n          draggable={!!card.isFaceUp}\n        >\n          <CardToggleFaceUp {...card} onClick={() => onClick(dragAndDropData)} />\n          {cardList}\n        </CardDraggable>\n      </CardFan>\n    );\n  }\n\n  if (pile.length === 0) {\n    return (\n      <CardDroppable\n        data={{ card: {}, cardIndex: 0, destinationPile: pileKey }}\n        dropHandler={onDrop}\n      >\n        <CardEmpty />\n      </CardDroppable>\n    )\n  }\n\n  const result = createRecursiveList(pile, 0);\n\n  return (\n    <Pile minHeight={cardFanOffset * minHeight + 125}>\n      {result}\n    </Pile>\n  );\n}\n\nexport default PileTableau;\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Grid, Cell } from 'styled-css-grid';\n\nimport { useBreakpoint } from 'Contexts/BreakpointProvider'\n\nimport ContentSection from 'Components/ContentSection';\nimport PileStock from 'Components/PileStock';\nimport PileFoundation from 'Components/PileFoundation';\nimport PileTableau from 'Components/PileTableau';\n\nimport './styles.css';\n\nexport function Spider(props) {\n  const {\n    game,\n    stockClickHandler,\n    tableauClickHandler,\n    tableauDropHandler,\n    foundationPilesKeys,\n    tableauPilesKeys,\n  } = props;\n\n  const breakpoints = useBreakpoint();\n\n  const onDropTableau = (dropData, dragData) => {\n    tableauDropHandler({ dropData, dragData })\n  }\n\n  const onStockClick = (clickData) => {\n    stockClickHandler(clickData);\n  }\n\n  const onClickTableau = (clickData) => {\n    tableauClickHandler(clickData)\n  }\n\n  if (game.hasWon) {\n    return (\n      <ContentSection>\n        CONGRATULATION YOU HAVE WON THE GAME\n      </ContentSection>\n    );\n  }\n\n  const smBP = Object.keys(breakpoints).find(key => breakpoints[key]);\n  const nrOfColumns = Math.max(tableauPilesKeys.length, foundationPilesKeys.length);\n  const maxNrOfCardsInTableau = tableauPilesKeys.reduce((mem, pileKey) => {\n    return Math.max(game[pileKey].length, mem);\n  }, 0);\n\n  let gapSize = '8px';\n  if (smBP === 'xs') {\n    gapSize = '2px';\n  }\n\n  return (\n    <Grid columns={1}>\n      <Cell>\n        <Grid columns={nrOfColumns} gap={gapSize}>\n          {foundationPilesKeys.map((pileKey) => {\n            const pile = game[pileKey];\n            return (\n              <PileFoundation\n                key={pileKey}\n                pile={pile}\n                pileId={pileKey}\n              />\n            )\n          })}\n        </Grid>\n      </Cell>\n      <Cell>\n        <Grid columns={nrOfColumns} gap={gapSize}>\n          <PileStock\n            onClick={onStockClick}\n            pile={game.stock}\n          />\n        </Grid>\n      </Cell>\n      <Cell>\n        <Grid columns={nrOfColumns} gap={gapSize}>\n          {tableauPilesKeys.map((pileKey) => {\n            const pile = game[pileKey];\n            return (\n              <PileTableau\n                key={pileKey}\n                pile={pile}\n                pileKey={pileKey}\n                onDrop={onDropTableau}\n                onClick={onClickTableau}\n                minHeight={maxNrOfCardsInTableau}\n              />\n            )\n          })}\n        </Grid>\n      </Cell>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = state => ({\n  game: state.spider.present,\n  foundationPilesKeys: state.spider.present.foundationPilesKeys,\n  tableauPilesKeys: state.spider.present.tableauPilesKeys,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  stockClickHandler: (payload) => dispatch({ type: 'SPIDER_CLICK_STOCK', payload }),\n  tableauClickHandler: (payload) => dispatch({ type: 'SPIDER_CLICK_TABLEAU', payload }),\n  tableauDropHandler: (payload) => dispatch({ type: 'SPIDER_DROP_TABLEAU', payload }),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Spider)\n","import React from 'react';\n\nimport { CardFaceUp } from 'Components/Card';\nimport { CardDraggable, CardEmpty } from 'Components/Card';\n\nconst PileWaste = ({ pile, onClick }) => {\n  if (pile.length === 0) {\n    return <CardEmpty />\n  }\n\n  const cardIndexInPile = pile.length - 1;\n  const card = pile[cardIndexInPile]\n  const clickAndDragData = { card, cardIndexInPile: cardIndexInPile, sourcePile: 'waste' };\n  return (\n    <CardDraggable\n      key={card.id}\n      data={clickAndDragData}\n      draggable={!!card.isFaceUp}\n    >\n      <CardFaceUp onClick={() => onClick(clickAndDragData)} {...card} />\n    </CardDraggable>\n  );\n}\n\nexport default PileWaste;\n","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport ContentSection from 'Components/ContentSection';\nimport PileWaste from 'Components/PileWaste';\nimport PileStock from 'Components/PileStock';\nimport { PileFoundationDropppable } from 'Components/PileFoundation';\nimport PileTableau from 'Components/PileTableau';\nimport {PileGroup} from 'Components/Pile';\n\nfunction Klondike({ game, reRunDeck, stockClickHandler, foundationDropHandler, tableauDropHandler, tableauClickHandler, wasteClickHandler }) {\n  const { tableauPilesKeys, foundationPilesKeys } = game;\n\n  if (game.hasWon) {\n    return (\n      <ContentSection>\n        CONGRATULATION YOU HAVE WON THE GAME\n      </ContentSection>\n    );\n  }\n\n  const onDropTableau = (dropData, dragData) => {\n    tableauDropHandler({ dropData, dragData });\n  }\n\n  const onDropFoundation = (dropData, dragData) => {\n    foundationDropHandler({ dropData, dragData })\n  }\n\n  const onStockClick = (clickData) => {\n    stockClickHandler(clickData);\n  }\n\n  const onClickTableau = (clickData) => {\n    tableauClickHandler(clickData);\n  }\n\n  const maxNrOfCardsInTableau = tableauPilesKeys.reduce((mem, pileKey) => {\n    return Math.max(game[pileKey].length, mem);\n  }, 0);\n\n  return (\n    <div>\n      <section className='Game-top'>\n        <PileGroup>\n          {foundationPilesKeys.map((pileKey) => {\n            const pile = game[pileKey];\n            return (\n              <PileFoundationDropppable\n                key={pileKey}\n                pile={pile}\n                pileId={pileKey}\n                onDrop={onDropFoundation}\n              />\n            )\n          })}\n        </PileGroup>\n        <PileGroup>\n          <section className='Game-Waste'>\n            <PileWaste pile={game.waste} onClick={wasteClickHandler} />\n          </section>\n          <section className='Game-Stock'>\n            <PileStock\n              onClick={onStockClick}\n              pile={game.stock}\n              reRunDeck={reRunDeck}\n            />\n          </section>\n        </PileGroup>\n      </section>\n      <PileGroup>\n        {tableauPilesKeys.map((pileKey) => {\n          const pile = game[pileKey];\n          return (\n            <PileTableau\n              key={pileKey}\n              pile={pile}\n              pileKey={pileKey}\n              onDrop={onDropTableau}\n              onClick={onClickTableau}\n              minHeight={maxNrOfCardsInTableau}\n            />\n          )\n        })}\n      </PileGroup>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  game: state.klondike.present,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  reRunDeck: () => dispatch({ type: 'RE_RUN_DECK'}),\n  stockClickHandler: (payload) => dispatch({ type: 'CLICK_STOCK', payload }),\n  tableauClickHandler: (payload) => dispatch({ type: 'CLICK_TABLEAU', payload }),\n  wasteClickHandler: (payload) => dispatch({ type: 'CLICK_WASTE', payload }),\n  foundationDropHandler: (payload) => dispatch({ type: 'DROP_FOUNDATION', payload }),\n  tableauDropHandler: (payload) => dispatch({ type: 'DROP_TABLEAU', payload }),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Klondike)\n","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport ContentSection from 'Components/ContentSection';\nimport { PileFoundationDropppable } from 'Components/PileFoundation';\nimport PileTableau from 'Components/PileTableau';\nimport {PileGroup} from 'Components/Pile';\n\nfunction Yukon(props) {\n  const {\n    game,\n    tableauDropHandler,\n    foundationDropHandler,\n    tableauClickHandler,\n    foundationPilesKeys,\n    tableauPilesKeys,\n  } = props;\n\n  const onDropFoundation = (dropData, dragData) => {\n    foundationDropHandler({ dropData, dragData })\n  }\n\n  const onDropTableau = (dropData, dragData) => {\n    tableauDropHandler({ dropData, dragData })\n  }\n\n  const onClickTableau = (clickData) => {\n    tableauClickHandler(clickData)\n  }\n\n  if (game.hasWon) {\n    return (\n      <ContentSection>\n        CONGRATULATION YOU HAVE WON THE GAME\n      </ContentSection>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <section className='Game-top'>\n        <PileGroup>\n          {foundationPilesKeys.map((pileKey) => {\n            const pile = game[pileKey];\n            return (\n              <PileFoundationDropppable\n                key={pileKey}\n                pile={pile}\n                pileId={pileKey}\n                onDrop={onDropFoundation}\n              />\n            )\n          })}\n        </PileGroup>\n      </section>\n      <PileGroup>\n        {tableauPilesKeys.map((pileKey) => {\n          const pile = game[pileKey];\n          return (\n            <PileTableau\n              key={pileKey}\n              pile={pile}\n              pileKey={pileKey}\n              onDrop={onDropTableau}\n              onClick={onClickTableau}\n            />\n          )\n        })}\n      </PileGroup>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = state => ({\n  game: state.yukon.present,\n  foundationPilesKeys: state.yukon.present.foundationPilesKeys,\n  tableauPilesKeys: state.yukon.present.tableauPilesKeys,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  foundationDropHandler: (payload) => dispatch({ type: 'YUKON_DROP_FOUNDATION', payload }),\n  tableauDropHandler: (payload) => dispatch({ type: 'YUKON_DROP_TABLEAU', payload }),\n  tableauClickHandler: (payload) => dispatch({ type: 'YUKON_CLICK_TABLEAU', payload }),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Yukon)\n","import { createSelector } from 'reselect';\n\nconst getDices = (state) => {\n  return state.dices\n};\n\nconst getProtocol = (state) => {\n  return state.protocol\n};\n\nconst getCurrentRoundCombination = createSelector(\n  [getDices],\n  (dices) => {\n    const cb = [0, 0, 0, 0, 0, 0];\n    dices.forEach(({ value }) => {\n      ++cb[value];\n    });\n    return cb;\n  }\n);\n\nconst getBonus = createSelector([getProtocol], (protocol, state) => {\n  let total = 0;\n  let isUsed = false;\n  const UPPER_SECTION = [\n    'ones',\n    'twos',\n    'threes',\n    'fours',\n    'fives',\n    'sixes',\n  ];\n\n  const currentTotal = UPPER_SECTION.reduce((mem, key) => {\n    return mem + protocol[key].total;\n  }, 0);\n\n  const allUpperHaveBeenUsed = UPPER_SECTION.reduce((mem, key) => {\n    return mem && protocol[key].isUsed;\n  }, true);\n\n  if (currentTotal >= 63 ) {\n    total = 50;\n  }\n\n  if (allUpperHaveBeenUsed) {\n    isUsed = true;\n  }\n\n  return {\n    label: 'bonus',\n    isUsed,\n    isValid: false,\n    total,\n    currentSum: 0,\n  };\n})\n\n\nconst getCurrentProtocol = createSelector([getCurrentRoundCombination, getBonus, getProtocol], (combintationHelper, bonus, state) => {\n  return Object.keys(state).map(key => {\n    if (key === 'bonus') {\n      return bonus;\n    };\n    const item = state[key];\n    if (!item.used) {\n      return {\n        ...item,\n        label: key,\n        isValid: item.valid(combintationHelper),\n        currentSum: item.sum(combintationHelper),\n      };\n    }\n    return {\n      ...item,\n      label: key,\n    };\n  })\n});\n\nconst getTotal = createSelector([getCurrentProtocol], (state) => {\n  return state.reduce((sum, currentItem) => {\n    return sum + currentItem.total;\n  }, 0);\n});\n\nconst getIsGameFinished = createSelector([getCurrentProtocol], (protocol) => {\n  return protocol.reduce((mem, { isUsed }) => {\n    return mem && isUsed;\n  }, true);\n});\n\nexport {\n  getCurrentRoundCombination,\n  getCurrentProtocol,\n  getTotal,\n  getBonus,\n  getIsGameFinished,\n}\n","import React from 'react';\nimport styled from 'styled-components'\nimport { connect } from 'react-redux';\n\nimport {\n  getTotal,\n  getIsGameFinished,\n} from 'reducers/yatzy/selectors';\n\nconst Dashboard = styled.div`\n  background: gold;\n  padding: 1em;\n  margin-bottom: 1em;\n\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst YatzyDashboard = ({\n  total,\n  onNewGameClick,\n  highScore,\n  gameFinished,\n  gameFinishedHandler,\n  userName,\n}) => {\n  const newGameHandler = () => {\n    onNewGameClick();\n  }\n\n  React.useEffect(() => {\n    if (gameFinished) {\n      gameFinishedHandler(total, userName);\n    }\n  }, [gameFinished]);\n\n  return (\n    <Dashboard>\n      <div>\n        <div>{`Total: ${total}`}</div>\n        <button onClick={newGameHandler}>New game</button>\n      </div>\n      <div>\n        {`Current highScore: `}\n        {highScore.map(({score, userName}) => (\n          <div key={`${userName}: ${score}`}>{`${userName}: ${score}`}</div>\n        ))}\n      </div>\n    </Dashboard>\n  );\n}\n\nconst mapStateToProps = ({ yatzyReducer: yatzyState, userReducer: userState = {} }) => {\n  return {\n    ...yatzyState,\n    ...yatzyState.yatzy,\n    highScore: yatzyState.highScore,\n    total: getTotal(yatzyState),\n    gameFinished: getIsGameFinished(yatzyState),\n    userName: userState.name || 'Navn Ukjent',\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onNewGameClick: () => {\n      dispatch({\n        type: 'YATZY_NEW_GAME',\n      })\n    },\n    gameFinishedHandler: (total, userName) => {\n      dispatch({\n        type: 'YATZY_GAME_FINISHED',\n        data: {\n          total,\n          userName,\n        }\n      })\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YatzyDashboard);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components'\n\nimport YatzyDashboard from 'Components/YatzyDashboard';\n\nimport {\n  getCurrentRoundCombination,\n  getCurrentProtocol,\n  getTotal,\n  getIsGameFinished,\n} from 'reducers/yatzy/selectors';\n\nconst DiceBoard = styled.div`\n  display: flex;\n`;\n\nconst Dice = styled.div`\n  font-size: 5rem;\n  cursor: pointer;\n`;\n\nconst Wrapper = styled.div`\n  flex: 2;\n  margin-left: 1em;\n`;\n\nconst Container = styled.div`\n  font-size: 1em;\n  padding: 1em;\n  background-color: white;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Protocol = styled.div`\n  display: grid;\n  grid-template-columns: auto 50px;\n  border: 1px solid #000;\n  grid-gap: 1px;\n`;\n\nconst ProtocolItem = styled.div`\n  grid-column-start: 1;\n  grid-column-end: 2;\n`;\n\nconst ProtocolKey = styled.div`\n  border: 1px solid aliceblue;\n  padding: 0.5em;\n  grid-column-start: 1;\n  align-self: center;\n  text-transform: capitalize;\n`;\n\nconst ProtocolValue = styled.div`\n  padding: 0.5em;\n  border: 1px solid aliceblue;\n  grid-column-start: 2;\n  text-align: end;\n  align-self: center;\n  cursor: ${props => props.isUsed ? 'auto' : 'pointer' };\n  background: ${props => props.isUsed ? 'aliceblue' : props.isValid ? 'papayawhip' : 'white' };\n`;\n\nconst Yatzy = ({\n    total,\n    dices,\n    rollDices,\n    availableRolls,\n    toggleDice,\n    combintationHelper,\n    setProtocolItemSum,\n    protocol,\n    highScore,\n    gameFinished,\n  }) => {  \n\n  const diceClickHandler = (id) => toggleDice(id);\n  const onProtocolValueClick = (obj) => {\n    if (obj.label !== 'bonus') {\n      setProtocolItemSum(obj);\n    }\n  }\n\n  return (\n    <Container>\n      <Protocol>\n        { protocol.map((obj) => {\n          return (\n            <React.Fragment key={obj.label}>\n              <ProtocolKey>{`${obj.label}: `}</ProtocolKey>\n              <ProtocolValue\n                onClick={onProtocolValueClick.bind(this, obj)}\n                isUsed={obj.isUsed}\n                isValid={obj.currentSum > 0}\n                disabled={obj.label === 'bonus'}\n              >\n                {obj.isUsed ? `${obj.total}` : `${obj.currentSum}`}\n              </ProtocolValue>\n            </React.Fragment>\n          );\n        })}\n      </Protocol>\n      <Wrapper>\n        <YatzyDashboard />\n        <div>\n          <div>\n            <p>{availableRolls}</p>\n            <button onClick={rollDices} disabled={availableRolls === 0}>Roll Dices</button>\n          </div>\n        </div>\n        <DiceBoard>\n          { dices.map(({ id, value, shouldReRoll }, i) => (\n            <Dice\n              style={{ color: shouldReRoll ? 'black' : 'cyan'}}\n              key={`dice-${id}`}\n              onClick={diceClickHandler.bind(this, id)}\n              dangerouslySetInnerHTML={{ __html: `&#x268${value}`}}\n            />\n          ))}\n        </DiceBoard>\n        { gameFinished &&\n          <div>\n            {`Game finished with a total of: ${total}`}\n          </div>\n        }\n      </Wrapper>\n    </Container>\n  );\n}\n\nconst mapStateToProps = ({ yatzyReducer: state}) => {\n  return {\n    ...state,\n    ...state.yatzy,\n    ...state.highScore,\n    combintationHelper: getCurrentRoundCombination(state),\n    protocol: getCurrentProtocol(state),\n    total: getTotal(state),\n    gameFinished: getIsGameFinished(state),\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    rollDices: () => {\n      dispatch({\n        type: 'YATZY_ROLL_DICES'\n      })\n    },\n    toggleDice: (id) => {\n      dispatch({\n        type: 'YATZY_TOGGLE_DICE',\n        data: {\n          id,\n        }\n      })\n    },\n    setProtocolItemSum: (protocolItem) => {\n      dispatch({\n        type: 'YATZY_SET_PROTOCOL_ITEM_SUM',\n        data: { ...protocolItem }\n      });\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Yatzy);","import React, {useState} from 'react';\nimport { connect } from 'react-redux'\nimport { ThemeProvider } from 'styled-components';\n\nimport {BreakpointProvider} from 'Contexts/BreakpointProvider'\n\nimport Dashboard from 'Components/Dashboard';\nimport Spider from 'Components/Games/Spider';\nimport Klondike from 'Components/Games/Klondike';\nimport Yukon from 'Components/Games/Yukon';\nimport Yatzy from 'Components/Games/Yatzy';\n\nimport './App.css';\n\nconst queries = {\n  xs: '(max-width: 320px)',\n  sm: '(max-width: 720px)',\n  md: '(max-width: 1024px)',\n  l: '(min-width: 1024px)',\n  or: '(orientation: portrait)', // we can check orientation also\n}\n\nconst GAMES = {\n  YUKON: 'yukon',\n  KLONDIKE: 'klondike',\n  SPIDER: 'spider',\n  YATZY: 'yatzy',\n}\n\nconst getSelectedGameComponent = (game) => {\n  switch(game) {\n    case GAMES.KLONDIKE:\n      return <Klondike />;\n    case GAMES.SPIDER:\n      return <Spider />;\n    case GAMES.YUKON:\n      return <Yukon />;\n    case GAMES.YATZY:\n      return <Yatzy />;\n    default:\n      return <div>No valid game selected</div>;\n  }\n}\n\nconst theme = {\n  secondaryColor: \"#fefefe\",\n  primaryColor: \"#40b4de\",\n  primaryTextColor: '#0a3458',\n  borderRadius: 0.125,\n  baseSize: 1.75,\n  padding: 0.5,\n  breakpoints: queries,\n};\n\nfunction App(props) {\n  const [selectedGame, setSelectedGame] = useState(GAMES.YUKON);\n\n  const selectedGameComponent = getSelectedGameComponent(selectedGame);\n\n  return (\n    <BreakpointProvider queries={queries}>\n      <ThemeProvider theme={theme}>\n        <div className=\"Game\">\n          <div className=\"Game__dashboard\">\n            <Dashboard\n              selectedGame={selectedGame}\n              setSelectedGame={setSelectedGame}\n              games={GAMES}\n              {...props}\n            />\n          </div>\n          <section className='Game__section'>\n            {selectedGameComponent}\n          </section>\n        </div>\n      </ThemeProvider>\n    </BreakpointProvider>\n  );\n}\n\nconst mapStateToProps = state => ({})\n\nconst mapDispatchToProps = dispatch => ({\n  undo: () => dispatch({ type: 'UNDO' }),\n  redeal: () => dispatch({ type: 'RE_DEAL' }),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","function undoable(reducer) {\n  // Call the reducer with empty action to populate the initial state\n  const initialState = {\n    past: [],\n    present: reducer(undefined, {}),\n    future: []\n  }\n  // Return a reducer that handles undo and redo\n  return function(state = initialState, action) {\n    const { past, present, future } = state\n    switch (action.type) {\n      case 'UNDO':\n        if (past.length) {\n          const previous = past[past.length - 1]\n          const newPast = past.slice(0, past.length - 1)\n          return {\n            past: newPast,\n            present: previous,\n            future: [present, ...future]\n          }\n        }\n        return state;\n      case 'REDO':\n        const next = future[0]\n        const newFuture = future.slice(1)\n        return {\n          past: [...past, present],\n          present: next,\n          future: newFuture\n        }\n      default:\n        // Delegate handling the action to the passed reducer\n        const newPresent = reducer(present, action)\n        if (present === newPresent) {\n          return state\n        }\n        return {\n          past: [...past, present],\n          present: newPresent,\n          future: []\n        }\n    }\n  }\n}\n\nexport default undoable;\n","const spades = [\n{ \n  id: 's1',\n  label: '🂡',\n  value: 1,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's13',\n  label: '🂮',\n  value: 13,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's12',\n  label: '🂭',\n  value: 12,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's11',\n  label: '🂫',\n  value: 11,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's10',\n  label: '🂪',\n  value: 10,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's9',\n  label: '🂩',\n  value: 9,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's8',\n  label: '🂨',\n  value: 8,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's7',\n  label: '🂧',\n  value: 7,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's6',\n  label: '🂦',\n  value: 6,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's5',\n  label: '🂥',\n  value: 5,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's4',\n  label: '🂤',\n  value: 4,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's3',\n  label: '🂣',\n  value: 3,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's2',\n  label: '🂢',\n  value: 2,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n];\n\nexport default spades;","const diamonds = [\n  { \n    id: 'd1',\n    label: '🃁',\n    value: 1,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd13',\n    label: '🃎',\n    value: 13,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd12',\n    label: '🃍',\n    value: 12,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd11',\n    label: '🃋',\n    value: 11,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd10',\n    label: '🃊',\n    value: 10,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd9',\n    label: '🃉',\n    value: 9,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd8',\n    label: '🃈',\n    value: 8,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd7',\n    label: '🃇',\n    value: 7,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd6',\n    label: '🃆',\n    value: 6,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd5',\n    label: '🃅',\n    value: 5,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd4',\n    label: '🃄',\n    value: 4,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd3',\n    label: '🃃',\n    value: 3,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd2',\n    label: '🃂',\n    value: 2,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n];\n\nexport default diamonds;","const hearts = [\n  {\n    id: 'h1',\n    label: '🂱',\n    value: 1,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h13',\n    label: '🂾',\n    value: 13,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h12',\n    label: '🂽',\n    value: 12,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h11',\n    label: '🂻',\n    value: 11,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h10',\n    label: '🂺',\n    value: 10,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h9',\n    label: '🂹',\n    value: 9,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h8',\n    label: '🂸',\n    value: 8,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h7',\n    label: '🂷',\n    value: 7,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h6',\n    label: '🂶',\n    value: 6,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h5',\n    label: '🂵',\n    value: 5,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h4',\n    label: '🂴',\n    value: 4,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h3',\n    label: '🂳',\n    value: 3,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h2',\n    label: '🂲',\n    value: 2,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n];\n\nexport default hearts;","const clubs = [\n  { \n    id: 'c1',\n    label: '🃑',\n    value: 1,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c13',\n    label: '🃞',\n    value: 13,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c12',\n    label: '🃝',\n    value: 12,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c11',\n    label: '🃛',\n    value: 11,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c10',\n    label: '🃚',\n    value: 10,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c9',\n    label: '🃙',\n    value: 9,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c8',\n    label: '🃘',\n    value: 8,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c7',\n    label: '🃗',\n    value: 7,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c6',\n    label: '🃖',\n    value: 6,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c5',\n    label: '🃕',\n    value: 5,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c4',\n    label: '🃔',\n    value: 4,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c3',\n    label: '🃓',\n    value: 3,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c2',\n    label: '🃒',\n    value: 2,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  }\n];\n\nexport default clubs;","import spades from './spades';\nimport diamonds from './diamonds';\nimport hearts from './hearts';\nimport clubs from './clubs';\n\nconst shuffleArray = (array) => {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nconst setLastIsFaceUp = (cards) => {\n  if (cards.length === 0) {\n    return cards;\n  }\n\n  const reverseCards = [...cards];\n  const [last, ...allCards] = reverseCards.reverse();\n\n  return [\n    ...allCards,\n    setFaceIsUp(last),\n  ];\n}\n\nconst setFaceIsUp = (card) => {\n  return {\n    ...card,\n    isFaceUp: true,\n  }\n}\n\nconst moveToPile = (cards, pile) => {\n  const newPile = [...pile].concat(cards);\n  return newPile;\n}\n\nconst moveFromPile = (cardSourceIndex, pile) => {\n  var p1 = pile.slice(0, cardSourceIndex);\n  var p2 = grabCardsToBeMoved(cardSourceIndex, pile);\n\n  return {\n    moved: p2.map(card => ({...card, isFaceUp: true })),\n    remain: p1.map((card, i) => {\n      if(i === p1.length - 1) {\n        return {\n          ...card,\n          isFaceUp: true,\n        }\n      }\n      return card;\n    }),\n  };\n}\n\nconst moveCardsBetweenPilesInState = (state, { cardIndexAtSource, sourcePileKey, destPileKey }) => {\n  const { moved, remain } = moveFromPile(cardIndexAtSource, state[sourcePileKey]);\n  const newDestination = moveToPile(moved, state[destPileKey]);\n\n  return {\n    ...state,\n    [destPileKey]: newDestination,\n    [sourcePileKey]: remain,\n  }\n}\n\nconst cardDropHandler = (state, {destinationPile}, {cardIndexInPile, sourcePile}, allowDropHandler) => {\n  const { moved, remain } = moveFromPile(cardIndexInPile, state[sourcePile])\n  if (allowDropHandler(moved, state[destinationPile])) {\n    return {\n      ...state,\n      [sourcePile]: remain,\n      [destinationPile]: moveToPile(moved, state[destinationPile]),\n    };\n  }\n\n  return state;\n}\n\nconst grabCardsToBeMoved = (cardSourceIndex, pile) => {\n  return pile.slice(cardSourceIndex);\n}\n\nconst getLastCardInPile = (cards) => {\n  const reverseCards = [...cards];\n  const [last, ] = reverseCards.reverse();\n  return last;\n}\n\nconst createArrayWithKeys = (keyName, nr) => {\n  const foundationKeys = Array(nr).fill(keyName).map((value, i) => `${value}${i}`)\n  return foundationKeys;\n}\n\nconst createEmptyPiles = (piles) => {\n  return piles.reduce((mem, key) => {\n    return {\n      ...mem,\n      [key]: [],\n    }\n  }, {})\n}\n\nconst getCardsFromDeck = (deck, nrOfCards) => {\n  const cards = [];\n  let counter = Math.min(nrOfCards, deck.length - 1);\n  while(counter > 0) {\n    cards.push(deck.pop());\n    counter--;\n  }\n  return cards;\n}\n\nconst everyCardIsSameSuite = (cards, suite) => {\n  return cards.every(card => card.suite === suite);\n}\n\nconst arrayToObject = (keys, values) => {\n  const object = values.reduce((mem, obj, i) => {\n    const key = keys[i]\n    return {\n      ...mem,\n      [key]: obj\n    }\n  }, {});\n  return object;\n}\n\nexport {\n  shuffleArray,\n  clubs,\n  spades,\n  diamonds,\n  hearts,\n  setLastIsFaceUp,\n  moveToPile,\n  moveFromPile,\n  moveCardsBetweenPilesInState,\n  cardDropHandler,\n  grabCardsToBeMoved,\n  getLastCardInPile,\n  setFaceIsUp,\n\n  createArrayWithKeys,\n  createEmptyPiles,\n  getCardsFromDeck,\n  everyCardIsSameSuite,\n  arrayToObject,\n};\n","import undoable from './undoable';\nimport {\n  shuffleArray,\n  setLastIsFaceUp,\n  clubs,\n  diamonds,\n  hearts,\n  spades,\n  cardDropHandler,\n  moveCardsBetweenPilesInState,\n  getLastCardInPile,\n  createArrayWithKeys,\n  createEmptyPiles,\n  getCardsFromDeck,\n  arrayToObject,\n} from 'utils/';\n\nconst tableauPilesKeys = createArrayWithKeys('tableau', 7);\nconst foundationPilesKeys = createArrayWithKeys('foundation', 4);\n\nconst createDeck = () => {\n  return [clubs, diamonds, hearts, spades].map((suite, i) => {\n    return suite.map((card) => ({...card, key: `${card.id}${i}`}))\n  }).flat()\n}\n\nconst createFoundationPiles = (pileKeys) => {\n  return createEmptyPiles(pileKeys)\n}\n\nconst createTableauPilesFromDeck = (deck, pileKeys) => {\n  const pilesWithCards = pileKeys.map((_, i) => {\n    const cards = getCardsFromDeck(deck, i + 1);\n    return setLastIsFaceUp(cards);\n  });\n\n  return arrayToObject(pileKeys, pilesWithCards);\n}\n\nconst init = () => {\n  let deck = shuffleArray(createDeck());\n  const foundation = createFoundationPiles(foundationPilesKeys);\n  const tableauPiles = createTableauPilesFromDeck(deck, tableauPilesKeys);\n  return {\n    ...foundation,\n    ...tableauPiles,\n    stock: deck,\n    waste: [],\n    hasWon: false,\n\n    tableauPilesKeys,\n    foundationPilesKeys,\n  };\n}\n\nconst stockClickHandler = (game, { card }) => {\n  return moveCardsBetweenPilesInState(game, {\n    cardIndexAtSource: game.stock.length - 1,\n    sourcePileKey: 'stock',\n    destPileKey: 'waste',\n  });\n}\n\nconst checkHasWon = (state) => {\n  return {\n    ...state,\n    hasWon: foundationPilesKeys.reduce((mem, pileKey) => {\n      const pile = state[pileKey];\n      return mem && pile.length === 13;\n    }, true)\n  }\n}\n\nconst tableauClickHandler = (state, { card, cardIndexInPile, sourcePile }) => {\n  const isLastCard = cardIndexInPile === (state[sourcePile].length - 1)\n  const allowedFoundationPiles = isLastCard ? state.foundationPilesKeys.filter((pile) => {\n    return allowFoundationDrop([card], state[pile]);\n  }) : [];\n\n  const allowedTableauPiles = state.tableauPilesKeys.filter((pile) => {\n    return allowDropTableau([card], state[pile]);\n  })\n\n  const allowedPiles = allowedFoundationPiles.concat(allowedTableauPiles);\n\n  if (allowedPiles.length) {\n    const allowedPile = allowedPiles[0];\n\n    return moveCardsBetweenPilesInState(state, {\n      cardIndexAtSource: cardIndexInPile,\n      sourcePileKey: sourcePile,\n      destPileKey: allowedPile,\n    });\n  }\n\n  return state;\n}\n\nconst allowFoundationDrop = (cardsToBeMoved, destPile) => {\n  const cardToBeMoved = cardsToBeMoved[0];\n\n  if (cardsToBeMoved.length > 1) {\n    return false;\n  }\n\n  if(cardToBeMoved.value === 1 && !destPile.length) {\n    return true;\n  }\n\n  if (destPile.length) {\n    const lastCardInPile = getLastCardInPile(destPile);\n\n    const isSameSuite = lastCardInPile.suite === cardToBeMoved.suite;\n    const isRightValue = lastCardInPile.value === (cardToBeMoved.value - 1);\n\n    if(isSameSuite && isRightValue ) {\n      return true;\n    };\n  }\n\n  return false;\n}\n\n\nconst allowDropTableau = (cardsToBeMoved, destinationPile) => {\n  if (destinationPile.length === 0) {\n    return true;\n  }\n\n  const lastCardInPile = getLastCardInPile(destinationPile);\n\n  const firstCardToBeMoved = cardsToBeMoved[0];\n  const isOppositeColor = lastCardInPile.color !== firstCardToBeMoved.color;\n  const isRightValue = lastCardInPile.value === firstCardToBeMoved.value + 1;\n\n  return lastCardInPile.isFaceUp && isOppositeColor && isRightValue;\n};\n\nconst foundationDropHandler = (game, dropData, dragData) => {\n  return cardDropHandler(game, dropData, dragData, allowFoundationDrop);\n}\n\nconst tableauDropHandler = (game, dropData, dragData) => {\n  return cardDropHandler(game, dropData, dragData, allowDropTableau);\n}\n\nconst initialState = init();\n\nconst klondikeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'RE_DEAL':\n      return init();\n    case 'RE_RUN_DECK':\n      const newStock = [...state.waste].reverse();\n      return {\n        ...state,\n        waste: [],\n        stock: newStock,\n      }\n    case 'CLICK_STOCK':\n      return stockClickHandler(state, action.payload)\n    case 'CLICK_TABLEAU':\n      return checkHasWon(tableauClickHandler(state, action.payload))\n    case 'CLICK_WASTE':\n      return checkHasWon(tableauClickHandler(state, action.payload))\n    case 'DROP_FOUNDATION':\n      return checkHasWon(foundationDropHandler(state, action.payload.dropData, action.payload.dragData))\n    case 'DROP_TABLEAU':\n      return tableauDropHandler(state, action.payload.dropData, action.payload.dragData)\n    default:\n      return state;\n  }\n};\n\nexport default undoable(klondikeReducer);","import undoable from './undoable';\nimport {\n  shuffleArray,\n  setLastIsFaceUp,\n  hearts,\n  spades,\n  moveToPile,\n  moveFromPile,\n  moveCardsBetweenPilesInState,\n  cardDropHandler,\n  createArrayWithKeys,\n  createEmptyPiles,\n  getCardsFromDeck,\n  everyCardIsSameSuite,\n  arrayToObject,\n  getLastCardInPile,\n} from 'utils/';\n\nconst createDeck = () => {\n  return [\n    spades, hearts, hearts, spades,\n    spades, hearts, hearts, spades,\n  ].map((suite, i) => {\n    return suite.map((card) => ({...card, key: `${card.id}${i}`}))\n  })\n}\n\nconst tableauPilesKeys = createArrayWithKeys('tableau', 10);\nconst foundationPilesKeys = createArrayWithKeys('foundation', 8);\n\nconst createFoundationPiles = (pileKeys) => {\n  return createEmptyPiles(pileKeys)\n}\n\nconst createTableauPilesFromDeck = (deck, pileKeys) => {\n  const splitAtNr = 4;\n  const pilesWithCards = pileKeys.map((_, i) => {\n    const nrOfCards = i < splitAtNr ? 6 : 5;\n    const cards = getCardsFromDeck(deck, nrOfCards);\n    return setLastIsFaceUp(cards)\n  });\n  return arrayToObject(pileKeys, pilesWithCards);\n}\n\nconst init = () => {\n  let deck = shuffleArray(createDeck().flat());\n  const foundation = createFoundationPiles(foundationPilesKeys);\n  const tableauPiles = createTableauPilesFromDeck(deck, tableauPilesKeys);\n  return {\n    ...foundation,\n    ...tableauPiles,\n    stock: deck,\n    hasWon: false,\n\n    tableauPilesKeys,\n    foundationPilesKeys,\n  };\n}\n\nconst checkHasWon = (state) => {\n  return {\n    ...state,\n    hasWon: foundationPilesKeys.reduce((mem, pileKey) => {\n      const pile = state[pileKey];\n      return mem && pile.length === 13;\n    }, true)\n  }\n}\n\nconst stockClickHandler = (state) => {\n  const numberOfcards = Math.min(tableauPilesKeys.length, state.stock.length);\n  const cardsAtIndex = state.stock.length - numberOfcards;\n  const { moved, remain: newStock } = moveFromPile(cardsAtIndex, state.stock);\n\n  const newTableau = tableauPilesKeys.reduce((mem, tableauId) => {\n    if (moved.length) {\n      return {\n        ...mem,\n        [tableauId]: moveToPile([moved.pop()], state[tableauId])\n      }\n    }\n    return mem;\n  }, {})\n\n  return {\n    ...state,\n    stock: newStock,\n    ...newTableau,\n  };\n}\n\nconst findFirstAvailableFoundation = (state) => {\n  const index = foundationPilesKeys.findIndex((key) => {\n    return state[key].length === 0;\n  });\n\n  return foundationPilesKeys[index];\n}\n\nconst allowDropTableau = (cardsToBeMoved, destinationPile) => {\n  if (destinationPile.length === 0) {\n    return true;\n  }\n\n  const allIsSpades = everyCardIsSameSuite(cardsToBeMoved, 'spades');\n  const allIsHearts = everyCardIsSameSuite(cardsToBeMoved, 'hearts');\n\n  // TODO, check that its an allowed sequence\n  if (allIsHearts || allIsSpades) {\n\n    const lastCardInPile = getLastCardInPile(destinationPile);\n    const firstCardToBeMoved = cardsToBeMoved[0];\n    const isRightValue = lastCardInPile.value === firstCardToBeMoved.value + 1;\n\n    return isRightValue;\n  }\n\n  return false;\n};\n\nconst moveToFoundationPile = (state, sourcePileKey) => {\n  // TODO rewrite this to something readable\n  const sourcePile = [...state[sourcePileKey]];\n  const potentialMove = sourcePile.reduce((mem, obj, i) => {\n    if (mem.length === 13) {\n      return mem;\n    }\n\n    if (obj.value === 13 && obj.isFaceUp) {\n      return [obj];\n    }\n    \n    if (mem.length > 0) {\n      const prevCard = mem[mem.length-1];\n      if ((prevCard.value === obj.value + 1) && (prevCard.suite === obj.suite)) {\n        mem.push(obj)\n        return mem;\n      }\n      return [];\n    }\n    return mem;\n  }, []);\n\n  if (potentialMove.length === 13) {\n    const cardsAtIndex = state[sourcePileKey].findIndex((card) => {\n      // TODO fix key's and id's\n      return card.key === potentialMove[0].key\n    })\n\n    const foundationToMoveTo = findFirstAvailableFoundation(state);\n    return moveCardsBetweenPilesInState(state, {\n      cardIndexAtSource: cardsAtIndex,\n      sourcePileKey,\n      destPileKey: foundationToMoveTo,\n    });\n  }\n\n  return state;\n}\n\nconst tableauDropHandler = (state, { dropData, dragData }) => {\n  return cardDropHandler(state, dropData, dragData, allowDropTableau);\n}\n\nconst tableauClickHandler = (state, clickData) => {\n  const { card } = clickData;\n\n  const allowedTableauPiles = state.tableauPilesKeys.filter((pile) => {\n    return allowDropTableau([card], state[pile]);\n  })\n\n  if (allowedTableauPiles.length) {\n    const allowedPile = allowedTableauPiles[0];\n    const afterClickState = cardDropHandler(state, { destinationPile: allowedPile }, clickData, allowDropTableau);\n    return moveToFoundationPile(afterClickState, allowedPile)\n  }\n\n  return state;\n}\n\nconst spiderReducer = (state = init(), action) => {\n  switch (action.type) {\n    case 'RE_DEAL':\n      return init();\n    case 'SPIDER_CLICK_STOCK':\n      return stockClickHandler(state);\n    case 'SPIDER_CLICK_TABLEAU':\n      const afterClickState = tableauClickHandler(state, action.payload);\n      return checkHasWon(afterClickState)\n    case 'SPIDER_DROP_TABLEAU':\n      const afterDropState = tableauDropHandler(\n        state,\n        action.payload,\n      )\n      return checkHasWon(moveToFoundationPile(afterDropState, action.payload.dropData.destinationPile))\n    default:\n      return state;\n  }\n};\n\nexport default undoable(spiderReducer);","import undoable from './undoable';\nimport {\n  shuffleArray,\n  hearts,\n  spades,\n  clubs,\n  diamonds,\n  createEmptyPiles,\n  getCardsFromDeck,\n  setLastIsFaceUp,\n  arrayToObject,\n  createArrayWithKeys,\n  cardDropHandler,\n  getLastCardInPile,\n  moveCardsBetweenPilesInState\n} from 'utils/';\n\nconst tableauPilesKeys = createArrayWithKeys('tableau', 7);\nconst foundationPilesKeys = createArrayWithKeys('foundation', 4);\n\nconst createDeck = () => {\n  return [clubs, diamonds, hearts, spades].map((suite, i) => {\n    return suite.map((card) => ({...card, key: `${card.id}${i}`}))\n  })\n}\n\nconst createFoundationPiles = (pileKeys) => {\n  return createEmptyPiles(pileKeys)\n}\n\nconst createTableauPilesFromDeck = (deck, pileKeys) => {\n  let klondikeDeal = pileKeys.map((_, i) => {\n    const cards = getCardsFromDeck(deck, i + 1);\n    return setLastIsFaceUp(cards);\n  });\n\n  let indexCounter = 1;\n  while(deck.length > 0) {\n    const dealtCard = deck.pop(); \n    klondikeDeal[indexCounter].push({...dealtCard, isFaceUp: true });\n    indexCounter = (indexCounter % (klondikeDeal.length - 1)) + 1\n  }\n\n  return arrayToObject(pileKeys, klondikeDeal);\n}\n\nconst allowFoundationDrop = (cardsToBeMoved, destPile) => {\n  const cardToBeMoved = cardsToBeMoved[0];\n\n  if (cardsToBeMoved.length > 1) {\n    return false;\n  }\n\n  if(cardToBeMoved.value === 1 && !destPile.length) {\n    return true;\n  }\n\n  if (destPile.length) {\n    const lastCardInPile = getLastCardInPile(destPile);\n\n    const isSameSuite = lastCardInPile.suite === cardToBeMoved.suite;\n    const isRightValue = lastCardInPile.value === (cardToBeMoved.value - 1);\n\n    if(isSameSuite && isRightValue ) {\n      return true;\n    };\n  }\n\n  return false;\n}\n\n\nconst allowDropTableau = (cardsToBeMoved, destinationPile) => {\n  if (destinationPile.length === 0) {\n    return true;\n  }\n\n  const lastCardInPile = getLastCardInPile(destinationPile);\n\n  const firstCardToBeMoved = cardsToBeMoved[0];\n  const isOppositeColor = lastCardInPile.color !== firstCardToBeMoved.color;\n  const isRightValue = lastCardInPile.value === firstCardToBeMoved.value + 1;\n\n  return lastCardInPile.isFaceUp && isOppositeColor && isRightValue;\n};\n\nconst foundationDropHandler = (state, dropData, dragData) => {\n  return cardDropHandler(state, dropData, dragData, allowFoundationDrop);\n}\n\nconst tableauDropHandler = (state, dropData, dragData) => {\n  return cardDropHandler(state, dropData, dragData, allowDropTableau);\n}\n\nconst tableauClickHandler = (state, clickData) => {\n  const { card, cardIndexInPile, sourcePile } = clickData;\n  const isLastCard = cardIndexInPile === (state[sourcePile].length - 1)\n\n  const allowedFoundationPiles = isLastCard ? state.foundationPilesKeys.filter((pile) => {\n    return allowFoundationDrop([card], state[pile]);\n  }) : [];\n\n  const allowedTableauPiles = state.tableauPilesKeys.filter((pile) => {\n    return allowDropTableau([card], state[pile]);\n  })\n\n  const allowedPiles = allowedFoundationPiles.concat(allowedTableauPiles);\n\n  if (allowedPiles.length) {\n    const allowedPile = allowedPiles[0];\n\n    return moveCardsBetweenPilesInState(state, {\n      cardIndexAtSource: cardIndexInPile,\n      sourcePileKey: sourcePile,\n      destPileKey: allowedPile,\n    });\n  }\n\n  return state;\n}\n\nconst checkHasWon = (state) => {\n  return {\n    ...state,\n    hasWon: foundationPilesKeys.reduce((mem, pileKey) => {\n      const pile = state[pileKey];\n      return mem && pile.length === 13;\n    }, true)\n  }\n}\n\nconst init = () => {\n  let deck = shuffleArray(createDeck().flat());\n  const foundation = createFoundationPiles(foundationPilesKeys);\n  const tableauPiles = createTableauPilesFromDeck(deck, tableauPilesKeys);\n  return {\n    ...foundation,\n    ...tableauPiles,\n    hasWon: false,\n\n    tableauPilesKeys,\n    foundationPilesKeys,\n  };\n}\n\nconst yukonReducer = (state = init(), action) => {\n  switch (action.type) {\n    case 'RE_DEAL':\n      return init();\n    case 'YUKON_DROP_FOUNDATION':\n      return checkHasWon(foundationDropHandler(state, action.payload.dropData, action.payload.dragData))\n    case 'YUKON_DROP_TABLEAU':\n      return tableauDropHandler(state, action.payload.dropData, action.payload.dragData)\n    case 'YUKON_CLICK_TABLEAU':\n      return checkHasWon(tableauClickHandler(state, action.payload))\n    default:\n      return state;\n  }\n};\n\nexport default undoable(yukonReducer);","const getRandomFaceValue = () => {\n return Math.floor(Math.random() * 6);\n}\n\nconst rollDice = (dices) => {\n  return dices.map((dice) => ({\n    ...dice,\n    value: dice.shouldReRoll ? getRandomFaceValue() : dice.value,\n  }))\n}\n\nconst toggleDiceRoll = (dices, id) => {\n  return dices.map(dice => {\n    if (dice.id === id) {\n      return {...dice, shouldReRoll: !dice.shouldReRoll};\n    }\n    return dice;\n  })\n}\n\nconst initialDiceState = [\n  { id: 1, shouldReRoll: true, value: 0 },\n  { id: 2, shouldReRoll: true, value: 0 },\n  { id: 3, shouldReRoll: true, value: 0 },\n  { id: 4, shouldReRoll: true, value: 0 },\n  { id: 5, shouldReRoll: true, value: 0 },\n];\n\nconst dices = (state = rollDice(initialDiceState), action) => {\n  switch(action.type) {\n    case 'NEW_USER':\n    case 'YATZY_NEW_GAME':\n      return rollDice(initialDiceState);\n    case 'YATZY_ROLL_DICES':\n      return rollDice(state)\n    case 'YATZY_TOGGLE_DICE':\n      return toggleDiceRoll(state, action.data.id);\n    case 'YATZY_SET_PROTOCOL_ITEM_SUM':\n      return rollDice(initialDiceState);\n    default:\n      return state;\n  }\n  return state;\n}\n\nexport default dices;","  class XOfAKindClass {\n    constructor(nrOfKind) {\n      this.total = 0;\n      this.isUsed = false;\n      this.nrOfKind = nrOfKind;\n      this.faceIndex = -1;\n    }\n\n    valid(dices) {\n      this.faceIndex = - 1;\n      if (!this.isUsed) {\n        dices.forEach((diceCount, index) => {\n          if ((diceCount >= this.nrOfKind)) {\n            this.faceIndex = index;\n          }\n        });\n\n        return this.faceIndex >= 0;\n      }\n      return false;\n    }\n\n    getFaceValue(dices) {\n      this.valid(dices);\n      return this.faceIndex + 1;\n    }\n\n    sum(dices) {\n      if (this.valid(dices)) {\n        return this.getFaceValue(dices) * this.nrOfKind;\n      }\n      return 0;\n    }\n  }\n\n  class TwoPairs {\n    constructor() {\n      this.total = 0;\n      this.isUsed = false;\n    }\n\n    valid(combos) {\n      if (!this.isUsed) {\n        const overTwo = combos.reduce((mem, obj) => {\n          if (obj >= 2) {\n            mem = mem + 1;\n          }\n          return mem;\n        }, 0);\n        return overTwo >= 2;\n      }\n      return false;\n    }\n\n    sum(combos) {\n      if (this.valid(combos)) {      \n        let pairOfSame = false;\n        const pairArray = combos.reduce((mem, obj, idx) => {\n          if (obj >= 4) {\n            mem.push(idx);\n            pairOfSame = true;\n            return mem;\n          }\n          if (obj >= 2) {\n            mem.push(idx);\n          }\n          return mem;\n        }, []);\n\n        if (pairOfSame) {\n          return (pairArray.pop() + 1) * 4;\n        }\n\n        if (pairArray.length >= 2) {\n          const idx1 = pairArray.pop() + 1;\n          const idx2 = pairArray.pop() + 1;\n\n          return (idx1 * 2) + (idx2 * 2);\n        }\n      }\n      return 0;\n    }\n  };\n \n  class SmallStraight {\n    constructor() {\n      this.total = 0;\n      this.isUsed = false;\n    }\n\n    valid(combos) {\n      if (!this.isUsed) {\n        const at = combos.slice(0, combos.length - 1);\n        const tmp = at.filter(n => n !== 1);\n        return tmp.length === 0;\n      }\n      return false;\n    }\n\n    sum(combos) {\n      if (this.valid(combos)) {   \n        const at = combos.slice(0, combos.length - 1);\n        const tmp = at.filter(n => n !== 1);\n        if (tmp.length === 0) {        \n          return 15;\n        }\n      }\n      return 0;\n    }\n  };\n\n  class LargeStraight {\n    constructor() {\n      this.total = 0;\n      this.isUsed = false;\n    }\n\n    valid(combos) {\n      if (!this.isUsed) {\n        const at = combos.slice(1);\n        const tmp = at.filter(n => n !== 1);\n        return tmp.length === 0;\n      }\n      return false;\n    }\n\n    sum(combos) {\n      if (this.valid(combos)) {      \n        const at = combos.slice(1);\n        const tmp = at.filter(n => n !== 1);\n        if (tmp.length === 0) {        \n          return 20;\n        }\n      }\n      return 0;\n    }\n  };\n\n  class FullHouse {\n    constructor() {\n      this.total = 0;\n      this.isUsed = false;\n    }\n\n    valid(combos) {\n      if (!this.isUsed) {\n        let hasFoundThree = false;\n        let hasFoundTwo = false\n        return combos.reduceRight((isValid, diceCount, index) => {\n          if (!hasFoundThree) {\n            hasFoundThree = (diceCount >= 3);\n          }\n          if (!hasFoundTwo) {\n            hasFoundTwo = (diceCount >= 2);\n          }\n          return hasFoundTwo && hasFoundThree;\n        }, false);\n      }\n      return false;\n    }\n\n    sum(combos) {\n      if (this.valid(combos)) {\n        let hasFoundThree = false;\n        let hasFoundTwo = false;\n        let idx1 = 0;\n        let idx2 = 0;\n        for (var i = combos.length - 1; i >= 0; i--) {\n          if (!hasFoundThree && (combos[i] >= 3)) {\n            hasFoundThree = true;\n            idx1 = i + 1;\n          } else if (!hasFoundTwo && (combos[i] >= 2)) {\n            hasFoundTwo = true;\n            idx2 = i + 1;\n          }\n        }\n        if (!!idx1 && !!idx2) {\n          return (idx1 * 3) + (idx2 * 2);\n        }\n      }\n      return 0;\n    } \n  }\n\n class UpperSectionClass {\n    constructor(faceValue) {\n      this.total = 0;\n      this.isUsed = false;\n      this.faceValue = faceValue;\n      this.diceIndex = faceValue - 1;\n    }\n\n    valid(dices) {\n      if (!this.used) {\n        return dices[this.diceIndex] >= 0;\n      }\n      return false;\n    }\n\n    sum(dices) {\n      if (this.valid(dices)) {\n        return dices[this.diceIndex] * this.faceValue;\n      }\n      return 0;\n    }\n  }\n\nconst initialState = () => {\n  const upperSection = {\n    ones: new UpperSectionClass(1),\n    twos: new UpperSectionClass(2),\n    threes: new UpperSectionClass(3),\n    fours: new UpperSectionClass(4),\n    fives: new UpperSectionClass(5),\n    sixes: new UpperSectionClass(6),\n  };\n\n  const bonusForUpper = {\n    bonus: {\n      total: 0,\n      isUsed: false,\n      valid: () => false,\n      sum: () => 0,\n    },\n  }\n\n  const lowerSection = {\n    onePair: new XOfAKindClass(2),\n    twoPairs: new TwoPairs(),\n    threeOfAKind: new XOfAKindClass(3),\n    fourOfAKind: new XOfAKindClass(4),\n    smallStraight: new SmallStraight(),\n    largeStraight: new LargeStraight(),\n    fullHouse: new FullHouse(),\n    chance: {\n      total: 0,\n      isUsed: false,\n      valid: function() {\n        return !this.isUsed;\n      },\n      sum: (combos) => {\n        return combos.reduce((mem, nr, faceValue) => {\n          return mem + (nr * (faceValue + 1));\n        }, 0)\n      }\n    },\n    yatzy: new XOfAKindClass(5),\n  };\n  return { ...upperSection, ...bonusForUpper, ...lowerSection }\n};\n\nconst protocol = (state = initialState(), action) => {\n  switch(action.type) {\n    case 'NEW_USER':\n    case 'YATZY_NEW_GAME':\n      return initialState();\n    case 'YATZY_SET_PROTOCOL_ITEM_SUM':\n      const { label, currentSum, isValid, isUsed } = action.data;\n      if (!isUsed) { \n        const obj = state[label];\n        obj.total = currentSum;\n        obj.isUsed = true;\n\n        state[label] = obj;\n      }\n      return {\n        ...state\n      }\n    default:\n      return state\n  }\n  return state;\n};\n\nexport default protocol;","const initialState = [];\n\nconst highscore = (state = initialState, action) => {\n  switch(action.type) {\n    case '@@INIT':\n      const localState = window.localStorage.getItem('highscore');\n      if (localState) {\n        return JSON.parse(localState);\n      }\n      return state;\n    case 'YATZY_GAME_FINISHED':\n      const potHighScore = action.data.total;\n      const hasNewHighScore = potHighScore >= state.highScore;\n      const tmp = state;\n      tmp.push({ score: action.data.total, userName: action.data.userName });\n      const newHighscore = tmp.sort((a, b) => (b.score - a.score));\n      window.localStorage.setItem('highscore', JSON.stringify(newHighscore));\n      return newHighscore;\n    default:\n      return state;\n  }\n  return state;\n}\n\nexport default highscore;","import { combineReducers } from 'redux';\n\nimport dices from './dices';\nimport protocol from './protocol';\nimport highScore from './highscore';\n\nconst initialState = {\n  availableRolls: 2,\n};\n\nconst yatzy = (state = initialState, action) => {\n  switch(action.type) {\n    case 'NEW_USER':\n    case 'YATZY_NEW_GAME':\n      return {\n        ...initialState,\n      }\n    case 'YATZY_ROLL_DICES':\n      return {\n        ...state,\n        availableRolls: state.availableRolls - 1,\n      }\n    case 'YATZY_SET_PROTOCOL_ITEM_SUM':\n      return {\n        ...state,\n        availableRolls: initialState.availableRolls,\n      }\n    case 'YATZY_GAME_FINISHED':\n      return {\n\n      }\n    default:\n      return state;\n  }\n  return state;\n};\n\nexport default combineReducers({\n  yatzy,\n  dices,\n  protocol,\n  highScore,\n});\n","import { combineReducers } from 'redux'\nimport klondikeReducer from './klondikeReducer';\nimport spiderReducer from './spiderReducer';\nimport yukonReducer from './yukonReducer';\nimport yatzy from './yatzy/';\n\nconst solitaireApp = combineReducers({\n  klondike: klondikeReducer,\n  spider: spiderReducer,\n  yukon: yukonReducer,\n  yatzyReducer: yatzy,\n});\n\nexport default solitaireApp","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport './index.css';\n\nimport App from 'Components/App';\nimport rootReducer from './reducers';\n// import SpiderMoveToFoundation from './reducers/states/SpiderMoveToFoundation';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst initialState = {};\nconst store = createStore(rootReducer, initialState, composeWithDevTools())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}