{"version":3,"sources":["Components/Card/images/cards/lov.svg","Contexts/BreakpointProvider/index.js","Components/Buttons/index.js","Components/Dashboard/index.js","Components/ContentSection/index.js","Components/Card/index.js","utils/styleVariables.js","Components/PileStock/index.js","Components/PileFoundation/index.js","Components/Pile/index.js","Components/PileTableau/index.js","Components/Games/Spider/index.js","Components/PileWaste/index.js","Components/Games/Klondike/index.js","Components/Games/Yukon/index.js","Components/App/index.js","reducers/undoable.js","utils/spades.js","utils/diamonds.js","utils/hearts.js","utils/clubs.js","utils/index.js","reducers/klondikeReducer.js","reducers/spiderReducer.js","reducers/yukonReducer.js","reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","defaultValue","BreakpointContext","createContext","BreakpointProvider","children","queries","defaultTofirstIndexQuery","Object","keys","reduce","acc","media","index","useState","queryMatch","setQueryMatch","useEffect","mediaQueryLists","isAttached","handleQueryListener","updatedMatches","matches","window","matchMedia","forEach","addListener","removeListener","Provider","value","ButtonStylesWhenError","css","ButtonStylesWhenSuccessful","Button","styled","button","props","theme","primaryColor","primaryTextColor","padding","borderRadius","ButtonStyled","hover","primaryEnhancer","error","success","ButtonPrimaryAction","ButtonSecondaryAction","secondaryColor","DashboardStyled","section","ActionList","breakpoints","l","Dashboard","undo","redeal","selectedGame","setSelectedGame","onClick","onChange","e","target","key","ContentSection","Card","div","CardFan","cardIndex","CardFaceUp","id","suite","label","moreProps","idValue","match","valueOffset","suiteOffset","style","overflow","paddingBottom","height","border","backgroundColor","maxWidth","width","margin","alt","src","sprite","CardFaceDown","CardEmpty","CardDroppable","data","dropHandler","onDragOver","ev","preventDefault","onDrop","dataFromTransfer","dataTransfer","getData","JSON","parse","React","Children","map","child","cloneElement","CardDraggable","onDragStart","setData","stringify","setDragImage","currentTarget","stopPropagation","CardToggleFaceUp","isFaceUp","PileStock","pile","reRunDeck","length","card","PileFoundationDropppable","pileId","cardComponent","destinationPile","PileFoundation","Pile","minHeight","PileGroup","PileTableau","pileKey","result","createRecursiveList","list","rest","dragAndDropData","cardIndexInPile","sourcePile","draggable","cardList","connect","state","game","spider","present","foundationPilesKeys","tableauPilesKeys","dispatch","stockClickHandler","payload","type","tableauClickHandler","tableauDropHandler","context","useContext","Error","useBreakpoint","onDropTableau","dropData","dragData","onClickTableau","clickData","hasWon","smBP","find","nrOfColumns","Math","max","maxNrOfCardsInTableau","mem","gapSize","columns","gap","stock","PileWaste","clickAndDragData","klondike","wasteClickHandler","foundationDropHandler","onHasWon","onDropFoundation","className","waste","yukon","Fragment","xs","sm","md","or","getSelectedGameComponent","baseSize","selectedGameComponent","undoable","reducer","initialState","past","undefined","future","action","previous","newPast","slice","next","newFuture","newPresent","spades","color","diamonds","hearts","clubs","shuffleArray","array","temporaryValue","randomIndex","currentIndex","floor","random","setLastIsFaceUp","cards","reverse","last","allCards","setFaceIsUp","moveToPile","concat","moveFromPile","cardSourceIndex","p1","moved","grabCardsToBeMoved","remain","i","moveCardsBetweenPilesInState","cardIndexAtSource","sourcePileKey","destPileKey","newDestination","cardDropHandler","allowDropHandler","getLastCardInPile","createArrayWithKeys","keyName","nr","Array","fill","createEmptyPiles","piles","getCardsFromDeck","deck","nrOfCards","counter","min","push","pop","everyCardIsSameSuite","every","arrayToObject","values","obj","init","flat","pileKeys","pilesWithCards","_","createTableauPilesFromDeck","checkHasWon","allowedFoundationPiles","filter","allowFoundationDrop","allowedTableauPiles","allowDropTableau","allowedPiles","allowedPile","cardsToBeMoved","destPile","cardToBeMoved","lastCardInPile","isSameSuite","isRightValue","firstCardToBeMoved","isOppositeColor","newStock","numberOfcards","cardsAtIndex","newTableau","tableauId","allIsSpades","moveToFoundationPile","potentialMove","prevCard","findIndex","foundationToMoveTo","findFirstAvailableFoundation","afterClickState","afterDropState","foundation","tableauPiles","klondikeDeal","indexCounter","dealtCard","solitaireApp","combineReducers","klondikeReducer","spiderReducer","yukonReducer","Boolean","location","hostname","store","createStore","rootReducer","composeWithDevTools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f62befd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lov.cf1608c4.svg\";","import React, {\n  useState,\n  useEffect,\n  createContext,\n  useContext} from 'react';\n\nconst defaultValue = {}\n\nconst BreakpointContext = createContext(defaultValue);\n\nconst BreakpointProvider = ({children, queries}) => {\n  const defaultTofirstIndexQuery = Object.keys(queries).reduce((acc, media, index) => {\n    acc[media] = !index;\n    return acc;\n  }, {})\n  const [queryMatch, setQueryMatch] = useState(defaultTofirstIndexQuery);\n\n  useEffect(() => {\n    const mediaQueryLists = {};\n    const keys = Object.keys(queries);\n    let isAttached = false;\n\n    const handleQueryListener = () => {\n      const updatedMatches = keys.reduce((acc, media) => {\n        acc[media] = !!(mediaQueryLists[media] && mediaQueryLists[media].matches);\n        return acc;\n      }, {})\n      setQueryMatch(updatedMatches)\n    }\n\n    if (window && window.matchMedia) {\n      const matches = {};\n      keys.forEach(media => {\n        if (typeof queries[media] === 'string') {\n          mediaQueryLists[media] = window.matchMedia(queries[media]);\n          matches[media] = mediaQueryLists[media].matches\n        } else {\n          matches[media] = false\n        }\n      });\n      setQueryMatch(matches);\n      isAttached = true;\n      keys.forEach(media => {\n        if(typeof queries[media] === 'string') {\n          mediaQueryLists[media].addListener(handleQueryListener)\n        }\n      });\n    }\n\n    return () => {\n      if(isAttached) {\n        keys.forEach(media => {\n          if(typeof queries[media] === 'string') {\n            mediaQueryLists[media].removeListener(handleQueryListener)\n          }\n        });\n      }\n    }\n  }, [queries]);\n\n  return (\n    <BreakpointContext.Provider value={queryMatch}>\n      {children}\n    </BreakpointContext.Provider>\n  )\n\n}\n\nfunction useBreakpoint() {\n  const context = useContext(BreakpointContext);\n  if(context === defaultValue) {\n    throw new Error('useBreakpoint must be used within BreakpointProvider');\n  }\n  return context;\n}\nexport {useBreakpoint, BreakpointProvider};","import styled, { css } from 'styled-components';\n\nconst ButtonStylesWhenError = css`\n  background-color: red;\n  transition: all 0.5s ease-in;\n`;\n\nconst ButtonStylesWhenSuccessful = css`\n  background-color: green;\n  transition: all 0.5s ease-in;\n`;\n\nconst Button = styled.button`\n  border: none;\n  background-color: ${props => props.theme.primaryColor};\n  color: ${props => props.theme.primaryTextColor};\n  padding: ${props => props.theme.padding}rem;\n  border-radius: ${props => props.theme.borderRadius || 1}rem;\n  width: inherit;\n  transition: width 1s ease-in 0.3s;\n  cursor: pointer;\n  box-sizing: border-box;\n  font-size: inherit;\n  line-height: 1;\n  text-transform: uppercase;\n  text-align: center;\n  \n  &:focus {\n    outline: none;\n  }\n`;\n\nconst ButtonStyled = styled(Button)`\n  background-color: ${(props) => (props.hover ? props.theme.primaryEnhancer : props.theme.primaryColor)};\n\n  ${props => props.error ? ButtonStylesWhenError : ''}\n  ${props => props.success ? ButtonStylesWhenSuccessful : ''}\n`;\n\nconst ButtonStyledFullWidth = styled(ButtonStyled)`\n  width: 100%;\n`;\n\nconst ButtonPrimaryAction = styled(Button)`\n  &:hover {\n    background-color: ${props => props.theme.primaryEnhancer};\n  }\n`;\n\nconst ButtonSecondaryAction = styled(Button)`\n  background-color: transparent;\n  border: 0.06rem solid ${props => props.theme.secondaryColor};\n  color: ${props => props.theme.secondaryColor};\n\n  &:hover {\n    border-color: ${props => props.theme.primaryColor};\n    color: ${props => props.theme.primaryColor};\n  }\n`;\n\nconst ButtonTertiaryAction = styled(Button)`\n  background: none;\n  padding: 0;\n  text-align: left;\n  color: ${props => props.theme.primaryColor};\n`;\n\nexport {\n  Button,\n  ButtonStyled,\n  ButtonStyledFullWidth,\n  ButtonPrimaryAction,\n  ButtonSecondaryAction,\n  ButtonTertiaryAction,\n}","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Button, ButtonPrimaryAction, ButtonSecondaryAction } from 'Components/Buttons';\n\nconst DashboardStyled = styled.section`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nconst ActionList = styled.section`\n  display: flex;\n  \n  /* TODO change to button styled component name */\n  & > ${Button} {\n    margin: 0 0.125em 0 0;\n  }\n\n  & > button:last-child {\n    margin-right: 0;\n  }\n\n  @media ${(props) => props.theme.breakpoints.l} {\n    & > ${Button} {\n      margin: 0 0.5em 0 0;\n    }\n  }\n`;\n\nconst Dashboard = ({undo, redeal, selectedGame, setSelectedGame}) => {\n  return (\n    <DashboardStyled>\n      <ActionList>\n        <ButtonSecondaryAction onClick={undo}>Undo</ButtonSecondaryAction>\n        <ButtonPrimaryAction onClick={redeal}>New Deal</ButtonPrimaryAction>\n      </ActionList>\n      <select\n        value={selectedGame}\n        onChange={e => setSelectedGame(e.target.value)}\n      >\n        <option key={'klondike'} value={'klondike'}>\n          Klondike\n        </option>\n        <option key={'spider'} value={'spider'}>\n          Spider\n        </option>\n        <option key={'yukon'} value={'yukon'}>\n          Yukon\n        </option>\n      </select>\n    </DashboardStyled>\n  );\n}\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nconst ContentSection = styled.section`\n  background-color: rgba(255,255,255,0.7);\n  color: rgba(3,2,20,0.7);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex: 1 0 auto;\n  padding: 1em;\n`;\n\nexport default ContentSection;","import React from 'react';\nimport styled from 'styled-components';\nimport sprite from './images/cards/lov.svg';\n\nimport {\n  cardMinWidth,\n  cardMaxWidth,\n} from 'utils/styleVariables';\n\nconst Card = styled.div`\n  min-width: ${cardMinWidth}px;\n  max-width: ${cardMaxWidth}px;\n`;\n\nconst CardStacked = styled(Card)`\n  position: absolute;\n`;\n\nconst CardFan = styled.div`\n  position: absolute;\n  top: ${(props) => props.cardIndex === 0 ? 0 : 15}px;\n`;\n\nconst CardFaceUp = (props) => {\n  const { id, label, suite, onClick, ...moreProps } = props\n  if (!id) {\n    return <Card suite={suite}>Soemthings wrong with card</Card>;\n  }\n  const newId = id.match(/[a-z]+|[^a-z]+/gi);\n\n  let idValue = newId[1];\n  let value = moreProps.value;\n  if (idValue === '1') {\n    idValue = 'A';\n    value = 14;\n  }\n\n  if (idValue === '13') {\n    idValue = 'K';\n  }\n\n  if (idValue === '12') {\n    idValue = 'Q';\n  }\n\n  if (idValue === '11') {\n    idValue = 'J';\n  }\n\n  let valueOffset = `-${((value - 2))*100}%`;\n  let suiteOffset = 0;\n  if (suite === 'spades') {\n    suiteOffset = '1%';\n  } else if (suite === 'diamonds') {\n    suiteOffset = '-280%';\n  } else if (suite === 'clubs') {\n    suiteOffset = '-137%';\n  } else if (suite === 'hearts') {\n    suiteOffset = '-423%';\n  }\n\n  return (\n    <Card suite={suite} onClick={onClick} {...moreProps}>\n      <div style={{\n        overflow: 'hidden',\n        paddingBottom: '138%',\n        height: 0,\n        border: '1px solid papayawhip',\n        borderRadius: '3px',\n        backgroundColor: 'white',\n      }}>\n        <img\n          id={`${moreProps.value}-${suite}`}\n          style={{\n            maxWidth: '1400%',\n            width: '1400%',\n            margin: `${suiteOffset} 0 0 ${valueOffset}`,\n          }}\n          alt='card'\n          src={sprite}\n        />\n      </div>\n    </Card>\n  )\n} \n\nconst CardFaceDown = (props) => (\n  <Card {...props}>\n    <div style={{\n      overflow: 'hidden',\n      height: 0,\n      paddingBottom: '138%',\n      border: '1px solid papayawhip',\n      borderRadius: '3px',\n    }}>\n      <img\n        style={{\n          maxWidth: '1500%',\n          width: '1500%',\n          margin: '-162% 0 0 -1400%',\n        }}\n        alt='card'\n        src={sprite}\n      />\n    </div>\n  </Card>\n);\n\nconst CardEmpty = ({ onClick, ...props }) => (\n  <Card onClick={onClick} {...props}>\n    <div style={{\n      overflow: 'hidden',\n      height: 0,\n      paddingBottom: '138%',\n      border: '1px solid papayawhip',\n      borderRadius: '3px',\n    }}>\n      <img\n        style={{\n          maxWidth: '1500%',\n          width: '1500%',\n          margin: '0% 0 0 -1400%',\n        }}\n        alt='card'\n        src={sprite}\n      />\n    </div>\n  </Card>\n);\n\nconst CardDroppable = ({ children, data, dropHandler }) => {\n  const props = {\n    onDragOver: (ev) => {\n      ev.preventDefault();\n    },\n    onDrop: (ev) => {\n      ev.preventDefault();\n      const dataFromTransfer = ev.dataTransfer.getData(\"pip\");\n      dropHandler(data, JSON.parse(dataFromTransfer))\n    },\n  };\n\n  return React.Children.map(children, child => {\n    return React.cloneElement(child, props);\n  });\n};\n\nconst CardDraggable = ({ children, data, ...moreProps }) => {\n  const props = {\n    onDragStart: (ev) => {\n      ev.dataTransfer.setData(\"pip\", JSON.stringify(data));\n      ev.dataTransfer.setDragImage(ev.currentTarget, 50, 15);\n      ev.stopPropagation();\n    },\n    ...moreProps,\n  };\n\n  return React.Children.map(children, child => {\n    return React.cloneElement(child, props);\n  });\n};\n\nconst CardToggleFaceUp = ({ label, suite, isFaceUp, onClick, ...props }) => {\n  if (isFaceUp) {\n    return <CardFaceUp suite={suite} label={label} onClick={onClick} {...props} />;\n  }\n  return <CardFaceDown />;\n}\n\nexport {\n  Card,\n  CardFaceUp,\n  CardFaceDown,\n  CardEmpty,\n  CardFan,\n  CardStacked,\n  CardDroppable,\n  CardDraggable,\n  CardToggleFaceUp\n};\n","export const cardMinWidth = 30;\nexport const cardMaxWidth = 75;\n\nexport const cardFanOffset = 15;\n","import React from 'react';\n\nimport { CardFaceDown, CardEmpty } from 'Components/Card';\n\nconst PileStock = ({ pile, onClick, reRunDeck }) => {\n  if (pile.length === 0) {\n    return <CardEmpty onClick={reRunDeck} />\n  }\n  return (\n    <CardFaceDown onClick={() => onClick({ card: pile[0] })} />\n  );\n}\n\nexport default PileStock;\n","import React from 'react';\n\nimport { CardFaceUp } from 'Components/Card';\nimport { CardDroppable, CardEmpty } from 'Components/Card';\n\nexport const PileFoundationDropppable = ({ pile, pileId, onDrop }) => {\n  let cardComponent = null;\n  \n  if (pile.length === 0) {\n    cardComponent = <CardEmpty />\n  } else {\n    const card = pile[pile.length - 1];\n    cardComponent = <CardFaceUp {...card} />\n  }\n\n  return (\n    <CardDroppable\n      data={{ destinationPile: pileId }}\n      dropHandler={onDrop}\n    >\n      {cardComponent}\n    </CardDroppable>\n  )\n}\n\nconst PileFoundation = ({ pile, pileId }) => {\n  if (pile.length === 0) {\n    return <CardEmpty />;\n  }\n\n  const card = pile[pile.length - 1];\n  return (\n    <CardFaceUp {...card} />\n  )\n}\n\nexport default PileFoundation;\n","import styled from 'styled-components';\n\nimport {\n  cardMinWidth,\n  cardMaxWidth\n} from 'utils/styleVariables';\n\nconst Pile = styled.div`\n  min-width: ${cardMinWidth}px;\n  max-width: ${cardMaxWidth}px;\n  position: relative;\n  height: ${(props) => !!props.minHeight ? `${props.minHeight}px` : '100%'};\n\n  flex: 1 1 auto;\n`;\n\nexport const PileStack = styled.div`\n  min-width: ${cardMinWidth}px;\n  max-width: ${cardMaxWidth}px;\n\n  height: 100%;\n\n  flex: 1 1 auto;\n`;\n\nexport const PileEmpty = styled(Pile)`\n  border: 1px solid aliceblue;\n  box-sizing: border-box;\n`;\n\nexport const PileGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  \n  & > * {\n    margin: 0 0.5em 0 0;\n  }\n\n  & > *:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport default Pile;\n  // height: 5.17em;  should be a min height or someting from a \"pile\" ","import React from 'react';\n\nimport Pile from 'Components/Pile';\nimport {\n  CardFan,\n  CardDroppable,\n  CardDraggable,\n  CardToggleFaceUp,\n  CardEmpty,\n} from 'Components/Card';\n\nimport { cardFanOffset } from 'utils/styleVariables.js'\n\nconst PileTableau = ({ pile, pileKey, minHeight, onDrop, onClick }) => {\n  const createRecursiveList = (list, cardIndex) => {\n    const [card, ...rest] = list;\n    const dragAndDropData = { card, cardIndexInPile: cardIndex, sourcePile: pileKey };\n\n    if (rest.length === 0 && card) {\n      return (\n        <CardDroppable\n          key={card.key + pileKey}\n          data={{ destinationPile: pileKey }}\n          dropHandler={onDrop}\n        >\n          <CardDraggable\n            data={{ card, cardIndexInPile: cardIndex, sourcePile: pileKey }}\n            draggable={!!card.isFaceUp}\n          >\n            <CardFan cardIndex={cardIndex}>\n              <CardToggleFaceUp {...card} onClick={() => onClick(dragAndDropData)} />\n            </CardFan>\n          </CardDraggable>\n        </CardDroppable>\n      );\n    }\n\n    const cardList = createRecursiveList(rest, cardIndex + 1);\n    return (\n      <CardFan cardIndex={cardIndex}>\n        <CardDraggable\n          data={dragAndDropData}\n          draggable={!!card.isFaceUp}\n        >\n          <CardToggleFaceUp {...card} onClick={() => onClick(dragAndDropData)} />\n          {cardList}\n        </CardDraggable>\n      </CardFan>\n    );\n  }\n\n  if (pile.length === 0) {\n    return (\n      <CardDroppable\n        data={{ card: {}, cardIndex: 0, destinationPile: pileKey }}\n        dropHandler={onDrop}\n      >\n        <CardEmpty />\n      </CardDroppable>\n    )\n  }\n\n  const result = createRecursiveList(pile, 0);\n\n  return (\n    <Pile minHeight={cardFanOffset * minHeight + 125}>\n      {result}\n    </Pile>\n  );\n}\n\nexport default PileTableau;\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Grid, Cell } from 'styled-css-grid';\n\nimport { useBreakpoint } from 'Contexts/BreakpointProvider'\n\nimport ContentSection from 'Components/ContentSection';\nimport PileStock from 'Components/PileStock';\nimport PileFoundation from 'Components/PileFoundation';\nimport PileTableau from 'Components/PileTableau';\n\nimport './styles.css';\n\nexport function Spider(props) {\n  const {\n    game,\n    stockClickHandler,\n    tableauClickHandler,\n    tableauDropHandler,\n    foundationPilesKeys,\n    tableauPilesKeys,\n  } = props;\n\n  const breakpoints = useBreakpoint();\n\n  const onDropTableau = (dropData, dragData) => {\n    tableauDropHandler({ dropData, dragData })\n  }\n\n  const onStockClick = (clickData) => {\n    stockClickHandler(clickData);\n  }\n\n  const onClickTableau = (clickData) => {\n    tableauClickHandler(clickData)\n  }\n\n  if (game.hasWon) {\n    return (\n      <ContentSection>\n        CONGRATULATION YOU HAVE WON THE GAME\n      </ContentSection>\n    );\n  }\n\n  const smBP = Object.keys(breakpoints).find(key => breakpoints[key]);\n  const nrOfColumns = Math.max(tableauPilesKeys.length, foundationPilesKeys.length);\n  const maxNrOfCardsInTableau = tableauPilesKeys.reduce((mem, pileKey) => {\n    return Math.max(game[pileKey].length, mem);\n  }, 0);\n\n  let gapSize = '8px';\n  if (smBP === 'xs') {\n    gapSize = '2px';\n  }\n\n  return (\n    <Grid columns={1}>\n      <Cell>\n        <Grid columns={nrOfColumns} gap={gapSize}>\n          {foundationPilesKeys.map((pileKey) => {\n            const pile = game[pileKey];\n            return (\n              <PileFoundation\n                key={pileKey}\n                pile={pile}\n                pileId={pileKey}\n              />\n            )\n          })}\n        </Grid>\n      </Cell>\n      <Cell>\n        <Grid columns={nrOfColumns} gap={gapSize}>\n          <PileStock\n            onClick={onStockClick}\n            pile={game.stock}\n          />\n        </Grid>\n      </Cell>\n      <Cell>\n        <Grid columns={nrOfColumns} gap={gapSize}>\n          {tableauPilesKeys.map((pileKey) => {\n            const pile = game[pileKey];\n            return (\n              <PileTableau\n                key={pileKey}\n                pile={pile}\n                pileKey={pileKey}\n                onDrop={onDropTableau}\n                onClick={onClickTableau}\n                minHeight={maxNrOfCardsInTableau}\n              />\n            )\n          })}\n        </Grid>\n      </Cell>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = state => ({\n  game: state.spider.present,\n  foundationPilesKeys: state.spider.present.foundationPilesKeys,\n  tableauPilesKeys: state.spider.present.tableauPilesKeys,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  stockClickHandler: (payload) => dispatch({ type: 'SPIDER_CLICK_STOCK', payload }),\n  tableauClickHandler: (payload) => dispatch({ type: 'SPIDER_CLICK_TABLEAU', payload }),\n  tableauDropHandler: (payload) => dispatch({ type: 'SPIDER_DROP_TABLEAU', payload }),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Spider)\n","import React from 'react';\n\nimport { CardFaceUp } from 'Components/Card';\nimport { CardDraggable, CardEmpty } from 'Components/Card';\n\nconst PileWaste = ({ pile, onClick }) => {\n  if (pile.length === 0) {\n    return <CardEmpty />\n  }\n\n  const cardIndexInPile = pile.length - 1;\n  const card = pile[cardIndexInPile]\n  const clickAndDragData = { card, cardIndexInPile: cardIndexInPile, sourcePile: 'waste' };\n  return (\n    <CardDraggable\n      key={card.id}\n      data={clickAndDragData}\n      draggable={!!card.isFaceUp}\n    >\n      <CardFaceUp onClick={() => onClick(clickAndDragData)} {...card} />\n    </CardDraggable>\n  );\n}\n\nexport default PileWaste;\n","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport ContentSection from 'Components/ContentSection';\nimport PileWaste from 'Components/PileWaste';\nimport PileStock from 'Components/PileStock';\nimport { PileFoundationDropppable } from 'Components/PileFoundation';\nimport PileTableau from 'Components/PileTableau';\nimport {PileGroup} from 'Components/Pile';\n\nfunction Klondike({ game, reRunDeck, stockClickHandler, foundationDropHandler, tableauDropHandler, tableauClickHandler, wasteClickHandler, onHasWon }) {\n  const { tableauPilesKeys, foundationPilesKeys } = game;\n\n  if (game.hasWon) {\n    return (\n      <ContentSection>\n        CONGRATULATION YOU HAVE WON THE GAME\n      </ContentSection>\n    );\n  }\n\n  const onDropTableau = (dropData, dragData) => {\n    tableauDropHandler({ dropData, dragData });\n  }\n\n  const onDropFoundation = (dropData, dragData) => {\n    foundationDropHandler({ dropData, dragData })\n  }\n\n  const onStockClick = (clickData) => {\n    stockClickHandler(clickData);\n  }\n\n  const onClickTableau = (clickData) => {\n    tableauClickHandler(clickData);\n  }\n\n  const maxNrOfCardsInTableau = tableauPilesKeys.reduce((mem, pileKey) => {\n    return Math.max(game[pileKey].length, mem);\n  }, 0);\n\n  return (\n    <div>\n      <section className='Game-top'>\n        <PileGroup>\n          {foundationPilesKeys.map((pileKey) => {\n            const pile = game[pileKey];\n            return (\n              <PileFoundationDropppable\n                key={pileKey}\n                pile={pile}\n                pileId={pileKey}\n                onDrop={onDropFoundation}\n              />\n            )\n          })}\n        </PileGroup>\n        <PileGroup>\n          <section className='Game-Waste'>\n            <PileWaste pile={game.waste} onClick={wasteClickHandler} />\n          </section>\n          <section className='Game-Stock'>\n            <PileStock\n              onClick={onStockClick}\n              pile={game.stock}\n              reRunDeck={reRunDeck}\n            />\n          </section>\n        </PileGroup>\n      </section>\n      <PileGroup>\n        {tableauPilesKeys.map((pileKey) => {\n          const pile = game[pileKey];\n          return (\n            <PileTableau\n              key={pileKey}\n              pile={pile}\n              pileKey={pileKey}\n              onDrop={onDropTableau}\n              onClick={onClickTableau}\n              minHeight={maxNrOfCardsInTableau}\n            />\n          )\n        })}\n      </PileGroup>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  game: state.klondike.present,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  reRunDeck: () => dispatch({ type: 'RE_RUN_DECK'}),\n  stockClickHandler: (payload) => dispatch({ type: 'CLICK_STOCK', payload }),\n  tableauClickHandler: (payload) => dispatch({ type: 'CLICK_TABLEAU', payload }),\n  wasteClickHandler: (payload) => dispatch({ type: 'CLICK_WASTE', payload }),\n  foundationDropHandler: (payload) => dispatch({ type: 'DROP_FOUNDATION', payload }),\n  tableauDropHandler: (payload) => dispatch({ type: 'DROP_TABLEAU', payload }),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Klondike)\n","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport ContentSection from 'Components/ContentSection';\nimport { PileFoundationDropppable } from 'Components/PileFoundation';\nimport PileTableau from 'Components/PileTableau';\nimport {PileGroup} from 'Components/Pile';\n\nfunction Yukon(props) {\n  const {\n    game,\n    tableauDropHandler,\n    foundationDropHandler,\n    onHasWon,\n    foundationPilesKeys,\n    tableauPilesKeys,\n  } = props;\n\n  const onDropFoundation = (dropData, dragData) => {\n    foundationDropHandler({ dropData, dragData })\n  }\n\n  const onDropTableau = (dropData, dragData) => {\n    tableauDropHandler({ dropData, dragData })\n  }\n\n  const onClickTableau = (clickData) => {}\n\n  if (game.hasWon) {\n    return (\n      <ContentSection>\n        CONGRATULATION YOU HAVE WON THE GAME\n      </ContentSection>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <section className='Game-top'>\n        <PileGroup>\n          {foundationPilesKeys.map((pileKey) => {\n            const pile = game[pileKey];\n            return (\n              <PileFoundationDropppable\n                key={pileKey}\n                pile={pile}\n                pileId={pileKey}\n                onDrop={onDropFoundation}\n              />\n            )\n          })}\n        </PileGroup>\n      </section>\n      <PileGroup>\n        {tableauPilesKeys.map((pileKey) => {\n          const pile = game[pileKey];\n          return (\n            <PileTableau\n              key={pileKey}\n              pile={pile}\n              pileKey={pileKey}\n              onDrop={onDropTableau}\n              onClick={onClickTableau}\n            />\n          )\n        })}\n      </PileGroup>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = state => ({\n  game: state.yukon.present,\n  foundationPilesKeys: state.yukon.present.foundationPilesKeys,\n  tableauPilesKeys: state.yukon.present.tableauPilesKeys,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  foundationDropHandler: (payload) => dispatch({ type: 'YUKON_DROP_FOUNDATION', payload }),\n  tableauDropHandler: (payload) => dispatch({ type: 'YUKON_DROP_TABLEAU', payload }),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Yukon)\n","import React, {useState} from 'react';\nimport { connect } from 'react-redux'\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport {BreakpointProvider} from 'Contexts/BreakpointProvider'\n\nimport Dashboard from 'Components/Dashboard';\nimport Spider from 'Components/Games/Spider';\nimport Klondike from 'Components/Games/Klondike';\nimport Yukon from 'Components/Games/Yukon';\n\nimport './App.css';\n\nconst queries = {\n  xs: '(max-width: 320px)',\n  sm: '(max-width: 720px)',\n  md: '(max-width: 1024px)',\n  l: '(min-width: 1024px)',\n  or: '(orientation: portrait)', // we can check orientation also\n}\n\nconst getSelectedGameComponent = (game) => {\n  switch(game) {\n    case 'klondike':\n      return <Klondike />;\n    case 'spider':\n      return <Spider />;\n    case 'yukon':\n      return <Yukon />;\n    default:\n      return <div>No valid game selected</div>;\n  }\n}\n\nconst theme = {\n  secondaryColor: \"#fefefe\",\n  primaryColor: \"#40b4de\",\n  primaryTextColor: '#0a3458',\n  borderRadius: 0.125,\n  baseSize: 1.75,\n  padding: 0.5,\n  breakpoints: queries,\n};\n\nfunction App(props) {\n  const [selectedGame, setSelectedGame] = useState('spider');\n\n  const selectedGameComponent = getSelectedGameComponent(selectedGame);\n\n  return (\n    <BreakpointProvider queries={queries}>\n      <ThemeProvider theme={theme}>\n        <div className=\"Game\">\n          <div className=\"Game__dashboard\">\n            <Dashboard selectedGame={selectedGame} setSelectedGame={setSelectedGame} {...props} />\n          </div>\n          <section className='Game__section'>\n            {selectedGameComponent}\n          </section>\n        </div>\n      </ThemeProvider>\n    </BreakpointProvider>\n  );\n}\n\nconst mapStateToProps = state => ({})\n\nconst mapDispatchToProps = dispatch => ({\n  undo: () => dispatch({ type: 'UNDO' }),\n  redeal: () => dispatch({ type: 'RE_DEAL' }),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","function undoable(reducer) {\n  // Call the reducer with empty action to populate the initial state\n  const initialState = {\n    past: [],\n    present: reducer(undefined, {}),\n    future: []\n  }\n  // Return a reducer that handles undo and redo\n  return function(state = initialState, action) {\n    const { past, present, future } = state\n    switch (action.type) {\n      case 'UNDO':\n        if (past.length) {\n          const previous = past[past.length - 1]\n          const newPast = past.slice(0, past.length - 1)\n          return {\n            past: newPast,\n            present: previous,\n            future: [present, ...future]\n          }\n        }\n        return state;\n      case 'REDO':\n        const next = future[0]\n        const newFuture = future.slice(1)\n        return {\n          past: [...past, present],\n          present: next,\n          future: newFuture\n        }\n      default:\n        // Delegate handling the action to the passed reducer\n        const newPresent = reducer(present, action)\n        if (present === newPresent) {\n          return state\n        }\n        return {\n          past: [...past, present],\n          present: newPresent,\n          future: []\n        }\n    }\n  }\n}\n\nexport default undoable;\n","const spades = [\n{ \n  id: 's1',\n  label: '🂡',\n  value: 1,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's13',\n  label: '🂮',\n  value: 13,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's12',\n  label: '🂭',\n  value: 12,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's11',\n  label: '🂫',\n  value: 11,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's10',\n  label: '🂪',\n  value: 10,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's9',\n  label: '🂩',\n  value: 9,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's8',\n  label: '🂨',\n  value: 8,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's7',\n  label: '🂧',\n  value: 7,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's6',\n  label: '🂦',\n  value: 6,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's5',\n  label: '🂥',\n  value: 5,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's4',\n  label: '🂤',\n  value: 4,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's3',\n  label: '🂣',\n  value: 3,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's2',\n  label: '🂢',\n  value: 2,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n];\n\nexport default spades;","const diamonds = [\n  { \n    id: 'd1',\n    label: '🃁',\n    value: 1,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd13',\n    label: '🃎',\n    value: 13,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd12',\n    label: '🃍',\n    value: 12,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd11',\n    label: '🃋',\n    value: 11,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd10',\n    label: '🃊',\n    value: 10,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd9',\n    label: '🃉',\n    value: 9,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd8',\n    label: '🃈',\n    value: 8,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd7',\n    label: '🃇',\n    value: 7,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd6',\n    label: '🃆',\n    value: 6,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd5',\n    label: '🃅',\n    value: 5,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd4',\n    label: '🃄',\n    value: 4,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd3',\n    label: '🃃',\n    value: 3,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd2',\n    label: '🃂',\n    value: 2,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n];\n\nexport default diamonds;","const hearts = [\n  {\n    id: 'h1',\n    label: '🂱',\n    value: 1,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h13',\n    label: '🂾',\n    value: 13,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h12',\n    label: '🂽',\n    value: 12,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h11',\n    label: '🂻',\n    value: 11,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h10',\n    label: '🂺',\n    value: 10,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h9',\n    label: '🂹',\n    value: 9,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h8',\n    label: '🂸',\n    value: 8,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h7',\n    label: '🂷',\n    value: 7,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h6',\n    label: '🂶',\n    value: 6,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h5',\n    label: '🂵',\n    value: 5,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h4',\n    label: '🂴',\n    value: 4,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h3',\n    label: '🂳',\n    value: 3,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h2',\n    label: '🂲',\n    value: 2,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n];\n\nexport default hearts;","const clubs = [\n  { \n    id: 'c1',\n    label: '🃑',\n    value: 1,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c13',\n    label: '🃞',\n    value: 13,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c12',\n    label: '🃝',\n    value: 12,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c11',\n    label: '🃛',\n    value: 11,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c10',\n    label: '🃚',\n    value: 10,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c9',\n    label: '🃙',\n    value: 9,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c8',\n    label: '🃘',\n    value: 8,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c7',\n    label: '🃗',\n    value: 7,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c6',\n    label: '🃖',\n    value: 6,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c5',\n    label: '🃕',\n    value: 5,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c4',\n    label: '🃔',\n    value: 4,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c3',\n    label: '🃓',\n    value: 3,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c2',\n    label: '🃒',\n    value: 2,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  }\n];\n\nexport default clubs;","import spades from './spades';\nimport diamonds from './diamonds';\nimport hearts from './hearts';\nimport clubs from './clubs';\n\nconst shuffleArray = (array) => {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nconst setLastIsFaceUp = (cards) => {\n  if (cards.length === 0) {\n    return cards;\n  }\n\n  const reverseCards = [...cards];\n  const [last, ...allCards] = reverseCards.reverse();\n\n  return [\n    ...allCards,\n    setFaceIsUp(last),\n  ];\n}\n\nconst setFaceIsUp = (card) => {\n  return {\n    ...card,\n    isFaceUp: true,\n  }\n}\n\nconst moveToPile = (cards, pile) => {\n  const newPile = [...pile].concat(cards);\n  return newPile;\n}\n\nconst moveFromPile = (cardSourceIndex, pile) => {\n  var p1 = pile.slice(0, cardSourceIndex);\n  var p2 = grabCardsToBeMoved(cardSourceIndex, pile);\n\n  return {\n    moved: p2.map(card => ({...card, isFaceUp: true })),\n    remain: p1.map((card, i) => {\n      if(i === p1.length - 1) {\n        return {\n          ...card,\n          isFaceUp: true,\n        }\n      }\n      return card;\n    }),\n  };\n}\n\nconst moveCardsBetweenPilesInState = (state, { cardIndexAtSource, sourcePileKey, destPileKey }) => {\n  const { moved, remain } = moveFromPile(cardIndexAtSource, state[sourcePileKey]);\n  const newDestination = moveToPile(moved, state[destPileKey]);\n\n  return {\n    ...state,\n    [destPileKey]: newDestination,\n    [sourcePileKey]: remain,\n  }\n}\n\nconst cardDropHandler = (state, {destinationPile}, {cardIndexInPile, sourcePile}, allowDropHandler) => {\n  const { moved, remain } = moveFromPile(cardIndexInPile, state[sourcePile])\n  if (allowDropHandler(moved, state[destinationPile])) {\n    return {\n      ...state,\n      [sourcePile]: remain,\n      [destinationPile]: moveToPile(moved, state[destinationPile]),\n    };\n  }\n\n  return state;\n}\n\nconst grabCardsToBeMoved = (cardSourceIndex, pile) => {\n  return pile.slice(cardSourceIndex);\n}\n\nconst getLastCardInPile = (cards) => {\n  const reverseCards = [...cards];\n  const [last, ] = reverseCards.reverse();\n  return last;\n}\n\nconst createArrayWithKeys = (keyName, nr) => {\n  const foundationKeys = Array(nr).fill(keyName).map((value, i) => `${value}${i}`)\n  return foundationKeys;\n}\n\nconst createEmptyPiles = (piles) => {\n  return piles.reduce((mem, key) => {\n    return {\n      ...mem,\n      [key]: [],\n    }\n  }, {})\n}\n\nconst getCardsFromDeck = (deck, nrOfCards) => {\n  const cards = [];\n  let counter = Math.min(nrOfCards, deck.length - 1);\n  while(counter > 0) {\n    cards.push(deck.pop());\n    counter--;\n  }\n  return cards;\n}\n\nconst everyCardIsSameSuite = (cards, suite) => {\n  return cards.every(card => card.suite === suite);\n}\n\nconst arrayToObject = (keys, values) => {\n  const object = values.reduce((mem, obj, i) => {\n    const key = keys[i]\n    return {\n      ...mem,\n      [key]: obj\n    }\n  }, {});\n  return object;\n}\n\nexport {\n  shuffleArray,\n  clubs,\n  spades,\n  diamonds,\n  hearts,\n  setLastIsFaceUp,\n  moveToPile,\n  moveFromPile,\n  moveCardsBetweenPilesInState,\n  cardDropHandler,\n  grabCardsToBeMoved,\n  getLastCardInPile,\n  setFaceIsUp,\n\n  createArrayWithKeys,\n  createEmptyPiles,\n  getCardsFromDeck,\n  everyCardIsSameSuite,\n  arrayToObject,\n};\n","import undoable from './undoable';\nimport {\n  shuffleArray,\n  setLastIsFaceUp,\n  clubs,\n  diamonds,\n  hearts,\n  spades,\n  cardDropHandler,\n  moveCardsBetweenPilesInState,\n  getLastCardInPile,\n  createArrayWithKeys,\n  createEmptyPiles,\n  getCardsFromDeck,\n  arrayToObject,\n} from 'utils/';\n\nconst tableauPilesKeys = createArrayWithKeys('tableau', 7);\nconst foundationPilesKeys = createArrayWithKeys('foundation', 4);\n\nconst createDeck = () => {\n  return [clubs, diamonds, hearts, spades].map((suite, i) => {\n    return suite.map((card) => ({...card, key: `${card.id}${i}`}))\n  }).flat()\n}\n\nconst createFoundationPiles = (pileKeys) => {\n  return createEmptyPiles(pileKeys)\n}\n\nconst createTableauPilesFromDeck = (deck, pileKeys) => {\n  const pilesWithCards = pileKeys.map((_, i) => {\n    const cards = getCardsFromDeck(deck, i + 1);\n    return setLastIsFaceUp(cards);\n  });\n\n  return arrayToObject(pileKeys, pilesWithCards);\n}\n\nconst init = () => {\n  let deck = shuffleArray(createDeck());\n  const foundation = createFoundationPiles(foundationPilesKeys);\n  const tableauPiles = createTableauPilesFromDeck(deck, tableauPilesKeys);\n  return {\n    ...foundation,\n    ...tableauPiles,\n    stock: deck,\n    waste: [],\n    hasWon: false,\n\n    tableauPilesKeys,\n    foundationPilesKeys,\n  };\n}\n\nconst stockClickHandler = (game, { card }) => {\n  return moveCardsBetweenPilesInState(game, {\n    cardIndexAtSource: game.stock.length - 1,\n    sourcePileKey: 'stock',\n    destPileKey: 'waste',\n  });\n}\n\nconst checkHasWon = (state) => {\n  return {\n    ...state,\n    hasWon: foundationPilesKeys.reduce((mem, pileKey) => {\n      const pile = state[pileKey];\n      return mem && pile.length === 13;\n    }, true)\n  }\n}\n\nconst tableauClickHandler = (state, { card, cardIndexInPile, sourcePile }) => {\n  const isLastCard = cardIndexInPile === (state[sourcePile].length - 1)\n  const allowedFoundationPiles = isLastCard ? state.foundationPilesKeys.filter((pile) => {\n    return allowFoundationDrop([card], state[pile]);\n  }) : [];\n\n  const allowedTableauPiles = state.tableauPilesKeys.filter((pile) => {\n    return allowDropTableau([card], state[pile]);\n  })\n\n  const allowedPiles = allowedFoundationPiles.concat(allowedTableauPiles);\n\n  if (allowedPiles.length) {\n    const allowedPile = allowedPiles[0];\n\n    return moveCardsBetweenPilesInState(state, {\n      cardIndexAtSource: cardIndexInPile,\n      sourcePileKey: sourcePile,\n      destPileKey: allowedPile,\n    });\n  }\n\n  return state;\n}\n\nconst allowFoundationDrop = (cardsToBeMoved, destPile) => {\n  const cardToBeMoved = cardsToBeMoved[0];\n\n  if (cardsToBeMoved.length > 1) {\n    return false;\n  }\n\n  if(cardToBeMoved.value === 1 && !destPile.length) {\n    return true;\n  }\n\n  if (destPile.length) {\n    const lastCardInPile = getLastCardInPile(destPile);\n\n    const isSameSuite = lastCardInPile.suite === cardToBeMoved.suite;\n    const isRightValue = lastCardInPile.value === (cardToBeMoved.value - 1);\n\n    if(isSameSuite && isRightValue ) {\n      return true;\n    };\n  }\n\n  return false;\n}\n\n\nconst allowDropTableau = (cardsToBeMoved, destinationPile) => {\n  if (destinationPile.length === 0) {\n    return true;\n  }\n\n  const lastCardInPile = getLastCardInPile(destinationPile);\n\n  const firstCardToBeMoved = cardsToBeMoved[0];\n  const isOppositeColor = lastCardInPile.color !== firstCardToBeMoved.color;\n  const isRightValue = lastCardInPile.value === firstCardToBeMoved.value + 1;\n\n  return lastCardInPile.isFaceUp && isOppositeColor && isRightValue;\n};\n\nconst foundationDropHandler = (game, dropData, dragData) => {\n  return cardDropHandler(game, dropData, dragData, allowFoundationDrop);\n}\n\nconst tableauDropHandler = (game, dropData, dragData) => {\n  return cardDropHandler(game, dropData, dragData, allowDropTableau);\n}\n\nconst initialState = init();\n\nconst klondikeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'RE_DEAL':\n      return init();\n    case 'RE_RUN_DECK':\n      const newStock = [...state.waste].reverse();\n      return {\n        ...state,\n        waste: [],\n        stock: newStock,\n      }\n    case 'CLICK_STOCK':\n      return stockClickHandler(state, action.payload)\n    case 'CLICK_TABLEAU':\n      return checkHasWon(tableauClickHandler(state, action.payload))\n    case 'CLICK_WASTE':\n      return checkHasWon(tableauClickHandler(state, action.payload))\n    case 'DROP_FOUNDATION':\n      return checkHasWon(foundationDropHandler(state, action.payload.dropData, action.payload.dragData))\n    case 'DROP_TABLEAU':\n      return tableauDropHandler(state, action.payload.dropData, action.payload.dragData)\n    default:\n      return state;\n  }\n};\n\nexport default undoable(klondikeReducer);","import undoable from './undoable';\nimport {\n  shuffleArray,\n  setLastIsFaceUp,\n  hearts,\n  spades,\n  moveToPile,\n  moveFromPile,\n  moveCardsBetweenPilesInState,\n  cardDropHandler,\n  createArrayWithKeys,\n  createEmptyPiles,\n  getCardsFromDeck,\n  everyCardIsSameSuite,\n  arrayToObject,\n  getLastCardInPile,\n} from 'utils/';\n\nconst createDeck = () => {\n  return [\n    spades, hearts, hearts, spades,\n    spades, hearts, hearts, spades,\n  ].map((suite, i) => {\n    return suite.map((card) => ({...card, key: `${card.id}${i}`}))\n  })\n}\n\nconst tableauPilesKeys = createArrayWithKeys('tableau', 10);\nconst foundationPilesKeys = createArrayWithKeys('foundation', 8);\n\nconst createFoundationPiles = (pileKeys) => {\n  return createEmptyPiles(pileKeys)\n}\n\nconst createTableauPilesFromDeck = (deck, pileKeys) => {\n  const splitAtNr = 4;\n  const pilesWithCards = pileKeys.map((_, i) => {\n    const nrOfCards = i < splitAtNr ? 6 : 5;\n    const cards = getCardsFromDeck(deck, nrOfCards);\n    return setLastIsFaceUp(cards)\n  });\n  return arrayToObject(pileKeys, pilesWithCards);\n}\n\nconst init = () => {\n  let deck = shuffleArray(createDeck().flat());\n  const foundation = createFoundationPiles(foundationPilesKeys);\n  const tableauPiles = createTableauPilesFromDeck(deck, tableauPilesKeys);\n  return {\n    ...foundation,\n    ...tableauPiles,\n    stock: deck,\n    hasWon: false,\n\n    tableauPilesKeys,\n    foundationPilesKeys,\n  };\n}\n\nconst checkHasWon = (state) => {\n  return {\n    ...state,\n    hasWon: foundationPilesKeys.reduce((mem, pileKey) => {\n      const pile = state[pileKey];\n      return mem && pile.length === 13;\n    }, true)\n  }\n}\n\nconst stockClickHandler = (state) => {\n  const numberOfcards = Math.min(tableauPilesKeys.length, state.stock.length);\n  const cardsAtIndex = state.stock.length - numberOfcards;\n  const { moved, remain: newStock } = moveFromPile(cardsAtIndex, state.stock);\n\n  const newTableau = tableauPilesKeys.reduce((mem, tableauId) => {\n    if (moved.length) {\n      return {\n        ...mem,\n        [tableauId]: moveToPile([moved.pop()], state[tableauId])\n      }\n    }\n    return mem;\n  }, {})\n\n  return {\n    ...state,\n    stock: newStock,\n    ...newTableau,\n  };\n}\n\nconst findFirstAvailableFoundation = (state) => {\n  const index = foundationPilesKeys.findIndex((key) => {\n    return state[key].length === 0;\n  });\n\n  return foundationPilesKeys[index];\n}\n\nconst allowDropTableau = (cardsToBeMoved, destinationPile) => {\n  if (destinationPile.length === 0) {\n    return true;\n  }\n\n  const allIsSpades = everyCardIsSameSuite(cardsToBeMoved, 'spades');\n  const allIsHearts = everyCardIsSameSuite(cardsToBeMoved, 'hearts');\n\n  // TODO, check that its an allowed sequence\n  if (allIsHearts || allIsSpades) {\n\n    const lastCardInPile = getLastCardInPile(destinationPile);\n    const firstCardToBeMoved = cardsToBeMoved[0];\n    const isRightValue = lastCardInPile.value === firstCardToBeMoved.value + 1;\n\n    return isRightValue;\n  }\n\n  return false;\n};\n\nconst moveToFoundationPile = (state, sourcePileKey) => {\n  // TODO rewrite this to something readable\n  const sourcePile = [...state[sourcePileKey]];\n  const potentialMove = sourcePile.reduce((mem, obj, i) => {\n    if (mem.length === 13) {\n      return mem;\n    }\n\n    if (obj.value === 13 && obj.isFaceUp) {\n      return [obj];\n    }\n    \n    if (mem.length > 0) {\n      const prevCard = mem[mem.length-1];\n      if ((prevCard.value === obj.value + 1) && (prevCard.suite === obj.suite)) {\n        mem.push(obj)\n        return mem;\n      }\n      return [];\n    }\n    return mem;\n  }, []);\n\n  if (potentialMove.length === 13) {\n    const cardsAtIndex = state[sourcePileKey].findIndex((card) => {\n      // TODO fix key's and id's\n      return card.key === potentialMove[0].key\n    })\n\n    const foundationToMoveTo = findFirstAvailableFoundation(state);\n    return moveCardsBetweenPilesInState(state, {\n      cardIndexAtSource: cardsAtIndex,\n      sourcePileKey,\n      destPileKey: foundationToMoveTo,\n    });\n  }\n\n  return state;\n}\n\nconst tableauDropHandler = (state, { dropData, dragData }) => {\n  return cardDropHandler(state, dropData, dragData, allowDropTableau);\n}\n\nconst tableauClickHandler = (state, clickData) => {\n  const { card, cardIndexInPile, sourcePile } = clickData;\n\n  const allowedTableauPiles = state.tableauPilesKeys.filter((pile) => {\n    return allowDropTableau([card], state[pile]);\n  })\n\n  if (allowedTableauPiles.length) {\n    const allowedPile = allowedTableauPiles[0];\n    const afterClickState = cardDropHandler(state, { destinationPile: allowedPile }, clickData, allowDropTableau);\n    return moveToFoundationPile(afterClickState, allowedPile)\n  }\n\n  return state;\n}\n\nconst spiderReducer = (state = init(), action) => {\n  switch (action.type) {\n    case 'RE_DEAL':\n      return init();\n    case 'SPIDER_CLICK_STOCK':\n      return stockClickHandler(state);\n    case 'SPIDER_CLICK_TABLEAU':\n      const afterClickState = tableauClickHandler(state, action.payload);\n      return checkHasWon(afterClickState)\n    case 'SPIDER_DROP_TABLEAU':\n      const afterDropState = tableauDropHandler(\n        state,\n        action.payload,\n      )\n      return checkHasWon(moveToFoundationPile(afterDropState, action.payload.dropData.destinationPile))\n    default:\n      return state;\n  }\n};\n\nexport default undoable(spiderReducer);","import undoable from './undoable';\nimport {\n  shuffleArray,\n  hearts,\n  spades,\n  clubs,\n  diamonds,\n  createEmptyPiles,\n  getCardsFromDeck,\n  setLastIsFaceUp,\n  arrayToObject,\n  createArrayWithKeys,\n  cardDropHandler,\n  getLastCardInPile,\n} from 'utils/';\n\nconst tableauPilesKeys = createArrayWithKeys('tableau', 7);\nconst foundationPilesKeys = createArrayWithKeys('foundation', 4);\n\nconst createDeck = () => {\n  return [clubs, diamonds, hearts, spades].map((suite, i) => {\n    return suite.map((card) => ({...card, key: `${card.id}${i}`}))\n  })\n}\n\nconst createFoundationPiles = (pileKeys) => {\n  return createEmptyPiles(pileKeys)\n}\n\nconst createTableauPilesFromDeck = (deck, pileKeys) => {\n  let klondikeDeal = pileKeys.map((_, i) => {\n    const cards = getCardsFromDeck(deck, i + 1);\n    return setLastIsFaceUp(cards);\n  });\n\n  let indexCounter = 1;\n  while(deck.length > 0) {\n    const dealtCard = deck.pop(); \n    klondikeDeal[indexCounter].push({...dealtCard, isFaceUp: true });\n    indexCounter = (indexCounter % (klondikeDeal.length - 1)) + 1\n  }\n\n  return arrayToObject(pileKeys, klondikeDeal);\n}\n\nconst allowFoundationDrop = (cardsToBeMoved, destPile) => {\n  const cardToBeMoved = cardsToBeMoved[0];\n\n  if (cardsToBeMoved.length > 1) {\n    return false;\n  }\n\n  if(cardToBeMoved.value === 1 && !destPile.length) {\n    return true;\n  }\n\n  if (destPile.length) {\n    const lastCardInPile = getLastCardInPile(destPile);\n\n    const isSameSuite = lastCardInPile.suite === cardToBeMoved.suite;\n    const isRightValue = lastCardInPile.value === (cardToBeMoved.value - 1);\n\n    if(isSameSuite && isRightValue ) {\n      return true;\n    };\n  }\n\n  return false;\n}\n\n\nconst allowDropTableau = (cardsToBeMoved, destinationPile) => {\n  if (destinationPile.length === 0) {\n    return true;\n  }\n\n  const lastCardInPile = getLastCardInPile(destinationPile);\n\n  const firstCardToBeMoved = cardsToBeMoved[0];\n  const isOppositeColor = lastCardInPile.color !== firstCardToBeMoved.color;\n  const isRightValue = lastCardInPile.value === firstCardToBeMoved.value + 1;\n\n  return lastCardInPile.isFaceUp && isOppositeColor && isRightValue;\n};\n\nconst foundationDropHandler = (state, dropData, dragData) => {\n  return cardDropHandler(state, dropData, dragData, allowFoundationDrop);\n}\n\nconst tableauDropHandler = (state, dropData, dragData) => {\n  return cardDropHandler(state, dropData, dragData, allowDropTableau);\n}\n\nconst checkHasWon = (state) => {\n  return {\n    ...state,\n    hasWon: foundationPilesKeys.reduce((mem, pileKey) => {\n      const pile = state[pileKey];\n      return mem && pile.length === 13;\n    }, true)\n  }\n}\n\nconst init = () => {\n  let deck = shuffleArray(createDeck().flat());\n  const foundation = createFoundationPiles(foundationPilesKeys);\n  const tableauPiles = createTableauPilesFromDeck(deck, tableauPilesKeys);\n  return {\n    ...foundation,\n    ...tableauPiles,\n    hasWon: false,\n\n    tableauPilesKeys,\n    foundationPilesKeys,\n  };\n}\n\nconst yukonReducer = (state = init(), action) => {\n  switch (action.type) {\n    case 'RE_DEAL':\n      return init();\n    case 'YUKON_DROP_FOUNDATION':\n      return checkHasWon(foundationDropHandler(state, action.payload.dropData, action.payload.dragData))\n    case 'YUKON_DROP_TABLEAU':\n      return tableauDropHandler(state, action.payload.dropData, action.payload.dragData)\n    default:\n      return state;\n  }\n};\n\nexport default undoable(yukonReducer);","import { combineReducers } from 'redux'\nimport klondikeReducer from './klondikeReducer';\nimport spiderReducer from './spiderReducer';\nimport yukonReducer from './yukonReducer';\n\nconst solitaireApp = combineReducers({\n  klondike: klondikeReducer,\n  spider: spiderReducer,\n  yukon: yukonReducer,\n});\n\nexport default solitaireApp","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport './index.css';\n\nimport App from 'Components/App';\nimport rootReducer from './reducers';\n// import SpiderMoveToFoundation from './reducers/states/SpiderMoveToFoundation';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst initialState = {};\nconst store = createStore(rootReducer, initialState, composeWithDevTools())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}