{"version":3,"sources":["Components/Card/images/cards/lov.svg","Contexts/BreakpointProvider/index.js","Components/StyledComponents/Buttons/index.js","Components/Dashboard/index.js","Components/StyledComponents/ContentSection/index.js","Components/Card/index.js","utils/styleVariables.js","Components/PileStock/index.js","Components/PileFoundation/index.js","Components/StyledComponents/Pile/index.js","Components/PileTableau/index.js","Components/Games/Spider/index.js","Components/PileWaste/index.js","Components/Games/Klondike/index.js","Components/Games/Yukon/index.js","reducers/yatzy/selectors/index.js","Components/YatzyDashboard/index.js","Components/Games/Yatzy/index.js","Components/StyledComponents/Select/index.js","Components/App/index.js","reducers/undoable.js","utils/spades.js","utils/diamonds.js","utils/hearts.js","utils/clubs.js","utils/index.js","reducers/klondikeReducer.js","reducers/spiderReducer.js","reducers/yukonReducer.js","reducers/yatzy/dices.js","reducers/yatzy/protocol.js","reducers/yatzy/highscore.js","reducers/yatzy/index.js","reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","defaultValue","BreakpointContext","createContext","BreakpointProvider","children","queries","defaultTofirstIndexQuery","Object","keys","reduce","acc","media","index","useState","queryMatch","setQueryMatch","useEffect","mediaQueryLists","isAttached","handleQueryListener","updatedMatches","matches","window","matchMedia","forEach","addListener","removeListener","Provider","value","ButtonStylesWhenError","css","ButtonStylesWhenSuccessful","Button","styled","button","props","theme","primaryColor","primaryTextColor","padding","borderRadius","ButtonStyled","hover","primaryEnhancer","error","success","ButtonPrimaryAction","ButtonSecondaryAction","secondaryColor","ButtonList","div","breakpoints","l","DashboardStyled","section","Dashboard","undo","redeal","onClick","ContentSection","Card","CardFan","cardIndex","CardFaceUp","id","suite","label","moreProps","idValue","match","valueOffset","suiteOffset","style","overflow","paddingBottom","height","border","backgroundColor","maxWidth","width","margin","alt","src","sprite","CardFaceDown","CardEmpty","CardDroppable","data","dropHandler","onDragOver","ev","preventDefault","onDrop","dataFromTransfer","dataTransfer","getData","JSON","parse","React","Children","map","child","cloneElement","CardDraggable","onDragStart","setData","stringify","setDragImage","currentTarget","stopPropagation","CardToggleFaceUp","isFaceUp","PileStock","pile","reRunDeck","length","card","PileFoundationDropppable","pileId","cardComponent","destinationPile","PileFoundation","Pile","minHeight","PileGroup","PileTableau","pileKey","result","createRecursiveList","list","rest","dragAndDropData","cardIndexInPile","sourcePile","key","draggable","cardList","connect","state","game","spider","present","foundationPilesKeys","tableauPilesKeys","dispatch","type","stockClickHandler","payload","tableauClickHandler","tableauDropHandler","context","useContext","Error","useBreakpoint","onDropTableau","dropData","dragData","onClickTableau","clickData","hasWon","smBP","find","nrOfColumns","Math","max","maxNrOfCardsInTableau","mem","gapSize","columns","gap","stock","PileWaste","clickAndDragData","klondike","wasteClickHandler","foundationDropHandler","onDropFoundation","className","waste","yukon","Fragment","getProtocol","protocol","getCurrentRoundCombination","createSelector","dices","cb","getBonus","total","isUsed","UPPER_SECTION","isValid","currentSum","getCurrentProtocol","combintationHelper","bonus","item","used","valid","sum","getTotal","currentItem","getIsGameFinished","yatzyState","yatzyReducer","userReducer","userState","yatzy","highScore","gameFinished","userName","name","onNewGameClick","gameFinishedHandler","score","DiceBoard","Dice","Wrapper","Container","Protocol","ProtocolKey","ProtocolValue","rollDices","toggleDice","setProtocolItemSum","protocolItem","availableRolls","diceClickHandler","onProtocolValueClick","obj","bind","disabled","i","shouldReRoll","color","dangerouslySetInnerHTML","__html","Select","select","Option","option","xs","sm","md","or","GAMES","YUKON","KLONDIKE","SPIDER","YATZY","getSelectedGameComponent","baseSize","selectedGame","setSelectedGame","selectedGameComponent","onChange","e","target","values","undoable","reducer","initialState","past","undefined","future","action","previous","newPast","slice","next","newFuture","newPresent","spades","diamonds","hearts","clubs","shuffleArray","array","temporaryValue","randomIndex","currentIndex","floor","random","setLastIsFaceUp","cards","reverse","last","allCards","setFaceIsUp","moveToPile","concat","moveFromPile","cardSourceIndex","p1","moved","grabCardsToBeMoved","remain","moveCardsBetweenPilesInState","cardIndexAtSource","sourcePileKey","destPileKey","newDestination","cardDropHandler","allowDropHandler","getLastCardInPile","createArrayWithKeys","keyName","nr","Array","fill","createEmptyPiles","piles","getCardsFromDeck","deck","nrOfCards","counter","min","push","pop","everyCardIsSameSuite","every","arrayToObject","init","flat","pileKeys","pilesWithCards","_","createTableauPilesFromDeck","checkHasWon","allowedFoundationPiles","filter","allowFoundationDrop","allowedTableauPiles","allowDropTableau","allowedPiles","allowedPile","cardsToBeMoved","destPile","cardToBeMoved","lastCardInPile","isSameSuite","isRightValue","firstCardToBeMoved","isOppositeColor","newStock","numberOfcards","cardsAtIndex","newTableau","tableauId","allIsSpades","moveToFoundationPile","potentialMove","prevCard","findIndex","foundationToMoveTo","findFirstAvailableFoundation","afterClickState","afterDropState","foundation","tableauPiles","klondikeDeal","indexCounter","dealtCard","rollDice","dice","toggleDiceRoll","initialDiceState","XOfAKindClass","nrOfKind","this","faceIndex","diceCount","getFaceValue","TwoPairs","combos","pairOfSame","pairArray","idx","SmallStraight","n","LargeStraight","FullHouse","hasFoundThree","hasFoundTwo","reduceRight","idx1","idx2","UpperSectionClass","faceValue","diceIndex","ones","twos","threes","fours","fives","sixes","onePair","twoPairs","threeOfAKind","fourOfAKind","smallStraight","largeStraight","fullHouse","chance","highscore","localState","localStorage","getItem","potHighScore","tmp","newHighscore","sort","a","b","setItem","combineReducers","solitaireApp","klondikeReducer","spiderReducer","yukonReducer","Boolean","location","hostname","store","createStore","rootReducer","composeWithDevTools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1da26b0a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lov.6c70873e.svg\";","import React, {\n  useState,\n  useEffect,\n  createContext,\n  useContext} from 'react';\n\nconst defaultValue = {}\n\nconst BreakpointContext = createContext(defaultValue);\n\nconst BreakpointProvider = ({children, queries}) => {\n  const defaultTofirstIndexQuery = Object.keys(queries).reduce((acc, media, index) => {\n    acc[media] = !index;\n    return acc;\n  }, {})\n  const [queryMatch, setQueryMatch] = useState(defaultTofirstIndexQuery);\n\n  useEffect(() => {\n    const mediaQueryLists = {};\n    const keys = Object.keys(queries);\n    let isAttached = false;\n\n    const handleQueryListener = () => {\n      const updatedMatches = keys.reduce((acc, media) => {\n        acc[media] = !!(mediaQueryLists[media] && mediaQueryLists[media].matches);\n        return acc;\n      }, {})\n      setQueryMatch(updatedMatches)\n    }\n\n    if (window && window.matchMedia) {\n      const matches = {};\n      keys.forEach(media => {\n        if (typeof queries[media] === 'string') {\n          mediaQueryLists[media] = window.matchMedia(queries[media]);\n          matches[media] = mediaQueryLists[media].matches\n        } else {\n          matches[media] = false\n        }\n      });\n      setQueryMatch(matches);\n      isAttached = true;\n      keys.forEach(media => {\n        if(typeof queries[media] === 'string') {\n          mediaQueryLists[media].addListener(handleQueryListener)\n        }\n      });\n    }\n\n    return () => {\n      if(isAttached) {\n        keys.forEach(media => {\n          if(typeof queries[media] === 'string') {\n            mediaQueryLists[media].removeListener(handleQueryListener)\n          }\n        });\n      }\n    }\n  }, [queries]);\n\n  return (\n    <BreakpointContext.Provider value={queryMatch}>\n      {children}\n    </BreakpointContext.Provider>\n  )\n\n}\n\nfunction useBreakpoint() {\n  const context = useContext(BreakpointContext);\n  if(context === defaultValue) {\n    throw new Error('useBreakpoint must be used within BreakpointProvider');\n  }\n  return context;\n}\nexport {useBreakpoint, BreakpointProvider};","import styled, { css } from 'styled-components';\n\nconst ButtonStylesWhenError = css`\n  background-color: red;\n  transition: all 0.5s ease-in;\n`;\n\nconst ButtonStylesWhenSuccessful = css`\n  background-color: green;\n  transition: all 0.5s ease-in;\n`;\n\nconst Button = styled.button`\n  border: none;\n  background-color: ${props => props.theme.primaryColor};\n  color: ${props => props.theme.primaryTextColor};\n  padding: ${props => props.theme.padding}rem;\n  border-radius: ${props => props.theme.borderRadius || 1}rem;\n  width: inherit;\n  transition: width 1s ease-in 0.3s;\n  cursor: pointer;\n  box-sizing: border-box;\n  font-size: inherit;\n  line-height: 1;\n  text-transform: uppercase;\n  text-align: center;\n  \n  &:focus {\n    outline: none;\n  }\n`;\n\nconst ButtonStyled = styled(Button)`\n  background-color: ${(props) => (props.hover ? props.theme.primaryEnhancer : props.theme.primaryColor)};\n\n  ${props => props.error ? ButtonStylesWhenError : ''}\n  ${props => props.success ? ButtonStylesWhenSuccessful : ''}\n`;\n\nconst ButtonStyledFullWidth = styled(ButtonStyled)`\n  width: 100%;\n`;\n\nconst ButtonPrimaryAction = styled(Button)`\n  &:hover {\n    background-color: ${props => props.theme.primaryEnhancer};\n  }\n`;\n\nconst ButtonSecondaryAction = styled(Button)`\n  background-color: transparent;\n  border: 0.06rem solid ${props => props.theme.secondaryColor};\n  color: ${props => props.theme.secondaryColor};\n\n  &:hover {\n    border-color: ${props => props.theme.primaryColor};\n    color: ${props => props.theme.primaryColor};\n  }\n`;\n\nconst ButtonTertiaryAction = styled(Button)`\n  background: none;\n  padding: 0;\n  text-align: left;\n  color: ${props => props.theme.primaryColor};\n`;\n\nconst ButtonList = styled.div`\n  display: flex;\n  \n  & > ${Button} {\n    margin: 0 0.125em 0 0;\n  }\n\n  & > ${Button}:last-child {\n    margin-right: 0;\n  }\n\n  @media ${(props) => props.theme.breakpoints.l} {\n    & > ${Button} {\n      margin: 0 0.5em 0 0;\n    }\n  }\n`;\n\nexport {\n  Button,\n  ButtonStyled,\n  ButtonStyledFullWidth,\n  ButtonPrimaryAction,\n  ButtonSecondaryAction,\n  ButtonTertiaryAction,\n  ButtonList,\n}","import React from 'react';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  ButtonPrimaryAction,\n  ButtonSecondaryAction,\n  ButtonList,\n} from 'Components/StyledComponents/Buttons';\n\nconst DashboardStyled = styled.section`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n\n  & > *:first-child {\n    flex: 2;\n  } \n\n  & > *:last-child {\n    flex: 1;\n  }\n`;\n\nconst Dashboard = ({undo, redeal}) => {\n  return (\n    <DashboardStyled>\n      <ButtonList>\n        <ButtonSecondaryAction onClick={undo}>Undo</ButtonSecondaryAction>\n        <ButtonPrimaryAction onClick={redeal}>New Deal</ButtonPrimaryAction>\n      </ButtonList>\n    </DashboardStyled>\n  );\n}\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nconst ContentSection = styled.section`\n  background-color: rgba(255,255,255,0.7);\n  color: rgba(3,2,20,0.7);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex: 1 0 auto;\n  padding: 1em;\n`;\n\nexport default ContentSection;","import React from 'react';\nimport styled from 'styled-components';\nimport sprite from './images/cards/lov.svg';\n\nimport {\n  cardMinWidth,\n  cardMaxWidth,\n} from 'utils/styleVariables';\n\nconst Card = styled.div`\n  min-width: ${cardMinWidth}px;\n  max-width: ${cardMaxWidth}px;\n`;\n\nconst CardStacked = styled(Card)`\n  position: absolute;\n`;\n\nconst CardFan = styled.div`\n  position: absolute;\n  top: ${(props) => props.cardIndex === 0 ? 0 : 15}px;\n`;\n\nconst CardFaceUp = (props) => {\n  const { id, label, suite, onClick, ...moreProps } = props\n  if (!id) {\n    return <Card suite={suite}>Soemthings wrong with card</Card>;\n  }\n  const newId = id.match(/[a-z]+|[^a-z]+/gi);\n\n  let idValue = newId[1];\n  let value = moreProps.value;\n  if (idValue === '1') {\n    idValue = 'A';\n    value = 14;\n  }\n\n  if (idValue === '13') {\n    idValue = 'K';\n  }\n\n  if (idValue === '12') {\n    idValue = 'Q';\n  }\n\n  if (idValue === '11') {\n    idValue = 'J';\n  }\n\n  let valueOffset = `-${((value - 2))*100}%`;\n  let suiteOffset = 0;\n  if (suite === 'spades') {\n    suiteOffset = '1%';\n  } else if (suite === 'diamonds') {\n    suiteOffset = '-280%';\n  } else if (suite === 'clubs') {\n    suiteOffset = '-137%';\n  } else if (suite === 'hearts') {\n    suiteOffset = '-423%';\n  }\n\n  return (\n    <Card suite={suite} onClick={onClick} {...moreProps}>\n      <div style={{\n        overflow: 'hidden',\n        paddingBottom: '138%',\n        height: 0,\n        border: '1px solid papayawhip',\n        borderRadius: '3px',\n        backgroundColor: 'white',\n      }}>\n        <img\n          id={`${moreProps.value}-${suite}`}\n          style={{\n            maxWidth: '1400%',\n            width: '1400%',\n            margin: `${suiteOffset} 0 0 ${valueOffset}`,\n          }}\n          alt='card'\n          src={sprite}\n        />\n      </div>\n    </Card>\n  )\n} \n\nconst CardFaceDown = (props) => (\n  <Card {...props}>\n    <div style={{\n      overflow: 'hidden',\n      height: 0,\n      paddingBottom: '138%',\n      border: '1px solid papayawhip',\n      borderRadius: '3px',\n    }}>\n      <img\n        style={{\n          maxWidth: '1500%',\n          width: '1500%',\n          margin: '-162% 0 0 -1400%',\n        }}\n        alt='card'\n        src={sprite}\n      />\n    </div>\n  </Card>\n);\n\nconst CardEmpty = ({ onClick, ...props }) => (\n  <Card onClick={onClick} {...props}>\n    <div style={{\n      overflow: 'hidden',\n      height: 0,\n      paddingBottom: '138%',\n      border: '1px solid papayawhip',\n      borderRadius: '3px',\n    }}>\n      <img\n        style={{\n          maxWidth: '1500%',\n          width: '1500%',\n          margin: '0% 0 0 -1400%',\n        }}\n        alt='card'\n        src={sprite}\n      />\n    </div>\n  </Card>\n);\n\nconst CardDroppable = ({ children, data, dropHandler }) => {\n  const props = {\n    onDragOver: (ev) => {\n      ev.preventDefault();\n    },\n    onDrop: (ev) => {\n      ev.preventDefault();\n      const dataFromTransfer = ev.dataTransfer.getData(\"pip\");\n      dropHandler(data, JSON.parse(dataFromTransfer))\n    },\n  };\n\n  return React.Children.map(children, child => {\n    return React.cloneElement(child, props);\n  });\n};\n\nconst CardDraggable = ({ children, data, ...moreProps }) => {\n  const props = {\n    onDragStart: (ev) => {\n      ev.dataTransfer.setData(\"pip\", JSON.stringify(data));\n      ev.dataTransfer.setDragImage(ev.currentTarget, 50, 15);\n      ev.stopPropagation();\n    },\n    ...moreProps,\n  };\n\n  return React.Children.map(children, child => {\n    return React.cloneElement(child, props);\n  });\n};\n\nconst CardToggleFaceUp = ({ label, suite, isFaceUp, onClick, ...props }) => {\n  if (isFaceUp) {\n    return <CardFaceUp suite={suite} label={label} onClick={onClick} {...props} />;\n  }\n  return <CardFaceDown />;\n}\n\nexport {\n  Card,\n  CardFaceUp,\n  CardFaceDown,\n  CardEmpty,\n  CardFan,\n  CardStacked,\n  CardDroppable,\n  CardDraggable,\n  CardToggleFaceUp\n};\n","export const cardMinWidth = 30;\nexport const cardMaxWidth = 75;\n\nexport const cardFanOffset = 15;\n","import React from 'react';\n\nimport { CardFaceDown, CardEmpty } from 'Components/Card';\n\nconst PileStock = ({ pile, onClick, reRunDeck }) => {\n  if (pile.length === 0) {\n    return <CardEmpty onClick={reRunDeck} />\n  }\n  return (\n    <CardFaceDown onClick={() => onClick({ card: pile[0] })} />\n  );\n}\n\nexport default PileStock;\n","import React from 'react';\n\nimport { CardFaceUp } from 'Components/Card';\nimport { CardDroppable, CardEmpty } from 'Components/Card';\n\nexport const PileFoundationDropppable = ({ pile, pileId, onDrop }) => {\n  let cardComponent = null;\n  \n  if (pile.length === 0) {\n    cardComponent = <CardEmpty />\n  } else {\n    const card = pile[pile.length - 1];\n    cardComponent = <CardFaceUp {...card} />\n  }\n\n  return (\n    <CardDroppable\n      data={{ destinationPile: pileId }}\n      dropHandler={onDrop}\n    >\n      {cardComponent}\n    </CardDroppable>\n  )\n}\n\nconst PileFoundation = ({ pile, pileId }) => {\n  if (pile.length === 0) {\n    return <CardEmpty />;\n  }\n\n  const card = pile[pile.length - 1];\n  return (\n    <CardFaceUp {...card} />\n  )\n}\n\nexport default PileFoundation;\n","import styled from 'styled-components';\n\nimport {\n  cardMinWidth,\n  cardMaxWidth\n} from 'utils/styleVariables';\n\nconst Pile = styled.div`\n  min-width: ${cardMinWidth}px;\n  max-width: ${cardMaxWidth}px;\n  position: relative;\n  height: ${(props) => !!props.minHeight ? `${props.minHeight}px` : '100%'};\n\n  flex: 1 1 auto;\n`;\n\nexport const PileStack = styled.div`\n  min-width: ${cardMinWidth}px;\n  max-width: ${cardMaxWidth}px;\n\n  height: 100%;\n\n  flex: 1 1 auto;\n`;\n\nexport const PileEmpty = styled(Pile)`\n  border: 1px solid aliceblue;\n  box-sizing: border-box;\n`;\n\nexport const PileGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  \n  & > * {\n    margin: 0 0.5em 0 0;\n  }\n\n  & > *:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport default Pile;\n  // height: 5.17em;  should be a min height or someting from a \"pile\" ","import React from 'react';\n\nimport Pile from 'Components/StyledComponents/Pile';\nimport {\n  CardFan,\n  CardDroppable,\n  CardDraggable,\n  CardToggleFaceUp,\n  CardEmpty,\n} from 'Components/Card';\n\nimport { cardFanOffset } from 'utils/styleVariables.js'\n\nconst PileTableau = ({ pile, pileKey, minHeight, onDrop, onClick }) => {\n  const createRecursiveList = (list, cardIndex) => {\n    const [card, ...rest] = list;\n    const dragAndDropData = { card, cardIndexInPile: cardIndex, sourcePile: pileKey };\n\n    if (rest.length === 0 && card) {\n      return (\n        <CardDroppable\n          key={card.key + pileKey}\n          data={{ destinationPile: pileKey }}\n          dropHandler={onDrop}\n        >\n          <CardDraggable\n            data={{ card, cardIndexInPile: cardIndex, sourcePile: pileKey }}\n            draggable={!!card.isFaceUp}\n          >\n            <CardFan cardIndex={cardIndex}>\n              <CardToggleFaceUp {...card} onClick={() => onClick(dragAndDropData)} />\n            </CardFan>\n          </CardDraggable>\n        </CardDroppable>\n      );\n    }\n\n    const cardList = createRecursiveList(rest, cardIndex + 1);\n    return (\n      <CardFan cardIndex={cardIndex}>\n        <CardDraggable\n          data={dragAndDropData}\n          draggable={!!card.isFaceUp}\n        >\n          <CardToggleFaceUp {...card} onClick={() => onClick(dragAndDropData)} />\n          {cardList}\n        </CardDraggable>\n      </CardFan>\n    );\n  }\n\n  if (pile.length === 0) {\n    return (\n      <CardDroppable\n        data={{ card: {}, cardIndex: 0, destinationPile: pileKey }}\n        dropHandler={onDrop}\n      >\n        <CardEmpty />\n      </CardDroppable>\n    )\n  }\n\n  const result = createRecursiveList(pile, 0);\n\n  return (\n    <Pile minHeight={cardFanOffset * minHeight + 125}>\n      {result}\n    </Pile>\n  );\n}\n\nexport default PileTableau;\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Grid, Cell } from 'styled-css-grid';\n\nimport { useBreakpoint } from 'Contexts/BreakpointProvider'\n\nimport Dashboard from 'Components/Dashboard';\nimport ContentSection from 'Components/StyledComponents/ContentSection';\nimport PileStock from 'Components/PileStock';\nimport PileFoundation from 'Components/PileFoundation';\nimport PileTableau from 'Components/PileTableau';\n\nimport './styles.css';\n\nexport function Spider(props) {\n  const {\n    undo,\n    redeal,\n    game,\n    stockClickHandler,\n    tableauClickHandler,\n    tableauDropHandler,\n    foundationPilesKeys,\n    tableauPilesKeys,\n  } = props;\n\n  const breakpoints = useBreakpoint();\n\n  const onDropTableau = (dropData, dragData) => {\n    tableauDropHandler({ dropData, dragData })\n  }\n\n  const onStockClick = (clickData) => {\n    stockClickHandler(clickData);\n  }\n\n  const onClickTableau = (clickData) => {\n    tableauClickHandler(clickData)\n  }\n\n  if (game.hasWon) {\n    return (\n      <ContentSection>\n        CONGRATULATION YOU HAVE WON THE GAME\n      </ContentSection>\n    );\n  }\n\n  const smBP = Object.keys(breakpoints).find(key => breakpoints[key]);\n  const nrOfColumns = Math.max(tableauPilesKeys.length, foundationPilesKeys.length);\n  const maxNrOfCardsInTableau = tableauPilesKeys.reduce((mem, pileKey) => {\n    return Math.max(game[pileKey].length, mem);\n  }, 0);\n\n  let gapSize = '8px';\n  if (smBP === 'xs') {\n    gapSize = '2px';\n  }\n\n  return (\n    <Grid columns={1}>\n      <Cell>\n        <section>\n          <Dashboard undo={undo} redeal={redeal} />\n        </section>\n      </Cell>\n      <Cell>\n        <Grid columns={nrOfColumns} gap={gapSize}>\n          {foundationPilesKeys.map((pileKey) => {\n            const pile = game[pileKey];\n            return (\n              <PileFoundation\n                key={pileKey}\n                pile={pile}\n                pileId={pileKey}\n              />\n            )\n          })}\n        </Grid>\n      </Cell>\n      <Cell>\n        <Grid columns={nrOfColumns} gap={gapSize}>\n          <PileStock\n            onClick={onStockClick}\n            pile={game.stock}\n          />\n        </Grid>\n      </Cell>\n      <Cell>\n        <Grid columns={nrOfColumns} gap={gapSize}>\n          {tableauPilesKeys.map((pileKey) => {\n            const pile = game[pileKey];\n            return (\n              <PileTableau\n                key={pileKey}\n                pile={pile}\n                pileKey={pileKey}\n                onDrop={onDropTableau}\n                onClick={onClickTableau}\n                minHeight={maxNrOfCardsInTableau}\n              />\n            )\n          })}\n        </Grid>\n      </Cell>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = state => ({\n  game: state.spider.present,\n  foundationPilesKeys: state.spider.present.foundationPilesKeys,\n  tableauPilesKeys: state.spider.present.tableauPilesKeys,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  undo: () => dispatch({ type: 'UNDO' }),\n  redeal: () => dispatch({ type: 'RE_DEAL' }),\n  stockClickHandler: (payload) => dispatch({ type: 'SPIDER_CLICK_STOCK', payload }),\n  tableauClickHandler: (payload) => dispatch({ type: 'SPIDER_CLICK_TABLEAU', payload }),\n  tableauDropHandler: (payload) => dispatch({ type: 'SPIDER_DROP_TABLEAU', payload }),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Spider)\n","import React from 'react';\n\nimport { CardFaceUp } from 'Components/Card';\nimport { CardDraggable, CardEmpty } from 'Components/Card';\n\nconst PileWaste = ({ pile, onClick }) => {\n  if (pile.length === 0) {\n    return <CardEmpty />\n  }\n\n  const cardIndexInPile = pile.length - 1;\n  const card = pile[cardIndexInPile]\n  const clickAndDragData = { card, cardIndexInPile: cardIndexInPile, sourcePile: 'waste' };\n  return (\n    <CardDraggable\n      key={card.id}\n      data={clickAndDragData}\n      draggable={!!card.isFaceUp}\n    >\n      <CardFaceUp onClick={() => onClick(clickAndDragData)} {...card} />\n    </CardDraggable>\n  );\n}\n\nexport default PileWaste;\n","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport Dashboard from 'Components/Dashboard';\nimport ContentSection from 'Components/StyledComponents/ContentSection';\nimport PileWaste from 'Components/PileWaste';\nimport PileStock from 'Components/PileStock';\nimport { PileFoundationDropppable } from 'Components/PileFoundation';\nimport PileTableau from 'Components/PileTableau';\nimport { PileGroup } from 'Components/StyledComponents/Pile';\n\nfunction Klondike(props) {\n  const {\n    undo,\n    redeal,\n    game,\n    reRunDeck,\n    stockClickHandler,\n    foundationDropHandler,\n    tableauDropHandler,\n    tableauClickHandler,\n    wasteClickHandler\n  } = props;\n  const { tableauPilesKeys, foundationPilesKeys } = game;\n\n  if (game.hasWon) {\n    return (\n      <ContentSection>\n        CONGRATULATION YOU HAVE WON THE GAME\n      </ContentSection>\n    );\n  }\n\n  const onDropTableau = (dropData, dragData) => {\n    tableauDropHandler({ dropData, dragData });\n  }\n\n  const onDropFoundation = (dropData, dragData) => {\n    foundationDropHandler({ dropData, dragData })\n  }\n\n  const onStockClick = (clickData) => {\n    stockClickHandler(clickData);\n  }\n\n  const onClickTableau = (clickData) => {\n    tableauClickHandler(clickData);\n  }\n\n  const maxNrOfCardsInTableau = tableauPilesKeys.reduce((mem, pileKey) => {\n    return Math.max(game[pileKey].length, mem);\n  }, 0);\n\n  return (\n    <div>\n      <section>\n        <Dashboard undo={undo} redeal={redeal} />\n      </section>\n      <section className='Game-top'>\n        <PileGroup>\n          {foundationPilesKeys.map((pileKey) => {\n            const pile = game[pileKey];\n            return (\n              <PileFoundationDropppable\n                key={pileKey}\n                pile={pile}\n                pileId={pileKey}\n                onDrop={onDropFoundation}\n              />\n            )\n          })}\n        </PileGroup>\n        <PileGroup>\n          <section className='Game-Waste'>\n            <PileWaste pile={game.waste} onClick={wasteClickHandler} />\n          </section>\n          <section className='Game-Stock'>\n            <PileStock\n              onClick={onStockClick}\n              pile={game.stock}\n              reRunDeck={reRunDeck}\n            />\n          </section>\n        </PileGroup>\n      </section>\n      <PileGroup>\n        {tableauPilesKeys.map((pileKey) => {\n          const pile = game[pileKey];\n          return (\n            <PileTableau\n              key={pileKey}\n              pile={pile}\n              pileKey={pileKey}\n              onDrop={onDropTableau}\n              onClick={onClickTableau}\n              minHeight={maxNrOfCardsInTableau}\n            />\n          )\n        })}\n      </PileGroup>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  game: state.klondike.present,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  undo: () => dispatch({ type: 'UNDO' }),\n  redeal: () => dispatch({ type: 'RE_DEAL' }),\n  reRunDeck: () => dispatch({ type: 'RE_RUN_DECK'}),\n  stockClickHandler: (payload) => dispatch({ type: 'CLICK_STOCK', payload }),\n  tableauClickHandler: (payload) => dispatch({ type: 'CLICK_TABLEAU', payload }),\n  wasteClickHandler: (payload) => dispatch({ type: 'CLICK_WASTE', payload }),\n  foundationDropHandler: (payload) => dispatch({ type: 'DROP_FOUNDATION', payload }),\n  tableauDropHandler: (payload) => dispatch({ type: 'DROP_TABLEAU', payload }),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Klondike)\n","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport Dashboard from 'Components/Dashboard';\nimport ContentSection from 'Components/StyledComponents/ContentSection';\nimport { PileFoundationDropppable } from 'Components/PileFoundation';\nimport PileTableau from 'Components/PileTableau';\nimport {PileGroup} from 'Components/StyledComponents/Pile';\n\nfunction Yukon(props) {\n  const {\n    undo,\n    redeal,\n    game,\n    tableauDropHandler,\n    foundationDropHandler,\n    tableauClickHandler,\n    foundationPilesKeys,\n    tableauPilesKeys,\n  } = props;\n\n  const onDropFoundation = (dropData, dragData) => {\n    foundationDropHandler({ dropData, dragData })\n  }\n\n  const onDropTableau = (dropData, dragData) => {\n    tableauDropHandler({ dropData, dragData })\n  }\n\n  const onClickTableau = (clickData) => {\n    tableauClickHandler(clickData)\n  }\n\n  if (game.hasWon) {\n    return (\n      <ContentSection>\n        CONGRATULATION YOU HAVE WON THE GAME\n      </ContentSection>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <Dashboard undo={undo} redeal={redeal} />\n      </section>\n      <section className='Game-top'>\n        <PileGroup>\n          {foundationPilesKeys.map((pileKey) => {\n            const pile = game[pileKey];\n            return (\n              <PileFoundationDropppable\n                key={pileKey}\n                pile={pile}\n                pileId={pileKey}\n                onDrop={onDropFoundation}\n              />\n            )\n          })}\n        </PileGroup>\n      </section>\n      <PileGroup>\n        {tableauPilesKeys.map((pileKey) => {\n          const pile = game[pileKey];\n          return (\n            <PileTableau\n              key={pileKey}\n              pile={pile}\n              pileKey={pileKey}\n              onDrop={onDropTableau}\n              onClick={onClickTableau}\n            />\n          )\n        })}\n      </PileGroup>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = state => ({\n  game: state.yukon.present,\n  foundationPilesKeys: state.yukon.present.foundationPilesKeys,\n  tableauPilesKeys: state.yukon.present.tableauPilesKeys,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  undo: () => dispatch({ type: 'UNDO' }),\n  redeal: () => dispatch({ type: 'RE_DEAL' }),\n  foundationDropHandler: (payload) => dispatch({ type: 'YUKON_DROP_FOUNDATION', payload }),\n  tableauDropHandler: (payload) => dispatch({ type: 'YUKON_DROP_TABLEAU', payload }),\n  tableauClickHandler: (payload) => dispatch({ type: 'YUKON_CLICK_TABLEAU', payload }),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Yukon)\n","import { createSelector } from 'reselect';\n\nconst getDices = (state) => {\n  return state.dices\n};\n\nconst getProtocol = (state) => {\n  return state.protocol\n};\n\nconst getCurrentRoundCombination = createSelector(\n  [getDices],\n  (dices) => {\n    const cb = [0, 0, 0, 0, 0, 0];\n    dices.forEach(({ value }) => {\n      ++cb[value];\n    });\n    return cb;\n  }\n);\n\nconst getBonus = createSelector([getProtocol], (protocol, state) => {\n  let total = 0;\n  let isUsed = false;\n  const UPPER_SECTION = [\n    'ones',\n    'twos',\n    'threes',\n    'fours',\n    'fives',\n    'sixes',\n  ];\n\n  const currentTotal = UPPER_SECTION.reduce((mem, key) => {\n    return mem + protocol[key].total;\n  }, 0);\n\n  const allUpperHaveBeenUsed = UPPER_SECTION.reduce((mem, key) => {\n    return mem && protocol[key].isUsed;\n  }, true);\n\n  if (currentTotal >= 63 ) {\n    total = 50;\n  }\n\n  if (allUpperHaveBeenUsed) {\n    isUsed = true;\n  }\n\n  return {\n    label: 'bonus',\n    isUsed,\n    isValid: false,\n    total,\n    currentSum: 0,\n  };\n})\n\n\nconst getCurrentProtocol = createSelector([getCurrentRoundCombination, getBonus, getProtocol], (combintationHelper, bonus, state) => {\n  return Object.keys(state).map(key => {\n    if (key === 'bonus') {\n      return bonus;\n    };\n    const item = state[key];\n    if (!item.used) {\n      return {\n        ...item,\n        label: key,\n        isValid: item.valid(combintationHelper),\n        currentSum: item.sum(combintationHelper),\n      };\n    }\n    return {\n      ...item,\n      label: key,\n    };\n  })\n});\n\nconst getTotal = createSelector([getCurrentProtocol], (state) => {\n  return state.reduce((sum, currentItem) => {\n    return sum + currentItem.total;\n  }, 0);\n});\n\nconst getIsGameFinished = createSelector([getCurrentProtocol], (protocol) => {\n  return protocol.reduce((mem, { isUsed }) => {\n    return mem && isUsed;\n  }, true);\n});\n\nexport {\n  getCurrentRoundCombination,\n  getCurrentProtocol,\n  getTotal,\n  getBonus,\n  getIsGameFinished,\n}\n","import React from 'react';\nimport styled from 'styled-components'\nimport { connect } from 'react-redux';\nimport { Button, ButtonPrimaryAction, ButtonSecondaryAction } from 'Components/StyledComponents/Buttons';\n\nimport {\n  getTotal,\n  getIsGameFinished,\n} from 'reducers/yatzy/selectors';\n\nconst Dashboard = styled.div`\n  background: gold;\n  padding: 1em;\n  margin-bottom: 1em;\n\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst YatzyDashboard = ({\n  total,\n  onNewGameClick,\n  highScore,\n  gameFinished,\n  gameFinishedHandler,\n  userName,\n}) => {\n  const newGameHandler = () => {\n    onNewGameClick();\n  }\n\n  React.useEffect(() => {\n    if (gameFinished) {\n      gameFinishedHandler(total, userName);\n    }\n  }, [gameFinished]);\n\n  return (\n    <Dashboard>\n      <div>\n        <div>{`Total: ${total}`}</div>\n        <ButtonPrimaryAction onClick={newGameHandler}>New game</ButtonPrimaryAction>\n      </div>\n      <div>\n        {`Current highScore: `}\n        {highScore.map(({score, userName}) => (\n          <div key={`${userName}: ${score}`}>{`${userName}: ${score}`}</div>\n        ))}\n      </div>\n    </Dashboard>\n  );\n}\n\nconst mapStateToProps = ({ yatzyReducer: yatzyState, userReducer: userState = {} }) => {\n  return {\n    ...yatzyState,\n    ...yatzyState.yatzy,\n    highScore: yatzyState.highScore,\n    total: getTotal(yatzyState),\n    gameFinished: getIsGameFinished(yatzyState),\n    userName: userState.name || 'Navn Ukjent',\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onNewGameClick: () => {\n      dispatch({\n        type: 'YATZY_NEW_GAME',\n      })\n    },\n    gameFinishedHandler: (total, userName) => {\n      dispatch({\n        type: 'YATZY_GAME_FINISHED',\n        data: {\n          total,\n          userName,\n        }\n      })\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YatzyDashboard);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components'\n\nimport YatzyDashboard from 'Components/YatzyDashboard';\nimport { Button } from 'Components/StyledComponents/Buttons';\n\nimport {\n  getCurrentRoundCombination,\n  getCurrentProtocol,\n  getTotal,\n  getIsGameFinished,\n} from 'reducers/yatzy/selectors';\n\nconst DiceBoard = styled.div`\n  display: flex;\n`;\n\nconst Dice = styled.div`\n  font-size: 5rem;\n  cursor: pointer;\n`;\n\nconst Wrapper = styled.div`\n  flex: 2;\n  margin-left: 1em;\n`;\n\nconst Container = styled.div`\n  font-size: 1em;\n  padding: 1em;\n  background-color: white;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Protocol = styled.div`\n  display: grid;\n  grid-template-columns: auto 50px;\n  border: 1px solid #000;\n  grid-gap: 1px;\n`;\n\nconst ProtocolItem = styled.div`\n  grid-column-start: 1;\n  grid-column-end: 2;\n`;\n\nconst ProtocolKey = styled.div`\n  border: 1px solid aliceblue;\n  padding: 0.5em;\n  grid-column-start: 1;\n  align-self: center;\n  text-transform: capitalize;\n`;\n\nconst ProtocolValue = styled.div`\n  padding: 0.5em;\n  border: 1px solid aliceblue;\n  grid-column-start: 2;\n  text-align: end;\n  align-self: center;\n  cursor: ${props => props.isUsed ? 'auto' : 'pointer' };\n  background: ${props => props.isUsed ? 'aliceblue' : props.isValid ? 'papayawhip' : 'white' };\n`;\n\nconst Yatzy = ({\n    total,\n    dices,\n    rollDices,\n    availableRolls,\n    toggleDice,\n    combintationHelper,\n    setProtocolItemSum,\n    protocol,\n    highScore,\n    gameFinished,\n  }) => {  \n\n  const diceClickHandler = (id) => toggleDice(id);\n  const onProtocolValueClick = (obj) => {\n    if (obj.label !== 'bonus') {\n      setProtocolItemSum(obj);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <YatzyDashboard />\n      <Container>\n        <Protocol>\n          { protocol.map((obj) => {\n            return (\n              <React.Fragment key={obj.label}>\n                <ProtocolKey>{`${obj.label}: `}</ProtocolKey>\n                <ProtocolValue\n                  onClick={onProtocolValueClick.bind(this, obj)}\n                  isUsed={obj.isUsed}\n                  isValid={obj.currentSum > 0}\n                  disabled={obj.label === 'bonus'}\n                >\n                  {obj.isUsed ? `${obj.total}` : `${obj.currentSum}`}\n                </ProtocolValue>\n              </React.Fragment>\n            );\n          })}\n        </Protocol>\n        <Wrapper>\n          <div>\n            <div>\n              <Button onClick={rollDices} disabled={availableRolls === 0}>Roll Dices</Button>\n              <p>Rolls left: {availableRolls}</p>\n            </div>\n          </div>\n          <DiceBoard>\n            { dices.map(({ id, value, shouldReRoll }, i) => (\n              <Dice\n                style={{ color: shouldReRoll ? 'black' : 'cyan'}}\n                key={`dice-${id}`}\n                onClick={diceClickHandler.bind(this, id)}\n                dangerouslySetInnerHTML={{ __html: `&#x268${value}`}}\n              />\n            ))}\n          </DiceBoard>\n          { gameFinished &&\n            <div>\n              {`Game finished with a total of: ${total}`}\n            </div>\n          }\n        </Wrapper>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = ({ yatzyReducer: state}) => {\n  return {\n    ...state,\n    ...state.yatzy,\n    ...state.highScore,\n    combintationHelper: getCurrentRoundCombination(state),\n    protocol: getCurrentProtocol(state),\n    total: getTotal(state),\n    gameFinished: getIsGameFinished(state),\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    rollDices: () => {\n      dispatch({\n        type: 'YATZY_ROLL_DICES'\n      })\n    },\n    toggleDice: (id) => {\n      dispatch({\n        type: 'YATZY_TOGGLE_DICE',\n        data: {\n          id,\n        }\n      })\n    },\n    setProtocolItemSum: (protocolItem) => {\n      dispatch({\n        type: 'YATZY_SET_PROTOCOL_ITEM_SUM',\n        data: { ...protocolItem }\n      });\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Yatzy);","import styled from 'styled-components';\n\nconst Select = styled.select`\n  display: block;\n  margin: 0;\n \n  box-shadow: 0 1px 0 1px rgba(0,0,0,.04);\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  appearance: none;\n  background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E');\n  background-repeat: no-repeat, repeat;\n  background-position: right .7em top 50%, 0 0;\n  background-size: .65em auto, 100%;\n\n\n  background-color: transparent;\n  padding: ${props => props.theme.padding}rem;\n  border-radius: ${props => props.theme.borderRadius || 1}rem;\n  width: inherit;\n  transition: width 1s ease-in 0.3s;\n  cursor: pointer;\n  box-sizing: border-box;\n  font-size: inherit;\n  line-height: 1;\n  text-transform: uppercase;\n  text-align: center;\n\n  border: 0.06rem solid ${props => props.theme.secondaryColor};\n  color: ${props => props.theme.secondaryColor};\n\n  &:hover {\n    border-color: ${props => props.theme.primaryColor};\n    color: ${props => props.theme.primaryColor};\n  }\n\n  &:focus {\n    border-color: #aaa;\n    box-shadow: 0 0 1px 3px rgba(59, 153, 252, .7);\n    box-shadow: 0 0 0 3px -moz-mac-focusring;\n    color: #222;\n    outline: none;\n\n    border-color: ${props => props.theme.primaryColor};\n    color: ${props => props.theme.primaryColor};\n  }\n  \n  & > option {\n    font-weight:normal;\n  }\n`;\n\nconst Option = styled.option`\n  text-transform: capitalize;\n`\n\nexport {\n  Select,\n  Option,\n}","import React, {useState} from 'react';\nimport { connect } from 'react-redux'\nimport { ThemeProvider } from 'styled-components';\n\nimport {BreakpointProvider} from 'Contexts/BreakpointProvider'\n\nimport Dashboard from 'Components/Dashboard';\nimport Spider from 'Components/Games/Spider';\nimport Klondike from 'Components/Games/Klondike';\nimport Yukon from 'Components/Games/Yukon';\nimport Yatzy from 'Components/Games/Yatzy';\nimport { Select, Option } from 'Components/StyledComponents/Select';\n\nimport './App.css';\n\nconst queries = {\n  xs: '(max-width: 320px)',\n  sm: '(max-width: 720px)',\n  md: '(max-width: 1024px)',\n  l: '(min-width: 1024px)',\n  or: '(orientation: portrait)', // we can check orientation also\n}\n\nconst GAMES = {\n  YUKON: 'yukon',\n  KLONDIKE: 'klondike',\n  SPIDER: 'spider',\n  YATZY: 'yatzy',\n}\n\nconst getSelectedGameComponent = (game) => {\n  switch(game) {\n    case GAMES.KLONDIKE:\n      return <Klondike />;\n    case GAMES.SPIDER:\n      return <Spider />;\n    case GAMES.YUKON:\n      return <Yukon />;\n    case GAMES.YATZY:\n      return <Yatzy />;\n    default:\n      return <div>No valid game selected</div>;\n  }\n}\n\nconst theme = {\n  secondaryColor: \"#fefefe\",\n  primaryColor: \"#40b4de\",\n  primaryTextColor: '#0a3458',\n  borderRadius: 0.125,\n  baseSize: 1.75,\n  padding: 0.5,\n  breakpoints: queries,\n};\n\nfunction App(props) {\n  const [selectedGame, setSelectedGame] = useState(GAMES.YUKON);\n\n  const selectedGameComponent = getSelectedGameComponent(selectedGame);\n\n  return (\n    <BreakpointProvider queries={queries}>\n      <ThemeProvider theme={theme}>\n        <div className=\"Game\">\n          <div className=\"Game__dashboard\">\n            <Select\n              value={selectedGame}\n              onChange={e => setSelectedGame(e.target.value)}\n            >\n              {Object.values(GAMES).map((game) => (\n                <Option key={game} value={game}>\n                  {game}\n                </Option>\n              ))}\n            </Select>\n          </div>\n          <section className='Game__section'>\n            {selectedGameComponent}\n          </section>\n        </div>\n      </ThemeProvider>\n    </BreakpointProvider>\n  );\n}\n\nconst mapStateToProps = state => ({})\n\nconst mapDispatchToProps = dispatch => ({})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","function undoable(reducer) {\n  // Call the reducer with empty action to populate the initial state\n  const initialState = {\n    past: [],\n    present: reducer(undefined, {}),\n    future: []\n  }\n  // Return a reducer that handles undo and redo\n  return function(state = initialState, action) {\n    const { past, present, future } = state\n    switch (action.type) {\n      case 'UNDO':\n        if (past.length) {\n          const previous = past[past.length - 1]\n          const newPast = past.slice(0, past.length - 1)\n          return {\n            past: newPast,\n            present: previous,\n            future: [present, ...future]\n          }\n        }\n        return state;\n      case 'REDO':\n        const next = future[0]\n        const newFuture = future.slice(1)\n        return {\n          past: [...past, present],\n          present: next,\n          future: newFuture\n        }\n      default:\n        // Delegate handling the action to the passed reducer\n        const newPresent = reducer(present, action)\n        if (present === newPresent) {\n          return state\n        }\n        return {\n          past: [...past, present],\n          present: newPresent,\n          future: []\n        }\n    }\n  }\n}\n\nexport default undoable;\n","const spades = [\n{ \n  id: 's1',\n  label: '🂡',\n  value: 1,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's13',\n  label: '🂮',\n  value: 13,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's12',\n  label: '🂭',\n  value: 12,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's11',\n  label: '🂫',\n  value: 11,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's10',\n  label: '🂪',\n  value: 10,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's9',\n  label: '🂩',\n  value: 9,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's8',\n  label: '🂨',\n  value: 8,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's7',\n  label: '🂧',\n  value: 7,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's6',\n  label: '🂦',\n  value: 6,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's5',\n  label: '🂥',\n  value: 5,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's4',\n  label: '🂤',\n  value: 4,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's3',\n  label: '🂣',\n  value: 3,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n{ \n  id: 's2',\n  label: '🂢',\n  value: 2,\n  suite: 'spades',\n  color: 'black',\n  isFaceUp: false,\n},\n];\n\nexport default spades;","const diamonds = [\n  { \n    id: 'd1',\n    label: '🃁',\n    value: 1,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd13',\n    label: '🃎',\n    value: 13,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd12',\n    label: '🃍',\n    value: 12,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd11',\n    label: '🃋',\n    value: 11,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd10',\n    label: '🃊',\n    value: 10,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd9',\n    label: '🃉',\n    value: 9,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd8',\n    label: '🃈',\n    value: 8,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd7',\n    label: '🃇',\n    value: 7,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd6',\n    label: '🃆',\n    value: 6,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd5',\n    label: '🃅',\n    value: 5,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd4',\n    label: '🃄',\n    value: 4,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd3',\n    label: '🃃',\n    value: 3,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n  { \n    id: 'd2',\n    label: '🃂',\n    value: 2,\n    suite: 'diamonds',\n    color: 'red',\n    isFaceUp: false,\n  },\n];\n\nexport default diamonds;","const hearts = [\n  {\n    id: 'h1',\n    label: '🂱',\n    value: 1,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h13',\n    label: '🂾',\n    value: 13,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h12',\n    label: '🂽',\n    value: 12,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h11',\n    label: '🂻',\n    value: 11,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h10',\n    label: '🂺',\n    value: 10,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h9',\n    label: '🂹',\n    value: 9,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h8',\n    label: '🂸',\n    value: 8,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h7',\n    label: '🂷',\n    value: 7,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h6',\n    label: '🂶',\n    value: 6,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h5',\n    label: '🂵',\n    value: 5,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h4',\n    label: '🂴',\n    value: 4,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h3',\n    label: '🂳',\n    value: 3,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n  {\n    id: 'h2',\n    label: '🂲',\n    value: 2,\n    suite: 'hearts',\n    color: 'red',\n    isFaceUp: false,\n  },\n];\n\nexport default hearts;","const clubs = [\n  { \n    id: 'c1',\n    label: '🃑',\n    value: 1,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c13',\n    label: '🃞',\n    value: 13,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c12',\n    label: '🃝',\n    value: 12,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c11',\n    label: '🃛',\n    value: 11,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c10',\n    label: '🃚',\n    value: 10,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c9',\n    label: '🃙',\n    value: 9,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c8',\n    label: '🃘',\n    value: 8,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c7',\n    label: '🃗',\n    value: 7,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c6',\n    label: '🃖',\n    value: 6,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c5',\n    label: '🃕',\n    value: 5,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c4',\n    label: '🃔',\n    value: 4,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c3',\n    label: '🃓',\n    value: 3,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  },\n  { \n    id: 'c2',\n    label: '🃒',\n    value: 2,\n    suite: 'clubs',\n    color: 'black',\n    isFaceUp: false,\n  }\n];\n\nexport default clubs;","import spades from './spades';\nimport diamonds from './diamonds';\nimport hearts from './hearts';\nimport clubs from './clubs';\n\nconst shuffleArray = (array) => {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nconst setLastIsFaceUp = (cards) => {\n  if (cards.length === 0) {\n    return cards;\n  }\n\n  const reverseCards = [...cards];\n  const [last, ...allCards] = reverseCards.reverse();\n\n  return [\n    ...allCards,\n    setFaceIsUp(last),\n  ];\n}\n\nconst setFaceIsUp = (card) => {\n  return {\n    ...card,\n    isFaceUp: true,\n  }\n}\n\nconst moveToPile = (cards, pile) => {\n  const newPile = [...pile].concat(cards);\n  return newPile;\n}\n\nconst moveFromPile = (cardSourceIndex, pile) => {\n  var p1 = pile.slice(0, cardSourceIndex);\n  var p2 = grabCardsToBeMoved(cardSourceIndex, pile);\n\n  return {\n    moved: p2.map(card => ({...card, isFaceUp: true })),\n    remain: p1.map((card, i) => {\n      if(i === p1.length - 1) {\n        return {\n          ...card,\n          isFaceUp: true,\n        }\n      }\n      return card;\n    }),\n  };\n}\n\nconst moveCardsBetweenPilesInState = (state, { cardIndexAtSource, sourcePileKey, destPileKey }) => {\n  const { moved, remain } = moveFromPile(cardIndexAtSource, state[sourcePileKey]);\n  const newDestination = moveToPile(moved, state[destPileKey]);\n\n  return {\n    ...state,\n    [destPileKey]: newDestination,\n    [sourcePileKey]: remain,\n  }\n}\n\nconst cardDropHandler = (state, {destinationPile}, {cardIndexInPile, sourcePile}, allowDropHandler) => {\n  const { moved, remain } = moveFromPile(cardIndexInPile, state[sourcePile])\n  if (allowDropHandler(moved, state[destinationPile])) {\n    return {\n      ...state,\n      [sourcePile]: remain,\n      [destinationPile]: moveToPile(moved, state[destinationPile]),\n    };\n  }\n\n  return state;\n}\n\nconst grabCardsToBeMoved = (cardSourceIndex, pile) => {\n  return pile.slice(cardSourceIndex);\n}\n\nconst getLastCardInPile = (cards) => {\n  const reverseCards = [...cards];\n  const [last, ] = reverseCards.reverse();\n  return last;\n}\n\nconst createArrayWithKeys = (keyName, nr) => {\n  const foundationKeys = Array(nr).fill(keyName).map((value, i) => `${value}${i}`)\n  return foundationKeys;\n}\n\nconst createEmptyPiles = (piles) => {\n  return piles.reduce((mem, key) => {\n    return {\n      ...mem,\n      [key]: [],\n    }\n  }, {})\n}\n\nconst getCardsFromDeck = (deck, nrOfCards) => {\n  const cards = [];\n  let counter = Math.min(nrOfCards, deck.length - 1);\n  while(counter > 0) {\n    cards.push(deck.pop());\n    counter--;\n  }\n  return cards;\n}\n\nconst everyCardIsSameSuite = (cards, suite) => {\n  return cards.every(card => card.suite === suite);\n}\n\nconst arrayToObject = (keys, values) => {\n  const object = values.reduce((mem, obj, i) => {\n    const key = keys[i]\n    return {\n      ...mem,\n      [key]: obj\n    }\n  }, {});\n  return object;\n}\n\nexport {\n  shuffleArray,\n  clubs,\n  spades,\n  diamonds,\n  hearts,\n  setLastIsFaceUp,\n  moveToPile,\n  moveFromPile,\n  moveCardsBetweenPilesInState,\n  cardDropHandler,\n  grabCardsToBeMoved,\n  getLastCardInPile,\n  setFaceIsUp,\n\n  createArrayWithKeys,\n  createEmptyPiles,\n  getCardsFromDeck,\n  everyCardIsSameSuite,\n  arrayToObject,\n};\n","import undoable from './undoable';\nimport {\n  shuffleArray,\n  setLastIsFaceUp,\n  clubs,\n  diamonds,\n  hearts,\n  spades,\n  cardDropHandler,\n  moveCardsBetweenPilesInState,\n  getLastCardInPile,\n  createArrayWithKeys,\n  createEmptyPiles,\n  getCardsFromDeck,\n  arrayToObject,\n} from 'utils/';\n\nconst tableauPilesKeys = createArrayWithKeys('tableau', 7);\nconst foundationPilesKeys = createArrayWithKeys('foundation', 4);\n\nconst createDeck = () => {\n  return [clubs, diamonds, hearts, spades].map((suite, i) => {\n    return suite.map((card) => ({...card, key: `${card.id}${i}`}))\n  }).flat()\n}\n\nconst createFoundationPiles = (pileKeys) => {\n  return createEmptyPiles(pileKeys)\n}\n\nconst createTableauPilesFromDeck = (deck, pileKeys) => {\n  const pilesWithCards = pileKeys.map((_, i) => {\n    const cards = getCardsFromDeck(deck, i + 1);\n    return setLastIsFaceUp(cards);\n  });\n\n  return arrayToObject(pileKeys, pilesWithCards);\n}\n\nconst init = () => {\n  let deck = shuffleArray(createDeck());\n  const foundation = createFoundationPiles(foundationPilesKeys);\n  const tableauPiles = createTableauPilesFromDeck(deck, tableauPilesKeys);\n  return {\n    ...foundation,\n    ...tableauPiles,\n    stock: deck,\n    waste: [],\n    hasWon: false,\n\n    tableauPilesKeys,\n    foundationPilesKeys,\n  };\n}\n\nconst stockClickHandler = (game, { card }) => {\n  return moveCardsBetweenPilesInState(game, {\n    cardIndexAtSource: game.stock.length - 1,\n    sourcePileKey: 'stock',\n    destPileKey: 'waste',\n  });\n}\n\nconst checkHasWon = (state) => {\n  return {\n    ...state,\n    hasWon: foundationPilesKeys.reduce((mem, pileKey) => {\n      const pile = state[pileKey];\n      return mem && pile.length === 13;\n    }, true)\n  }\n}\n\nconst tableauClickHandler = (state, { card, cardIndexInPile, sourcePile }) => {\n  const isLastCard = cardIndexInPile === (state[sourcePile].length - 1)\n  const allowedFoundationPiles = isLastCard ? state.foundationPilesKeys.filter((pile) => {\n    return allowFoundationDrop([card], state[pile]);\n  }) : [];\n\n  const allowedTableauPiles = state.tableauPilesKeys.filter((pile) => {\n    return allowDropTableau([card], state[pile]);\n  })\n\n  const allowedPiles = allowedFoundationPiles.concat(allowedTableauPiles);\n\n  if (allowedPiles.length) {\n    const allowedPile = allowedPiles[0];\n\n    return moveCardsBetweenPilesInState(state, {\n      cardIndexAtSource: cardIndexInPile,\n      sourcePileKey: sourcePile,\n      destPileKey: allowedPile,\n    });\n  }\n\n  return state;\n}\n\nconst allowFoundationDrop = (cardsToBeMoved, destPile) => {\n  const cardToBeMoved = cardsToBeMoved[0];\n\n  if (cardsToBeMoved.length > 1) {\n    return false;\n  }\n\n  if(cardToBeMoved.value === 1 && !destPile.length) {\n    return true;\n  }\n\n  if (destPile.length) {\n    const lastCardInPile = getLastCardInPile(destPile);\n\n    const isSameSuite = lastCardInPile.suite === cardToBeMoved.suite;\n    const isRightValue = lastCardInPile.value === (cardToBeMoved.value - 1);\n\n    if(isSameSuite && isRightValue ) {\n      return true;\n    };\n  }\n\n  return false;\n}\n\n\nconst allowDropTableau = (cardsToBeMoved, destinationPile) => {\n  if (destinationPile.length === 0) {\n    return true;\n  }\n\n  const lastCardInPile = getLastCardInPile(destinationPile);\n\n  const firstCardToBeMoved = cardsToBeMoved[0];\n  const isOppositeColor = lastCardInPile.color !== firstCardToBeMoved.color;\n  const isRightValue = lastCardInPile.value === firstCardToBeMoved.value + 1;\n\n  return lastCardInPile.isFaceUp && isOppositeColor && isRightValue;\n};\n\nconst foundationDropHandler = (game, dropData, dragData) => {\n  return cardDropHandler(game, dropData, dragData, allowFoundationDrop);\n}\n\nconst tableauDropHandler = (game, dropData, dragData) => {\n  return cardDropHandler(game, dropData, dragData, allowDropTableau);\n}\n\nconst initialState = init();\n\nconst klondikeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'RE_DEAL':\n      return init();\n    case 'RE_RUN_DECK':\n      const newStock = [...state.waste].reverse();\n      return {\n        ...state,\n        waste: [],\n        stock: newStock,\n      }\n    case 'CLICK_STOCK':\n      return stockClickHandler(state, action.payload)\n    case 'CLICK_TABLEAU':\n      return checkHasWon(tableauClickHandler(state, action.payload))\n    case 'CLICK_WASTE':\n      return checkHasWon(tableauClickHandler(state, action.payload))\n    case 'DROP_FOUNDATION':\n      return checkHasWon(foundationDropHandler(state, action.payload.dropData, action.payload.dragData))\n    case 'DROP_TABLEAU':\n      return tableauDropHandler(state, action.payload.dropData, action.payload.dragData)\n    default:\n      return state;\n  }\n};\n\nexport default undoable(klondikeReducer);","import undoable from './undoable';\nimport {\n  shuffleArray,\n  setLastIsFaceUp,\n  hearts,\n  spades,\n  moveToPile,\n  moveFromPile,\n  moveCardsBetweenPilesInState,\n  cardDropHandler,\n  createArrayWithKeys,\n  createEmptyPiles,\n  getCardsFromDeck,\n  everyCardIsSameSuite,\n  arrayToObject,\n  getLastCardInPile,\n} from 'utils/';\n\nconst createDeck = () => {\n  return [\n    spades, hearts, hearts, spades,\n    spades, hearts, hearts, spades,\n  ].map((suite, i) => {\n    return suite.map((card) => ({...card, key: `${card.id}${i}`}))\n  })\n}\n\nconst tableauPilesKeys = createArrayWithKeys('tableau', 10);\nconst foundationPilesKeys = createArrayWithKeys('foundation', 8);\n\nconst createFoundationPiles = (pileKeys) => {\n  return createEmptyPiles(pileKeys)\n}\n\nconst createTableauPilesFromDeck = (deck, pileKeys) => {\n  const splitAtNr = 4;\n  const pilesWithCards = pileKeys.map((_, i) => {\n    const nrOfCards = i < splitAtNr ? 6 : 5;\n    const cards = getCardsFromDeck(deck, nrOfCards);\n    return setLastIsFaceUp(cards)\n  });\n  return arrayToObject(pileKeys, pilesWithCards);\n}\n\nconst init = () => {\n  let deck = shuffleArray(createDeck().flat());\n  const foundation = createFoundationPiles(foundationPilesKeys);\n  const tableauPiles = createTableauPilesFromDeck(deck, tableauPilesKeys);\n  return {\n    ...foundation,\n    ...tableauPiles,\n    stock: deck,\n    hasWon: false,\n\n    tableauPilesKeys,\n    foundationPilesKeys,\n  };\n}\n\nconst checkHasWon = (state) => {\n  return {\n    ...state,\n    hasWon: foundationPilesKeys.reduce((mem, pileKey) => {\n      const pile = state[pileKey];\n      return mem && pile.length === 13;\n    }, true)\n  }\n}\n\nconst stockClickHandler = (state) => {\n  const numberOfcards = Math.min(tableauPilesKeys.length, state.stock.length);\n  const cardsAtIndex = state.stock.length - numberOfcards;\n  const { moved, remain: newStock } = moveFromPile(cardsAtIndex, state.stock);\n\n  const newTableau = tableauPilesKeys.reduce((mem, tableauId) => {\n    if (moved.length) {\n      return {\n        ...mem,\n        [tableauId]: moveToPile([moved.pop()], state[tableauId])\n      }\n    }\n    return mem;\n  }, {})\n\n  return {\n    ...state,\n    stock: newStock,\n    ...newTableau,\n  };\n}\n\nconst findFirstAvailableFoundation = (state) => {\n  const index = foundationPilesKeys.findIndex((key) => {\n    return state[key].length === 0;\n  });\n\n  return foundationPilesKeys[index];\n}\n\nconst allowDropTableau = (cardsToBeMoved, destinationPile) => {\n  if (destinationPile.length === 0) {\n    return true;\n  }\n\n  const allIsSpades = everyCardIsSameSuite(cardsToBeMoved, 'spades');\n  const allIsHearts = everyCardIsSameSuite(cardsToBeMoved, 'hearts');\n\n  // TODO, check that its an allowed sequence\n  if (allIsHearts || allIsSpades) {\n\n    const lastCardInPile = getLastCardInPile(destinationPile);\n    const firstCardToBeMoved = cardsToBeMoved[0];\n    const isRightValue = lastCardInPile.value === firstCardToBeMoved.value + 1;\n\n    return isRightValue;\n  }\n\n  return false;\n};\n\nconst moveToFoundationPile = (state, sourcePileKey) => {\n  // TODO rewrite this to something readable\n  const sourcePile = [...state[sourcePileKey]];\n  const potentialMove = sourcePile.reduce((mem, obj, i) => {\n    if (mem.length === 13) {\n      return mem;\n    }\n\n    if (obj.value === 13 && obj.isFaceUp) {\n      return [obj];\n    }\n    \n    if (mem.length > 0) {\n      const prevCard = mem[mem.length-1];\n      if ((prevCard.value === obj.value + 1) && (prevCard.suite === obj.suite)) {\n        mem.push(obj)\n        return mem;\n      }\n      return [];\n    }\n    return mem;\n  }, []);\n\n  if (potentialMove.length === 13) {\n    const cardsAtIndex = state[sourcePileKey].findIndex((card) => {\n      // TODO fix key's and id's\n      return card.key === potentialMove[0].key\n    })\n\n    const foundationToMoveTo = findFirstAvailableFoundation(state);\n    return moveCardsBetweenPilesInState(state, {\n      cardIndexAtSource: cardsAtIndex,\n      sourcePileKey,\n      destPileKey: foundationToMoveTo,\n    });\n  }\n\n  return state;\n}\n\nconst tableauDropHandler = (state, { dropData, dragData }) => {\n  return cardDropHandler(state, dropData, dragData, allowDropTableau);\n}\n\nconst tableauClickHandler = (state, clickData) => {\n  const { card } = clickData;\n\n  const allowedTableauPiles = state.tableauPilesKeys.filter((pile) => {\n    return allowDropTableau([card], state[pile]);\n  })\n\n  if (allowedTableauPiles.length) {\n    const allowedPile = allowedTableauPiles[0];\n    const afterClickState = cardDropHandler(state, { destinationPile: allowedPile }, clickData, allowDropTableau);\n    return moveToFoundationPile(afterClickState, allowedPile)\n  }\n\n  return state;\n}\n\nconst spiderReducer = (state = init(), action) => {\n  switch (action.type) {\n    case 'RE_DEAL':\n      return init();\n    case 'SPIDER_CLICK_STOCK':\n      return stockClickHandler(state);\n    case 'SPIDER_CLICK_TABLEAU':\n      const afterClickState = tableauClickHandler(state, action.payload);\n      return checkHasWon(afterClickState)\n    case 'SPIDER_DROP_TABLEAU':\n      const afterDropState = tableauDropHandler(\n        state,\n        action.payload,\n      )\n      return checkHasWon(moveToFoundationPile(afterDropState, action.payload.dropData.destinationPile))\n    default:\n      return state;\n  }\n};\n\nexport default undoable(spiderReducer);","import undoable from './undoable';\nimport {\n  shuffleArray,\n  hearts,\n  spades,\n  clubs,\n  diamonds,\n  createEmptyPiles,\n  getCardsFromDeck,\n  setLastIsFaceUp,\n  arrayToObject,\n  createArrayWithKeys,\n  cardDropHandler,\n  getLastCardInPile,\n  moveCardsBetweenPilesInState\n} from 'utils/';\n\nconst tableauPilesKeys = createArrayWithKeys('tableau', 7);\nconst foundationPilesKeys = createArrayWithKeys('foundation', 4);\n\nconst createDeck = () => {\n  return [clubs, diamonds, hearts, spades].map((suite, i) => {\n    return suite.map((card) => ({...card, key: `${card.id}${i}`}))\n  })\n}\n\nconst createFoundationPiles = (pileKeys) => {\n  return createEmptyPiles(pileKeys)\n}\n\nconst createTableauPilesFromDeck = (deck, pileKeys) => {\n  let klondikeDeal = pileKeys.map((_, i) => {\n    const cards = getCardsFromDeck(deck, i + 1);\n    return setLastIsFaceUp(cards);\n  });\n\n  let indexCounter = 1;\n  while(deck.length > 0) {\n    const dealtCard = deck.pop(); \n    klondikeDeal[indexCounter].push({...dealtCard, isFaceUp: true });\n    indexCounter = (indexCounter % (klondikeDeal.length - 1)) + 1\n  }\n\n  return arrayToObject(pileKeys, klondikeDeal);\n}\n\nconst allowFoundationDrop = (cardsToBeMoved, destPile) => {\n  const cardToBeMoved = cardsToBeMoved[0];\n\n  if (cardsToBeMoved.length > 1) {\n    return false;\n  }\n\n  if(cardToBeMoved.value === 1 && !destPile.length) {\n    return true;\n  }\n\n  if (destPile.length) {\n    const lastCardInPile = getLastCardInPile(destPile);\n\n    const isSameSuite = lastCardInPile.suite === cardToBeMoved.suite;\n    const isRightValue = lastCardInPile.value === (cardToBeMoved.value - 1);\n\n    if(isSameSuite && isRightValue ) {\n      return true;\n    };\n  }\n\n  return false;\n}\n\n\nconst allowDropTableau = (cardsToBeMoved, destinationPile) => {\n  if (destinationPile.length === 0) {\n    return true;\n  }\n\n  const lastCardInPile = getLastCardInPile(destinationPile);\n\n  const firstCardToBeMoved = cardsToBeMoved[0];\n  const isOppositeColor = lastCardInPile.color !== firstCardToBeMoved.color;\n  const isRightValue = lastCardInPile.value === firstCardToBeMoved.value + 1;\n\n  return lastCardInPile.isFaceUp && isOppositeColor && isRightValue;\n};\n\nconst foundationDropHandler = (state, dropData, dragData) => {\n  return cardDropHandler(state, dropData, dragData, allowFoundationDrop);\n}\n\nconst tableauDropHandler = (state, dropData, dragData) => {\n  return cardDropHandler(state, dropData, dragData, allowDropTableau);\n}\n\nconst tableauClickHandler = (state, clickData) => {\n  const { card, cardIndexInPile, sourcePile } = clickData;\n  const isLastCard = cardIndexInPile === (state[sourcePile].length - 1)\n\n  const allowedFoundationPiles = isLastCard ? state.foundationPilesKeys.filter((pile) => {\n    return allowFoundationDrop([card], state[pile]);\n  }) : [];\n\n  const allowedTableauPiles = state.tableauPilesKeys.filter((pile) => {\n    return allowDropTableau([card], state[pile]);\n  })\n\n  const allowedPiles = allowedFoundationPiles.concat(allowedTableauPiles);\n\n  if (allowedPiles.length) {\n    const allowedPile = allowedPiles[0];\n\n    return moveCardsBetweenPilesInState(state, {\n      cardIndexAtSource: cardIndexInPile,\n      sourcePileKey: sourcePile,\n      destPileKey: allowedPile,\n    });\n  }\n\n  return state;\n}\n\nconst checkHasWon = (state) => {\n  return {\n    ...state,\n    hasWon: foundationPilesKeys.reduce((mem, pileKey) => {\n      const pile = state[pileKey];\n      return mem && pile.length === 13;\n    }, true)\n  }\n}\n\nconst init = () => {\n  let deck = shuffleArray(createDeck().flat());\n  const foundation = createFoundationPiles(foundationPilesKeys);\n  const tableauPiles = createTableauPilesFromDeck(deck, tableauPilesKeys);\n  return {\n    ...foundation,\n    ...tableauPiles,\n    hasWon: false,\n\n    tableauPilesKeys,\n    foundationPilesKeys,\n  };\n}\n\nconst yukonReducer = (state = init(), action) => {\n  switch (action.type) {\n    case 'RE_DEAL':\n      return init();\n    case 'YUKON_DROP_FOUNDATION':\n      return checkHasWon(foundationDropHandler(state, action.payload.dropData, action.payload.dragData))\n    case 'YUKON_DROP_TABLEAU':\n      return tableauDropHandler(state, action.payload.dropData, action.payload.dragData)\n    case 'YUKON_CLICK_TABLEAU':\n      return checkHasWon(tableauClickHandler(state, action.payload))\n    default:\n      return state;\n  }\n};\n\nexport default undoable(yukonReducer);","const getRandomFaceValue = () => {\n return Math.floor(Math.random() * 6);\n}\n\nconst rollDice = (dices) => {\n  return dices.map((dice) => ({\n    ...dice,\n    value: dice.shouldReRoll ? getRandomFaceValue() : dice.value,\n  }))\n}\n\nconst toggleDiceRoll = (dices, id) => {\n  return dices.map(dice => {\n    if (dice.id === id) {\n      return {...dice, shouldReRoll: !dice.shouldReRoll};\n    }\n    return dice;\n  })\n}\n\nconst initialDiceState = [\n  { id: 1, shouldReRoll: true, value: 0 },\n  { id: 2, shouldReRoll: true, value: 0 },\n  { id: 3, shouldReRoll: true, value: 0 },\n  { id: 4, shouldReRoll: true, value: 0 },\n  { id: 5, shouldReRoll: true, value: 0 },\n];\n\nconst dices = (state = rollDice(initialDiceState), action) => {\n  switch(action.type) {\n    case 'NEW_USER':\n    case 'YATZY_NEW_GAME':\n      return rollDice(initialDiceState);\n    case 'YATZY_ROLL_DICES':\n      return rollDice(state)\n    case 'YATZY_TOGGLE_DICE':\n      return toggleDiceRoll(state, action.data.id);\n    case 'YATZY_SET_PROTOCOL_ITEM_SUM':\n      return rollDice(initialDiceState);\n    default:\n      return state;\n  }\n  return state;\n}\n\nexport default dices;","  class XOfAKindClass {\n    constructor(nrOfKind) {\n      this.total = 0;\n      this.isUsed = false;\n      this.nrOfKind = nrOfKind;\n      this.faceIndex = -1;\n    }\n\n    valid(dices) {\n      this.faceIndex = - 1;\n      if (!this.isUsed) {\n        dices.forEach((diceCount, index) => {\n          if ((diceCount >= this.nrOfKind)) {\n            this.faceIndex = index;\n          }\n        });\n\n        return this.faceIndex >= 0;\n      }\n      return false;\n    }\n\n    getFaceValue(dices) {\n      this.valid(dices);\n      return this.faceIndex + 1;\n    }\n\n    sum(dices) {\n      if (this.valid(dices)) {\n        return this.getFaceValue(dices) * this.nrOfKind;\n      }\n      return 0;\n    }\n  }\n\n  class TwoPairs {\n    constructor() {\n      this.total = 0;\n      this.isUsed = false;\n    }\n\n    valid(combos) {\n      if (!this.isUsed) {\n        const overTwo = combos.reduce((mem, obj) => {\n          if (obj >= 2) {\n            mem = mem + 1;\n          }\n          return mem;\n        }, 0);\n        return overTwo >= 2;\n      }\n      return false;\n    }\n\n    sum(combos) {\n      if (this.valid(combos)) {      \n        let pairOfSame = false;\n        const pairArray = combos.reduce((mem, obj, idx) => {\n          if (obj >= 4) {\n            mem.push(idx);\n            pairOfSame = true;\n            return mem;\n          }\n          if (obj >= 2) {\n            mem.push(idx);\n          }\n          return mem;\n        }, []);\n\n        if (pairOfSame) {\n          return (pairArray.pop() + 1) * 4;\n        }\n\n        if (pairArray.length >= 2) {\n          const idx1 = pairArray.pop() + 1;\n          const idx2 = pairArray.pop() + 1;\n\n          return (idx1 * 2) + (idx2 * 2);\n        }\n      }\n      return 0;\n    }\n  };\n \n  class SmallStraight {\n    constructor() {\n      this.total = 0;\n      this.isUsed = false;\n    }\n\n    valid(combos) {\n      if (!this.isUsed) {\n        const at = combos.slice(0, combos.length - 1);\n        const tmp = at.filter(n => n !== 1);\n        return tmp.length === 0;\n      }\n      return false;\n    }\n\n    sum(combos) {\n      if (this.valid(combos)) {   \n        const at = combos.slice(0, combos.length - 1);\n        const tmp = at.filter(n => n !== 1);\n        if (tmp.length === 0) {        \n          return 15;\n        }\n      }\n      return 0;\n    }\n  };\n\n  class LargeStraight {\n    constructor() {\n      this.total = 0;\n      this.isUsed = false;\n    }\n\n    valid(combos) {\n      if (!this.isUsed) {\n        const at = combos.slice(1);\n        const tmp = at.filter(n => n !== 1);\n        return tmp.length === 0;\n      }\n      return false;\n    }\n\n    sum(combos) {\n      if (this.valid(combos)) {      \n        const at = combos.slice(1);\n        const tmp = at.filter(n => n !== 1);\n        if (tmp.length === 0) {        \n          return 20;\n        }\n      }\n      return 0;\n    }\n  };\n\n  class FullHouse {\n    constructor() {\n      this.total = 0;\n      this.isUsed = false;\n    }\n\n    valid(combos) {\n      if (!this.isUsed) {\n        let hasFoundThree = false;\n        let hasFoundTwo = false\n        return combos.reduceRight((isValid, diceCount, index) => {\n          if (!hasFoundThree) {\n            hasFoundThree = (diceCount >= 3);\n          }\n          if (!hasFoundTwo) {\n            hasFoundTwo = (diceCount >= 2);\n          }\n          return hasFoundTwo && hasFoundThree;\n        }, false);\n      }\n      return false;\n    }\n\n    sum(combos) {\n      if (this.valid(combos)) {\n        let hasFoundThree = false;\n        let hasFoundTwo = false;\n        let idx1 = 0;\n        let idx2 = 0;\n        for (var i = combos.length - 1; i >= 0; i--) {\n          if (!hasFoundThree && (combos[i] >= 3)) {\n            hasFoundThree = true;\n            idx1 = i + 1;\n          } else if (!hasFoundTwo && (combos[i] >= 2)) {\n            hasFoundTwo = true;\n            idx2 = i + 1;\n          }\n        }\n        if (!!idx1 && !!idx2) {\n          return (idx1 * 3) + (idx2 * 2);\n        }\n      }\n      return 0;\n    } \n  }\n\n class UpperSectionClass {\n    constructor(faceValue) {\n      this.total = 0;\n      this.isUsed = false;\n      this.faceValue = faceValue;\n      this.diceIndex = faceValue - 1;\n    }\n\n    valid(dices) {\n      if (!this.used) {\n        return dices[this.diceIndex] >= 0;\n      }\n      return false;\n    }\n\n    sum(dices) {\n      if (this.valid(dices)) {\n        return dices[this.diceIndex] * this.faceValue;\n      }\n      return 0;\n    }\n  }\n\nconst initialState = () => {\n  const upperSection = {\n    ones: new UpperSectionClass(1),\n    twos: new UpperSectionClass(2),\n    threes: new UpperSectionClass(3),\n    fours: new UpperSectionClass(4),\n    fives: new UpperSectionClass(5),\n    sixes: new UpperSectionClass(6),\n  };\n\n  const bonusForUpper = {\n    bonus: {\n      total: 0,\n      isUsed: false,\n      valid: () => false,\n      sum: () => 0,\n    },\n  }\n\n  const lowerSection = {\n    onePair: new XOfAKindClass(2),\n    twoPairs: new TwoPairs(),\n    threeOfAKind: new XOfAKindClass(3),\n    fourOfAKind: new XOfAKindClass(4),\n    smallStraight: new SmallStraight(),\n    largeStraight: new LargeStraight(),\n    fullHouse: new FullHouse(),\n    chance: {\n      total: 0,\n      isUsed: false,\n      valid: function() {\n        return !this.isUsed;\n      },\n      sum: (combos) => {\n        return combos.reduce((mem, nr, faceValue) => {\n          return mem + (nr * (faceValue + 1));\n        }, 0)\n      }\n    },\n    yatzy: new XOfAKindClass(5),\n  };\n  return { ...upperSection, ...bonusForUpper, ...lowerSection }\n};\n\nconst protocol = (state = initialState(), action) => {\n  switch(action.type) {\n    case 'NEW_USER':\n    case 'YATZY_NEW_GAME':\n      return initialState();\n    case 'YATZY_SET_PROTOCOL_ITEM_SUM':\n      const { label, currentSum, isValid, isUsed } = action.data;\n      if (!isUsed) { \n        const obj = state[label];\n        obj.total = currentSum;\n        obj.isUsed = true;\n\n        state[label] = obj;\n      }\n      return {\n        ...state\n      }\n    default:\n      return state\n  }\n  return state;\n};\n\nexport default protocol;","const initialState = [];\n\nconst highscore = (state = initialState, action) => {\n  switch(action.type) {\n    case '@@INIT':\n      const localState = window.localStorage.getItem('highscore');\n      if (localState) {\n        return JSON.parse(localState);\n      }\n      return state;\n    case 'YATZY_GAME_FINISHED':\n      const potHighScore = action.data.total;\n      const hasNewHighScore = potHighScore >= state.highScore;\n      const tmp = state;\n      tmp.push({ score: action.data.total, userName: action.data.userName });\n      const newHighscore = tmp.sort((a, b) => (b.score - a.score));\n      window.localStorage.setItem('highscore', JSON.stringify(newHighscore));\n      return newHighscore;\n    default:\n      return state;\n  }\n  return state;\n}\n\nexport default highscore;","import { combineReducers } from 'redux';\n\nimport dices from './dices';\nimport protocol from './protocol';\nimport highScore from './highscore';\n\nconst initialState = {\n  availableRolls: 2,\n};\n\nconst yatzy = (state = initialState, action) => {\n  switch(action.type) {\n    case 'NEW_USER':\n    case 'YATZY_NEW_GAME':\n      return {\n        ...initialState,\n      }\n    case 'YATZY_ROLL_DICES':\n      return {\n        ...state,\n        availableRolls: state.availableRolls - 1,\n      }\n    case 'YATZY_SET_PROTOCOL_ITEM_SUM':\n      return {\n        ...state,\n        availableRolls: initialState.availableRolls,\n      }\n    case 'YATZY_GAME_FINISHED':\n      return {\n\n      }\n    default:\n      return state;\n  }\n  return state;\n};\n\nexport default combineReducers({\n  yatzy,\n  dices,\n  protocol,\n  highScore,\n});\n","import { combineReducers } from 'redux'\nimport klondikeReducer from './klondikeReducer';\nimport spiderReducer from './spiderReducer';\nimport yukonReducer from './yukonReducer';\nimport yatzy from './yatzy/';\n\nconst solitaireApp = combineReducers({\n  klondike: klondikeReducer,\n  spider: spiderReducer,\n  yukon: yukonReducer,\n  yatzyReducer: yatzy,\n});\n\nexport default solitaireApp","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport './index.css';\n\nimport App from 'Components/App';\nimport rootReducer from './reducers';\n// import SpiderMoveToFoundation from './reducers/states/SpiderMoveToFoundation';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst initialState = {};\nconst store = createStore(rootReducer, initialState, composeWithDevTools())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}